{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":85,"index":85}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":86},"end":{"line":2,"column":43,"index":129}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"../utils/adjustOffsetForRTL","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":130},"end":{"line":3,"column":65,"index":195}}],"key":"gFxd7dSVSzyOKUPtU0ivmRRba9s=","exportNames":["*"],"imports":1}},{"name":"../../native/config/PlatformHelper","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":196},"end":{"line":4,"column":68,"index":264}}],"key":"VAeUL6D5iY8QXYEBY5o7Ew2wCF4=","exportNames":["*"],"imports":1}},{"name":"../../errors/WarningMessages","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":265},"end":{"line":5,"column":63,"index":328}}],"key":"p+HaK13YPlWydH8N4KkuSIQ9AD0=","exportNames":["*"],"imports":1}},{"name":"./useUnmountFlag","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":329},"end":{"line":6,"column":50,"index":379}}],"key":"LXLbqK8JtplOqn+vbyoibyvOisM=","exportNames":["*"],"imports":1}},{"name":"./useUnmountAwareCallbacks","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":380},"end":{"line":7,"column":68,"index":448}}],"key":"3BUUYvw+CD+nwK2jZFzshln47Y4=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.useRecyclerViewController = useRecyclerViewController;\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[2], \"react\");\n  var _reactNative = require(_dependencyMap[3], \"react-native\");\n  var _utilsAdjustOffsetForRTL = require(_dependencyMap[4], \"../utils/adjustOffsetForRTL\");\n  var _nativeConfigPlatformHelper = require(_dependencyMap[5], \"../../native/config/PlatformHelper\");\n  var _errorsWarningMessages = require(_dependencyMap[6], \"../../errors/WarningMessages\");\n  var _useUnmountFlag = require(_dependencyMap[7], \"./useUnmountFlag\");\n  var _useUnmountAwareCallbacks = require(_dependencyMap[8], \"./useUnmountAwareCallbacks\");\n  /**\n   * Comprehensive hook that manages RecyclerView scrolling behavior and provides\n   * imperative methods for controlling the RecyclerView.\n   *\n   * This hook combines content offset management and scroll handling functionality:\n   * 1. Provides imperative methods for scrolling and measurement\n   * 2. Handles initial scroll position when the list first loads\n   * 3. Maintains visible content position during updates\n   * 4. Manages scroll anchors for chat-like applications\n   *\n   * @param recyclerViewManager - The RecyclerViewManager instance that handles core functionality\n   * @param ref - The ref to expose the imperative methods\n   * @param scrollViewRef - Reference to the scrollable container component\n   * @param scrollAnchorRef - Reference to the scroll anchor component\n   * @param props - The RecyclerViewProps containing configuration\n   */\n  function useRecyclerViewController(recyclerViewManager, ref, scrollViewRef, scrollAnchorRef) {\n    var isUnmounted = (0, _useUnmountFlag.useUnmountFlag)();\n    var _useState = (0, _react.useState)(0),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      _ = _useState2[0],\n      setRenderId = _useState2[1];\n    var pauseOffsetCorrection = (0, _react.useRef)(false);\n    var initialScrollCompletedRef = (0, _react.useRef)(false);\n    var lastDataLengthRef = (0, _react.useRef)(recyclerViewManager.getDataLength());\n    var _useUnmountAwareTimeo = (0, _useUnmountAwareCallbacks.useUnmountAwareTimeout)(),\n      setTimeout = _useUnmountAwareTimeo.setTimeout;\n    // Track the first visible item for maintaining scroll position\n    var firstVisibleItemKey = (0, _react.useRef)(undefined);\n    var firstVisibleItemLayout = (0, _react.useRef)(undefined);\n    // Queue to store callbacks that should be executed after scroll offset updates\n    var pendingScrollCallbacks = (0, _react.useRef)([]);\n    // Handle initial scroll position when the list first loads\n    //   useOnLoad(recyclerViewManager, () => {\n    //   });\n    /**\n     * Updates the scroll offset and calls the provided callback\n     * after the update has been applied and the component has re-rendered.\n     *\n     * @param offset - The new scroll offset to apply\n     * @param callback - Optional callback to execute after the update is applied\n     */\n    var updateScrollOffsetWithCallback = (0, _react.useCallback)((offset, callback) => {\n      // Attempt to update the scroll offset in the RecyclerViewManager\n      // This returns undefined if no update is needed\n      if (recyclerViewManager.updateScrollOffset(offset) !== undefined) {\n        // It will be executed after the next render\n        pendingScrollCallbacks.current.push(callback);\n        // Trigger a re-render to apply the scroll offset update\n        setRenderId(prev => prev + 1);\n      } else {\n        // No update needed, execute callback immediately\n        callback();\n      }\n    }, [recyclerViewManager]);\n    var computeFirstVisibleIndexForOffsetCorrection = (0, _react.useCallback)(() => {\n      if (recyclerViewManager.getIsFirstLayoutComplete() && recyclerViewManager.hasStableDataKeys() && recyclerViewManager.getDataLength() > 0 && recyclerViewManager.shouldMaintainVisibleContentPosition()) {\n        // Update the tracked first visible item\n        var firstVisibleIndex = Math.max(0, recyclerViewManager.computeVisibleIndices().startIndex);\n        if (firstVisibleIndex !== undefined && firstVisibleIndex >= 0) {\n          firstVisibleItemKey.current = recyclerViewManager.getDataKey(firstVisibleIndex);\n          firstVisibleItemLayout.current = {\n            ...recyclerViewManager.getLayout(firstVisibleIndex)\n          };\n        }\n      }\n    }, [recyclerViewManager]);\n    /**\n     * Maintains the visible content position when the list updates.\n     * This is particularly useful for chat applications where we want to keep\n     * the user's current view position when new messages are added.\n     */\n    var applyOffsetCorrection = (0, _react.useCallback)(() => {\n      var _a, _b, _c;\n      var _recyclerViewManager$ = recyclerViewManager.props,\n        horizontal = _recyclerViewManager$.horizontal,\n        data = _recyclerViewManager$.data;\n      // Execute all pending callbacks from previous scroll offset updates\n      // This ensures any scroll operations that were waiting for render are completed\n      var callbacks = pendingScrollCallbacks.current;\n      pendingScrollCallbacks.current = [];\n      callbacks.forEach(callback => callback());\n      var currentDataLength = recyclerViewManager.getDataLength();\n      if (recyclerViewManager.getIsFirstLayoutComplete() && recyclerViewManager.hasStableDataKeys() && currentDataLength > 0 && recyclerViewManager.shouldMaintainVisibleContentPosition()) {\n        var hasDataChanged = currentDataLength !== lastDataLengthRef.current;\n        // If we have a tracked first visible item, maintain its position\n        if (firstVisibleItemKey.current) {\n          var currentIndexOfFirstVisibleItem = (_a = recyclerViewManager.getEngagedIndices().findValue(index => recyclerViewManager.getDataKey(index) === firstVisibleItemKey.current)) !== null && _a !== void 0 ? _a : hasDataChanged ? data === null || data === void 0 ? void 0 : data.findIndex((item, index) => recyclerViewManager.getDataKey(index) === firstVisibleItemKey.current) : undefined;\n          if (currentIndexOfFirstVisibleItem !== undefined && currentIndexOfFirstVisibleItem >= 0) {\n            // Calculate the difference in position and apply the offset\n            var diff = horizontal ? recyclerViewManager.getLayout(currentIndexOfFirstVisibleItem).x - firstVisibleItemLayout.current.x : recyclerViewManager.getLayout(currentIndexOfFirstVisibleItem).y - firstVisibleItemLayout.current.y;\n            firstVisibleItemLayout.current = {\n              ...recyclerViewManager.getLayout(currentIndexOfFirstVisibleItem)\n            };\n            if (diff !== 0 && !pauseOffsetCorrection.current && !recyclerViewManager.animationOptimizationsEnabled) {\n              // console.log(\"diff\", diff, firstVisibleItemKey.current);\n              if (_nativeConfigPlatformHelper.PlatformConfig.supportsOffsetCorrection) {\n                // console.log(\"scrollBy\", diff);\n                (_b = scrollAnchorRef.current) === null || _b === void 0 ? void 0 : _b.scrollBy(diff);\n              } else {\n                var scrollToParams = horizontal ? {\n                  x: recyclerViewManager.getAbsoluteLastScrollOffset() + diff,\n                  animated: false\n                } : {\n                  y: recyclerViewManager.getAbsoluteLastScrollOffset() + diff,\n                  animated: false\n                };\n                (_c = scrollViewRef.current) === null || _c === void 0 ? void 0 : _c.scrollTo(scrollToParams);\n              }\n              if (hasDataChanged) {\n                updateScrollOffsetWithCallback(recyclerViewManager.getAbsoluteLastScrollOffset() + diff, () => {});\n                recyclerViewManager.ignoreScrollEvents = true;\n                setTimeout(() => {\n                  recyclerViewManager.ignoreScrollEvents = false;\n                }, 100);\n              }\n            }\n          }\n        }\n        computeFirstVisibleIndexForOffsetCorrection();\n      }\n      lastDataLengthRef.current = recyclerViewManager.getDataLength();\n    }, [recyclerViewManager, scrollAnchorRef, scrollViewRef, setTimeout, updateScrollOffsetWithCallback, computeFirstVisibleIndexForOffsetCorrection]);\n    var handlerMethods = (0, _react.useMemo)(() => {\n      return {\n        get props() {\n          return recyclerViewManager.props;\n        },\n        /**\n         * Scrolls the list to a specific offset position.\n         * Handles RTL layouts and first item offset adjustments.\n         */\n        scrollToOffset: _ref => {\n          var offset = _ref.offset,\n            animated = _ref.animated,\n            _ref$skipFirstItemOff = _ref.skipFirstItemOffset,\n            skipFirstItemOffset = _ref$skipFirstItemOff === void 0 ? true : _ref$skipFirstItemOff;\n          var horizontal = recyclerViewManager.props.horizontal;\n          if (scrollViewRef.current) {\n            // Adjust offset for RTL layouts in horizontal mode\n            if (_reactNative.I18nManager.isRTL && horizontal) {\n              // eslint-disable-next-line no-param-reassign\n              offset = (0, _utilsAdjustOffsetForRTL.adjustOffsetForRTL)(offset, recyclerViewManager.getChildContainerDimensions().width, recyclerViewManager.getWindowSize().width) + (skipFirstItemOffset ? recyclerViewManager.firstItemOffset : -recyclerViewManager.firstItemOffset);\n            }\n            // Calculate the final offset including first item offset if needed\n            var adjustedOffset = offset + (skipFirstItemOffset ? 0 : recyclerViewManager.firstItemOffset);\n            var scrollTo = horizontal ? {\n              x: adjustedOffset,\n              y: 0\n            } : {\n              x: 0,\n              y: adjustedOffset\n            };\n            scrollViewRef.current.scrollTo({\n              ...scrollTo,\n              animated\n            });\n          }\n        },\n        clearLayoutCacheOnUpdate: () => {\n          recyclerViewManager.markLayoutManagerDirty();\n        },\n        // Expose native scroll view methods\n        flashScrollIndicators: () => {\n          scrollViewRef.current.flashScrollIndicators();\n        },\n        getNativeScrollRef: () => {\n          return scrollViewRef.current;\n        },\n        getScrollResponder: () => {\n          return scrollViewRef.current.getScrollResponder();\n        },\n        getScrollableNode: () => {\n          return scrollViewRef.current.getScrollableNode();\n        },\n        /**\n         * Scrolls to the end of the list.\n         */\n        scrollToEnd: function () {\n          var _ref2 = (0, _asyncToGenerator.default)(function* () {\n            var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n              animated = _ref3.animated;\n            var data = recyclerViewManager.props.data;\n            if (data && data.length > 0) {\n              var lastIndex = data.length - 1;\n              if (!recyclerViewManager.getEngagedIndices().includes(lastIndex)) {\n                yield handlerMethods.scrollToIndex({\n                  index: lastIndex,\n                  animated\n                });\n              }\n            }\n            setTimeout(() => {\n              var _a;\n              (_a = scrollViewRef.current) === null || _a === void 0 ? void 0 : _a.scrollToEnd({\n                animated\n              });\n            }, 0);\n          });\n          return function scrollToEnd() {\n            return _ref2.apply(this, arguments);\n          };\n        }(),\n        /**\n         * Scrolls to the beginning of the list.\n         */\n        scrollToTop: function () {\n          var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            animated = _ref4.animated;\n          handlerMethods.scrollToOffset({\n            offset: 0,\n            animated\n          });\n        },\n        /**\n         * Scrolls to a specific index in the list.\n         * Supports viewPosition and viewOffset for precise positioning.\n         * Returns a Promise that resolves when the scroll is complete.\n         */\n        scrollToIndex: _ref5 => {\n          var index = _ref5.index,\n            animated = _ref5.animated,\n            viewPosition = _ref5.viewPosition,\n            viewOffset = _ref5.viewOffset;\n          return new Promise(resolve => {\n            var horizontal = recyclerViewManager.props.horizontal;\n            if (scrollViewRef.current && index >= 0 && index < recyclerViewManager.getDataLength()) {\n              // Pause the scroll offset adjustments\n              pauseOffsetCorrection.current = true;\n              recyclerViewManager.setOffsetProjectionEnabled(false);\n              var getFinalOffset = () => {\n                var layout = recyclerViewManager.getLayout(index);\n                var offset = horizontal ? layout.x : layout.y;\n                var finalOffset = offset;\n                // take viewPosition etc into account\n                if (viewPosition !== undefined || viewOffset !== undefined) {\n                  var containerSize = horizontal ? recyclerViewManager.getWindowSize().width : recyclerViewManager.getWindowSize().height;\n                  var itemSize = horizontal ? layout.width : layout.height;\n                  if (viewPosition !== undefined) {\n                    // viewPosition: 0 = top, 0.5 = center, 1 = bottom\n                    finalOffset = offset - (containerSize - itemSize) * viewPosition;\n                  }\n                  if (viewOffset !== undefined) {\n                    finalOffset += viewOffset;\n                  }\n                }\n                return finalOffset + recyclerViewManager.firstItemOffset;\n              };\n              var lastAbsoluteScrollOffset = recyclerViewManager.getAbsoluteLastScrollOffset();\n              var bufferForScroll = horizontal ? recyclerViewManager.getWindowSize().width : recyclerViewManager.getWindowSize().height;\n              var bufferForCompute = bufferForScroll * 2;\n              var getStartScrollOffset = () => {\n                var lastScrollOffset = lastAbsoluteScrollOffset;\n                var finalOffset = getFinalOffset();\n                if (finalOffset > lastScrollOffset) {\n                  lastScrollOffset = Math.max(finalOffset - bufferForCompute, lastScrollOffset);\n                  recyclerViewManager.setScrollDirection(\"forward\");\n                } else {\n                  lastScrollOffset = Math.min(finalOffset + bufferForCompute, lastScrollOffset);\n                  recyclerViewManager.setScrollDirection(\"backward\");\n                }\n                return lastScrollOffset;\n              };\n              var initialTargetOffset = getFinalOffset();\n              var initialStartScrollOffset = getStartScrollOffset();\n              var finalOffset = initialTargetOffset;\n              var startScrollOffset = initialStartScrollOffset;\n              var steps = 5;\n              /**\n               * Recursively performs the scroll animation steps.\n               * This function replaces the async/await loop with callback-based execution.\n               *\n               * @param currentStep - The current step in the animation (0 to steps-1)\n               */\n              var performScrollStep = currentStep => {\n                // Check if component is unmounted or we've completed all steps\n                if (isUnmounted.current) {\n                  resolve();\n                  return;\n                } else if (currentStep >= steps) {\n                  // All steps completed, perform final scroll\n                  finishScrollToIndex();\n                  return;\n                }\n                // Calculate the offset for this step\n                // For animated scrolls: interpolate from finalOffset to startScrollOffset\n                // For non-animated: interpolate from startScrollOffset to finalOffset\n                var nextOffset = animated ? finalOffset + (startScrollOffset - finalOffset) * (currentStep / (steps - 1)) : startScrollOffset + (finalOffset - startScrollOffset) * (currentStep / (steps - 1));\n                // Update scroll offset with a callback to continue to the next step\n                updateScrollOffsetWithCallback(nextOffset, () => {\n                  // Check if the index is still valid after the update\n                  if (index >= recyclerViewManager.getDataLength()) {\n                    // Index out of bounds, scroll to end instead\n                    handlerMethods.scrollToEnd({\n                      animated\n                    });\n                    resolve(); // Resolve the promise as we're done\n                    return;\n                  }\n                  // Check if the target position has changed significantly\n                  var newFinalOffset = getFinalOffset();\n                  if (newFinalOffset < initialTargetOffset && newFinalOffset < initialStartScrollOffset || newFinalOffset > initialTargetOffset && newFinalOffset > initialStartScrollOffset) {\n                    // Target has moved, recalculate and restart from beginning\n                    finalOffset = newFinalOffset;\n                    startScrollOffset = getStartScrollOffset();\n                    initialTargetOffset = newFinalOffset;\n                    initialStartScrollOffset = startScrollOffset;\n                    performScrollStep(0); // Restart from step 0\n                  } else {\n                    // Continue to next step\n                    performScrollStep(currentStep + 1);\n                  }\n                });\n              };\n              /**\n               * Completes the scroll to index operation by performing the final scroll\n               * and re-enabling offset correction after a delay.\n               */\n              var finishScrollToIndex = () => {\n                finalOffset = getFinalOffset();\n                var maxOffset = recyclerViewManager.getMaxScrollOffset();\n                if (finalOffset > maxOffset) {\n                  finalOffset = maxOffset;\n                }\n                if (animated) {\n                  // For animated scrolls, first jump to the start position\n                  // We don't need to add firstItemOffset here as it's already added\n                  handlerMethods.scrollToOffset({\n                    offset: startScrollOffset,\n                    animated: false,\n                    skipFirstItemOffset: true\n                  });\n                }\n                // Perform the final scroll to the target position\n                handlerMethods.scrollToOffset({\n                  offset: finalOffset,\n                  animated,\n                  skipFirstItemOffset: true\n                });\n                // Re-enable offset correction after a delay\n                // Longer delay for animated scrolls to allow animation to complete\n                setTimeout(() => {\n                  pauseOffsetCorrection.current = false;\n                  recyclerViewManager.setOffsetProjectionEnabled(true);\n                  resolve(); // Resolve the promise after re-enabling corrections\n                }, animated ? 300 : 200);\n              };\n              // Start the scroll animation process\n              performScrollStep(0);\n            } else {\n              // Invalid parameters, resolve immediately\n              resolve();\n            }\n          });\n        },\n        /**\n         * Scrolls to a specific item in the list.\n         * Finds the item's index and uses scrollToIndex internally.\n         */\n        scrollToItem: _ref6 => {\n          var item = _ref6.item,\n            animated = _ref6.animated,\n            viewPosition = _ref6.viewPosition,\n            viewOffset = _ref6.viewOffset;\n          var data = recyclerViewManager.props.data;\n          if (scrollViewRef.current && data) {\n            // Find the index of the item in the data array\n            var index = data.findIndex(dataItem => dataItem === item);\n            if (index >= 0) {\n              handlerMethods.scrollToIndex({\n                index,\n                animated,\n                viewPosition,\n                viewOffset\n              });\n            }\n          }\n        },\n        // Utility methods for measuring header height / top padding\n        getFirstItemOffset: () => {\n          return recyclerViewManager.firstItemOffset;\n        },\n        getWindowSize: () => {\n          return recyclerViewManager.getWindowSize();\n        },\n        getLayout: index => {\n          return recyclerViewManager.tryGetLayout(index);\n        },\n        getAbsoluteLastScrollOffset: () => {\n          return recyclerViewManager.getAbsoluteLastScrollOffset();\n        },\n        getChildContainerDimensions: () => {\n          return recyclerViewManager.getChildContainerDimensions();\n        },\n        recordInteraction: () => {\n          recyclerViewManager.recordInteraction();\n        },\n        computeVisibleIndices: () => {\n          return recyclerViewManager.computeVisibleIndices();\n        },\n        getFirstVisibleIndex: () => {\n          return recyclerViewManager.computeVisibleIndices().startIndex;\n        },\n        recomputeViewableItems: () => {\n          recyclerViewManager.recomputeViewableItems();\n        },\n        /**\n         * Disables item recycling in preparation for layout animations.\n         */\n        prepareForLayoutAnimationRender: () => {\n          if (!recyclerViewManager.props.keyExtractor) {\n            console.warn(_errorsWarningMessages.WarningMessages.keyExtractorNotDefinedForAnimation);\n          }\n          recyclerViewManager.animationOptimizationsEnabled = true;\n        }\n      };\n    }, [recyclerViewManager, scrollViewRef, setTimeout, isUnmounted, updateScrollOffsetWithCallback]);\n    var applyInitialScrollIndex = (0, _react.useCallback)(() => {\n      var _a, _b, _c;\n      var _recyclerViewManager$2 = recyclerViewManager.props,\n        horizontal = _recyclerViewManager$2.horizontal,\n        data = _recyclerViewManager$2.data,\n        initialScrollIndexParams = _recyclerViewManager$2.initialScrollIndexParams;\n      var initialScrollIndex = (_a = recyclerViewManager.getInitialScrollIndex()) !== null && _a !== void 0 ? _a : -1;\n      var dataLength = (_b = data === null || data === void 0 ? void 0 : data.length) !== null && _b !== void 0 ? _b : 0;\n      if (initialScrollIndex >= 0 && initialScrollIndex < dataLength && !initialScrollCompletedRef.current && recyclerViewManager.getIsFirstLayoutComplete()) {\n        // Use setTimeout to ensure that we keep trying to scroll on first few renders\n        setTimeout(() => {\n          initialScrollCompletedRef.current = true;\n          pauseOffsetCorrection.current = false;\n        }, 100);\n        pauseOffsetCorrection.current = true;\n        var additionalOffset = (_c = initialScrollIndexParams === null || initialScrollIndexParams === void 0 ? void 0 : initialScrollIndexParams.viewOffset) !== null && _c !== void 0 ? _c : 0;\n        var offset = horizontal ? recyclerViewManager.getLayout(initialScrollIndex).x + additionalOffset : recyclerViewManager.getLayout(initialScrollIndex).y + additionalOffset;\n        handlerMethods.scrollToOffset({\n          offset,\n          animated: false,\n          skipFirstItemOffset: false\n        });\n        setTimeout(() => {\n          handlerMethods.scrollToOffset({\n            offset,\n            animated: false,\n            skipFirstItemOffset: false\n          });\n        }, 0);\n      }\n    }, [handlerMethods, recyclerViewManager, setTimeout]);\n    // Expose imperative methods through the ref\n    (0, _react.useImperativeHandle)(ref, () => {\n      var imperativeApi = {\n        ...scrollViewRef.current,\n        ...handlerMethods\n      };\n      // Without this the props getter from handlerMethods is evaluated during spread and\n      // future updates to props are not reflected in the ref\n      Object.defineProperty(imperativeApi, \"props\", {\n        get() {\n          return recyclerViewManager.props;\n        },\n        enumerable: true,\n        configurable: true\n      });\n      return imperativeApi;\n    }, [handlerMethods, scrollViewRef, recyclerViewManager]);\n    return {\n      applyOffsetCorrection,\n      computeFirstVisibleIndexForOffsetCorrection,\n      applyInitialScrollIndex,\n      handlerMethods\n    };\n  }\n});","lineCount":496,"map":[[12,2,24,0,"exports"],[12,9,24,0],[12,10,24,0,"useRecyclerViewController"],[12,35,24,0],[12,38,24,0,"useRecyclerViewController"],[12,63,24,0],[13,2,506,1],[13,6,506,1,"_babelRuntimeHelpersAsyncToGenerator"],[13,42,506,1],[13,45,506,1,"require"],[13,52,506,1],[13,53,506,1,"_dependencyMap"],[13,67,506,1],[14,2,506,1],[14,6,506,1,"_asyncToGenerator"],[14,23,506,1],[14,26,506,1,"_interopDefault"],[14,41,506,1],[14,42,506,1,"_babelRuntimeHelpersAsyncToGenerator"],[14,78,506,1],[15,2,506,1],[15,6,506,1,"_babelRuntimeHelpersSlicedToArray"],[15,39,506,1],[15,42,506,1,"require"],[15,49,506,1],[15,50,506,1,"_dependencyMap"],[15,64,506,1],[16,2,506,1],[16,6,506,1,"_slicedToArray"],[16,20,506,1],[16,23,506,1,"_interopDefault"],[16,38,506,1],[16,39,506,1,"_babelRuntimeHelpersSlicedToArray"],[16,72,506,1],[17,2,1,0],[17,6,1,0,"_react"],[17,12,1,0],[17,15,1,0,"require"],[17,22,1,0],[17,23,1,0,"_dependencyMap"],[17,37,1,0],[18,2,2,0],[18,6,2,0,"_reactNative"],[18,18,2,0],[18,21,2,0,"require"],[18,28,2,0],[18,29,2,0,"_dependencyMap"],[18,43,2,0],[19,2,3,0],[19,6,3,0,"_utilsAdjustOffsetForRTL"],[19,30,3,0],[19,33,3,0,"require"],[19,40,3,0],[19,41,3,0,"_dependencyMap"],[19,55,3,0],[20,2,4,0],[20,6,4,0,"_nativeConfigPlatformHelper"],[20,33,4,0],[20,36,4,0,"require"],[20,43,4,0],[20,44,4,0,"_dependencyMap"],[20,58,4,0],[21,2,5,0],[21,6,5,0,"_errorsWarningMessages"],[21,28,5,0],[21,31,5,0,"require"],[21,38,5,0],[21,39,5,0,"_dependencyMap"],[21,53,5,0],[22,2,6,0],[22,6,6,0,"_useUnmountFlag"],[22,21,6,0],[22,24,6,0,"require"],[22,31,6,0],[22,32,6,0,"_dependencyMap"],[22,46,6,0],[23,2,7,0],[23,6,7,0,"_useUnmountAwareCallbacks"],[23,31,7,0],[23,34,7,0,"require"],[23,41,7,0],[23,42,7,0,"_dependencyMap"],[23,56,7,0],[24,2,8,0],[25,0,9,0],[26,0,10,0],[27,0,11,0],[28,0,12,0],[29,0,13,0],[30,0,14,0],[31,0,15,0],[32,0,16,0],[33,0,17,0],[34,0,18,0],[35,0,19,0],[36,0,20,0],[37,0,21,0],[38,0,22,0],[39,0,23,0],[40,2,24,7],[40,11,24,16,"useRecyclerViewController"],[40,36,24,41,"useRecyclerViewController"],[40,37,24,42,"recyclerViewManager"],[40,56,24,61],[40,58,24,63,"ref"],[40,61,24,66],[40,63,24,68,"scrollViewRef"],[40,76,24,81],[40,78,24,83,"scrollAnchorRef"],[40,93,24,98],[40,95,24,100],[41,4,25,4],[41,8,25,10,"isUnmounted"],[41,19,25,21],[41,22,25,24],[41,26,25,24,"useUnmountFlag"],[41,41,25,38],[41,42,25,38,"useUnmountFlag"],[41,56,25,38],[41,58,25,39],[41,59,25,40],[42,4,26,4],[42,8,26,4,"_useState"],[42,17,26,4],[42,20,26,29],[42,24,26,29,"useState"],[42,30,26,37],[42,31,26,37,"useState"],[42,39,26,37],[42,41,26,38],[42,42,26,39],[42,43,26,40],[43,6,26,40,"_useState2"],[43,16,26,40],[43,23,26,40,"_slicedToArray"],[43,37,26,40],[43,38,26,40,"default"],[43,45,26,40],[43,47,26,40,"_useState"],[43,56,26,40],[44,6,26,11,"_"],[44,7,26,12],[44,10,26,12,"_useState2"],[44,20,26,12],[45,6,26,14,"setRenderId"],[45,17,26,25],[45,20,26,25,"_useState2"],[45,30,26,25],[46,4,27,4],[46,8,27,10,"pauseOffsetCorrection"],[46,29,27,31],[46,32,27,34],[46,36,27,34,"useRef"],[46,42,27,40],[46,43,27,40,"useRef"],[46,49,27,40],[46,51,27,41],[46,56,27,46],[46,57,27,47],[47,4,28,4],[47,8,28,10,"initialScrollCompletedRef"],[47,33,28,35],[47,36,28,38],[47,40,28,38,"useRef"],[47,46,28,44],[47,47,28,44,"useRef"],[47,53,28,44],[47,55,28,45],[47,60,28,50],[47,61,28,51],[48,4,29,4],[48,8,29,10,"lastDataLengthRef"],[48,25,29,27],[48,28,29,30],[48,32,29,30,"useRef"],[48,38,29,36],[48,39,29,36,"useRef"],[48,45,29,36],[48,47,29,37,"recyclerViewManager"],[48,66,29,56],[48,67,29,57,"getDataLength"],[48,80,29,70],[48,81,29,71],[48,82,29,72],[48,83,29,73],[49,4,30,4],[49,8,30,4,"_useUnmountAwareTimeo"],[49,29,30,4],[49,32,30,27],[49,36,30,27,"useUnmountAwareTimeout"],[49,61,30,49],[49,62,30,49,"useUnmountAwareTimeout"],[49,84,30,49],[49,86,30,50],[49,87,30,51],[50,6,30,12,"setTimeout"],[50,16,30,22],[50,19,30,22,"_useUnmountAwareTimeo"],[50,40,30,22],[50,41,30,12,"setTimeout"],[50,51,30,22],[51,4,31,4],[52,4,32,4],[52,8,32,10,"firstVisibleItemKey"],[52,27,32,29],[52,30,32,32],[52,34,32,32,"useRef"],[52,40,32,38],[52,41,32,38,"useRef"],[52,47,32,38],[52,49,32,39,"undefined"],[52,58,32,48],[52,59,32,49],[53,4,33,4],[53,8,33,10,"firstVisibleItemLayout"],[53,30,33,32],[53,33,33,35],[53,37,33,35,"useRef"],[53,43,33,41],[53,44,33,41,"useRef"],[53,50,33,41],[53,52,33,42,"undefined"],[53,61,33,51],[53,62,33,52],[54,4,34,4],[55,4,35,4],[55,8,35,10,"pendingScrollCallbacks"],[55,30,35,32],[55,33,35,35],[55,37,35,35,"useRef"],[55,43,35,41],[55,44,35,41,"useRef"],[55,50,35,41],[55,52,35,42],[55,54,35,44],[55,55,35,45],[56,4,36,4],[57,4,37,4],[58,4,38,4],[59,4,39,4],[60,0,40,0],[61,0,41,0],[62,0,42,0],[63,0,43,0],[64,0,44,0],[65,0,45,0],[66,4,46,4],[66,8,46,10,"updateScrollOffsetWithCallback"],[66,38,46,40],[66,41,46,43],[66,45,46,43,"useCallback"],[66,51,46,54],[66,52,46,54,"useCallback"],[66,63,46,54],[66,65,46,55],[66,66,46,56,"offset"],[66,72,46,62],[66,74,46,64,"callback"],[66,82,46,72],[66,87,46,77],[67,6,47,8],[68,6,48,8],[69,6,49,8],[69,10,49,12,"recyclerViewManager"],[69,29,49,31],[69,30,49,32,"updateScrollOffset"],[69,48,49,50],[69,49,49,51,"offset"],[69,55,49,57],[69,56,49,58],[69,61,49,63,"undefined"],[69,70,49,72],[69,72,49,74],[70,8,50,12],[71,8,51,12,"pendingScrollCallbacks"],[71,30,51,34],[71,31,51,35,"current"],[71,38,51,42],[71,39,51,43,"push"],[71,43,51,47],[71,44,51,48,"callback"],[71,52,51,56],[71,53,51,57],[72,8,52,12],[73,8,53,12,"setRenderId"],[73,19,53,23],[73,20,53,25,"prev"],[73,24,53,29],[73,28,53,34,"prev"],[73,32,53,38],[73,35,53,41],[73,36,53,42],[73,37,53,43],[74,6,54,8],[74,7,54,9],[74,13,55,13],[75,8,56,12],[76,8,57,12,"callback"],[76,16,57,20],[76,17,57,21],[76,18,57,22],[77,6,58,8],[78,4,59,4],[78,5,59,5],[78,7,59,7],[78,8,59,8,"recyclerViewManager"],[78,27,59,27],[78,28,59,28],[78,29,59,29],[79,4,60,4],[79,8,60,10,"computeFirstVisibleIndexForOffsetCorrection"],[79,51,60,53],[79,54,60,56],[79,58,60,56,"useCallback"],[79,64,60,67],[79,65,60,67,"useCallback"],[79,76,60,67],[79,78,60,68],[79,84,60,74],[80,6,61,8],[80,10,61,12,"recyclerViewManager"],[80,29,61,31],[80,30,61,32,"getIsFirstLayoutComplete"],[80,54,61,56],[80,55,61,57],[80,56,61,58],[80,60,62,12,"recyclerViewManager"],[80,79,62,31],[80,80,62,32,"hasStableDataKeys"],[80,97,62,49],[80,98,62,50],[80,99,62,51],[80,103,63,12,"recyclerViewManager"],[80,122,63,31],[80,123,63,32,"getDataLength"],[80,136,63,45],[80,137,63,46],[80,138,63,47],[80,141,63,50],[80,142,63,51],[80,146,64,12,"recyclerViewManager"],[80,165,64,31],[80,166,64,32,"shouldMaintainVisibleContentPosition"],[80,202,64,68],[80,203,64,69],[80,204,64,70],[80,206,64,72],[81,8,65,12],[82,8,66,12],[82,12,66,18,"firstVisibleIndex"],[82,29,66,35],[82,32,66,38,"Math"],[82,36,66,42],[82,37,66,43,"max"],[82,40,66,46],[82,41,66,47],[82,42,66,48],[82,44,66,50,"recyclerViewManager"],[82,63,66,69],[82,64,66,70,"computeVisibleIndices"],[82,85,66,91],[82,86,66,92],[82,87,66,93],[82,88,66,94,"startIndex"],[82,98,66,104],[82,99,66,105],[83,8,67,12],[83,12,67,16,"firstVisibleIndex"],[83,29,67,33],[83,34,67,38,"undefined"],[83,43,67,47],[83,47,67,51,"firstVisibleIndex"],[83,64,67,68],[83,68,67,72],[83,69,67,73],[83,71,67,75],[84,10,68,16,"firstVisibleItemKey"],[84,29,68,35],[84,30,68,36,"current"],[84,37,68,43],[84,40,69,20,"recyclerViewManager"],[84,59,69,39],[84,60,69,40,"getDataKey"],[84,70,69,50],[84,71,69,51,"firstVisibleIndex"],[84,88,69,68],[84,89,69,69],[85,10,70,16,"firstVisibleItemLayout"],[85,32,70,38],[85,33,70,39,"current"],[85,40,70,46],[85,43,70,49],[86,12,71,20],[86,15,71,23,"recyclerViewManager"],[86,34,71,42],[86,35,71,43,"getLayout"],[86,44,71,52],[86,45,71,53,"firstVisibleIndex"],[86,62,71,70],[87,10,72,16],[87,11,72,17],[88,8,73,12],[89,6,74,8],[90,4,75,4],[90,5,75,5],[90,7,75,7],[90,8,75,8,"recyclerViewManager"],[90,27,75,27],[90,28,75,28],[90,29,75,29],[91,4,76,4],[92,0,77,0],[93,0,78,0],[94,0,79,0],[95,0,80,0],[96,4,81,4],[96,8,81,10,"applyOffsetCorrection"],[96,29,81,31],[96,32,81,34],[96,36,81,34,"useCallback"],[96,42,81,45],[96,43,81,45,"useCallback"],[96,54,81,45],[96,56,81,46],[96,62,81,52],[97,6,82,8],[97,10,82,12,"_a"],[97,12,82,14],[97,14,82,16,"_b"],[97,16,82,18],[97,18,82,20,"_c"],[97,20,82,22],[98,6,83,8],[98,10,83,8,"_recyclerViewManager$"],[98,31,83,8],[98,34,83,37,"recyclerViewManager"],[98,53,83,56],[98,54,83,57,"props"],[98,59,83,62],[99,8,83,16,"horizontal"],[99,18,83,26],[99,21,83,26,"_recyclerViewManager$"],[99,42,83,26],[99,43,83,16,"horizontal"],[99,53,83,26],[100,8,83,28,"data"],[100,12,83,32],[100,15,83,32,"_recyclerViewManager$"],[100,36,83,32],[100,37,83,28,"data"],[100,41,83,32],[101,6,84,8],[102,6,85,8],[103,6,86,8],[103,10,86,14,"callbacks"],[103,19,86,23],[103,22,86,26,"pendingScrollCallbacks"],[103,44,86,48],[103,45,86,49,"current"],[103,52,86,56],[104,6,87,8,"pendingScrollCallbacks"],[104,28,87,30],[104,29,87,31,"current"],[104,36,87,38],[104,39,87,41],[104,41,87,43],[105,6,88,8,"callbacks"],[105,15,88,17],[105,16,88,18,"forEach"],[105,23,88,25],[105,24,88,27,"callback"],[105,32,88,35],[105,36,88,40,"callback"],[105,44,88,48],[105,45,88,49],[105,46,88,50],[105,47,88,51],[106,6,89,8],[106,10,89,14,"currentDataLength"],[106,27,89,31],[106,30,89,34,"recyclerViewManager"],[106,49,89,53],[106,50,89,54,"getDataLength"],[106,63,89,67],[106,64,89,68],[106,65,89,69],[107,6,90,8],[107,10,90,12,"recyclerViewManager"],[107,29,90,31],[107,30,90,32,"getIsFirstLayoutComplete"],[107,54,90,56],[107,55,90,57],[107,56,90,58],[107,60,91,12,"recyclerViewManager"],[107,79,91,31],[107,80,91,32,"hasStableDataKeys"],[107,97,91,49],[107,98,91,50],[107,99,91,51],[107,103,92,12,"currentDataLength"],[107,120,92,29],[107,123,92,32],[107,124,92,33],[107,128,93,12,"recyclerViewManager"],[107,147,93,31],[107,148,93,32,"shouldMaintainVisibleContentPosition"],[107,184,93,68],[107,185,93,69],[107,186,93,70],[107,188,93,72],[108,8,94,12],[108,12,94,18,"hasDataChanged"],[108,26,94,32],[108,29,94,35,"currentDataLength"],[108,46,94,52],[108,51,94,57,"lastDataLengthRef"],[108,68,94,74],[108,69,94,75,"current"],[108,76,94,82],[109,8,95,12],[110,8,96,12],[110,12,96,16,"firstVisibleItemKey"],[110,31,96,35],[110,32,96,36,"current"],[110,39,96,43],[110,41,96,45],[111,10,97,16],[111,14,97,22,"currentIndexOfFirstVisibleItem"],[111,44,97,52],[111,47,97,55],[111,48,97,56,"_a"],[111,50,97,58],[111,53,97,61,"recyclerViewManager"],[111,72,97,80],[111,73,98,21,"getEngagedIndices"],[111,90,98,38],[111,91,98,39],[111,92,98,40],[111,93,99,21,"findValue"],[111,102,99,30],[111,103,99,32,"index"],[111,108,99,37],[111,112,99,42,"recyclerViewManager"],[111,131,99,61],[111,132,99,62,"getDataKey"],[111,142,99,72],[111,143,99,73,"index"],[111,148,99,78],[111,149,99,79],[111,154,100,20,"firstVisibleItemKey"],[111,173,100,39],[111,174,100,40,"current"],[111,181,100,47],[111,182,100,48],[111,188,100,54],[111,192,100,58],[111,196,100,62,"_a"],[111,198,100,64],[111,203,100,69],[111,208,100,74],[111,209,100,75],[111,212,100,78,"_a"],[111,214,100,80],[111,217,100,84,"hasDataChanged"],[111,231,100,98],[111,234,101,22,"data"],[111,238,101,26],[111,243,101,31],[111,247,101,35],[111,251,101,39,"data"],[111,255,101,43],[111,260,101,48],[111,265,101,53],[111,266,101,54],[111,269,101,57],[111,274,101,62],[111,275,101,63],[111,278,101,66,"data"],[111,282,101,70],[111,283,101,71,"findIndex"],[111,292,101,80],[111,293,101,81],[111,294,101,82,"item"],[111,298,101,86],[111,300,101,88,"index"],[111,305,101,93],[111,310,101,98,"recyclerViewManager"],[111,329,101,117],[111,330,101,118,"getDataKey"],[111,340,101,128],[111,341,101,129,"index"],[111,346,101,134],[111,347,101,135],[111,352,102,24,"firstVisibleItemKey"],[111,371,102,43],[111,372,102,44,"current"],[111,379,102,51],[111,380,102,52],[111,383,103,22,"undefined"],[111,392,103,32],[112,10,104,16],[112,14,104,20,"currentIndexOfFirstVisibleItem"],[112,44,104,50],[112,49,104,55,"undefined"],[112,58,104,64],[112,62,105,20,"currentIndexOfFirstVisibleItem"],[112,92,105,50],[112,96,105,54],[112,97,105,55],[112,99,105,57],[113,12,106,20],[114,12,107,20],[114,16,107,26,"diff"],[114,20,107,30],[114,23,107,33,"horizontal"],[114,33,107,43],[114,36,108,26,"recyclerViewManager"],[114,55,108,45],[114,56,108,46,"getLayout"],[114,65,108,55],[114,66,108,56,"currentIndexOfFirstVisibleItem"],[114,96,108,86],[114,97,108,87],[114,98,108,88,"x"],[114,99,108,89],[114,102,109,28,"firstVisibleItemLayout"],[114,124,109,50],[114,125,109,51,"current"],[114,132,109,58],[114,133,109,59,"x"],[114,134,109,60],[114,137,110,26,"recyclerViewManager"],[114,156,110,45],[114,157,110,46,"getLayout"],[114,166,110,55],[114,167,110,56,"currentIndexOfFirstVisibleItem"],[114,197,110,86],[114,198,110,87],[114,199,110,88,"y"],[114,200,110,89],[114,203,111,28,"firstVisibleItemLayout"],[114,225,111,50],[114,226,111,51,"current"],[114,233,111,58],[114,234,111,59,"y"],[114,235,111,60],[115,12,112,20,"firstVisibleItemLayout"],[115,34,112,42],[115,35,112,43,"current"],[115,42,112,50],[115,45,112,53],[116,14,113,24],[116,17,113,27,"recyclerViewManager"],[116,36,113,46],[116,37,113,47,"getLayout"],[116,46,113,56],[116,47,113,57,"currentIndexOfFirstVisibleItem"],[116,77,113,87],[117,12,114,20],[117,13,114,21],[118,12,115,20],[118,16,115,24,"diff"],[118,20,115,28],[118,25,115,33],[118,26,115,34],[118,30,116,24],[118,31,116,25,"pauseOffsetCorrection"],[118,52,116,46],[118,53,116,47,"current"],[118,60,116,54],[118,64,117,24],[118,65,117,25,"recyclerViewManager"],[118,84,117,44],[118,85,117,45,"animationOptimizationsEnabled"],[118,114,117,74],[118,116,117,76],[119,14,118,24],[120,14,119,24],[120,18,119,28,"PlatformConfig"],[120,45,119,42],[120,46,119,42,"PlatformConfig"],[120,60,119,42],[120,61,119,43,"supportsOffsetCorrection"],[120,85,119,67],[120,87,119,69],[121,16,120,28],[122,16,121,28],[122,17,121,29,"_b"],[122,19,121,31],[122,22,121,34,"scrollAnchorRef"],[122,37,121,49],[122,38,121,50,"current"],[122,45,121,57],[122,51,121,63],[122,55,121,67],[122,59,121,71,"_b"],[122,61,121,73],[122,66,121,78],[122,71,121,83],[122,72,121,84],[122,75,121,87],[122,80,121,92],[122,81,121,93],[122,84,121,96,"_b"],[122,86,121,98],[122,87,121,99,"scrollBy"],[122,95,121,107],[122,96,121,108,"diff"],[122,100,121,112],[122,101,121,113],[123,14,122,24],[123,15,122,25],[123,21,123,29],[124,16,124,28],[124,20,124,34,"scrollToParams"],[124,34,124,48],[124,37,124,51,"horizontal"],[124,47,124,61],[124,50,125,34],[125,18,126,36,"x"],[125,19,126,37],[125,21,126,39,"recyclerViewManager"],[125,40,126,58],[125,41,126,59,"getAbsoluteLastScrollOffset"],[125,68,126,86],[125,69,126,87],[125,70,126,88],[125,73,126,91,"diff"],[125,77,126,95],[126,18,127,36,"animated"],[126,26,127,44],[126,28,127,46],[127,16,128,32],[127,17,128,33],[127,20,129,34],[128,18,130,36,"y"],[128,19,130,37],[128,21,130,39,"recyclerViewManager"],[128,40,130,58],[128,41,130,59,"getAbsoluteLastScrollOffset"],[128,68,130,86],[128,69,130,87],[128,70,130,88],[128,73,130,91,"diff"],[128,77,130,95],[129,18,131,36,"animated"],[129,26,131,44],[129,28,131,46],[130,16,132,32],[130,17,132,33],[131,16,133,28],[131,17,133,29,"_c"],[131,19,133,31],[131,22,133,34,"scrollViewRef"],[131,35,133,47],[131,36,133,48,"current"],[131,43,133,55],[131,49,133,61],[131,53,133,65],[131,57,133,69,"_c"],[131,59,133,71],[131,64,133,76],[131,69,133,81],[131,70,133,82],[131,73,133,85],[131,78,133,90],[131,79,133,91],[131,82,133,94,"_c"],[131,84,133,96],[131,85,133,97,"scrollTo"],[131,93,133,105],[131,94,133,106,"scrollToParams"],[131,108,133,120],[131,109,133,121],[132,14,134,24],[133,14,135,24],[133,18,135,28,"hasDataChanged"],[133,32,135,42],[133,34,135,44],[134,16,136,28,"updateScrollOffsetWithCallback"],[134,46,136,58],[134,47,136,59,"recyclerViewManager"],[134,66,136,78],[134,67,136,79,"getAbsoluteLastScrollOffset"],[134,94,136,106],[134,95,136,107],[134,96,136,108],[134,99,136,111,"diff"],[134,103,136,115],[134,105,136,117],[134,111,136,123],[134,112,136,125],[134,113,136,126],[134,114,136,127],[135,16,137,28,"recyclerViewManager"],[135,35,137,47],[135,36,137,48,"ignoreScrollEvents"],[135,54,137,66],[135,57,137,69],[135,61,137,73],[136,16,138,28,"setTimeout"],[136,26,138,38],[136,27,138,39],[136,33,138,45],[137,18,139,32,"recyclerViewManager"],[137,37,139,51],[137,38,139,52,"ignoreScrollEvents"],[137,56,139,70],[137,59,139,73],[137,64,139,78],[138,16,140,28],[138,17,140,29],[138,19,140,31],[138,22,140,34],[138,23,140,35],[139,14,141,24],[140,12,142,20],[141,10,143,16],[142,8,144,12],[143,8,145,12,"computeFirstVisibleIndexForOffsetCorrection"],[143,51,145,55],[143,52,145,56],[143,53,145,57],[144,6,146,8],[145,6,147,8,"lastDataLengthRef"],[145,23,147,25],[145,24,147,26,"current"],[145,31,147,33],[145,34,147,36,"recyclerViewManager"],[145,53,147,55],[145,54,147,56,"getDataLength"],[145,67,147,69],[145,68,147,70],[145,69,147,71],[146,4,148,4],[146,5,148,5],[146,7,148,7],[146,8,149,8,"recyclerViewManager"],[146,27,149,27],[146,29,150,8,"scrollAnchorRef"],[146,44,150,23],[146,46,151,8,"scrollViewRef"],[146,59,151,21],[146,61,152,8,"setTimeout"],[146,71,152,18],[146,73,153,8,"updateScrollOffsetWithCallback"],[146,103,153,38],[146,105,154,8,"computeFirstVisibleIndexForOffsetCorrection"],[146,148,154,51],[146,149,155,5],[146,150,155,6],[147,4,156,4],[147,8,156,10,"handlerMethods"],[147,22,156,24],[147,25,156,27],[147,29,156,27,"useMemo"],[147,35,156,34],[147,36,156,34,"useMemo"],[147,43,156,34],[147,45,156,35],[147,51,156,41],[148,6,157,8],[148,13,157,15],[149,8,158,12],[149,12,158,16,"props"],[149,17,158,21,"props"],[149,18,158,21],[149,20,158,24],[150,10,159,16],[150,17,159,23,"recyclerViewManager"],[150,36,159,42],[150,37,159,43,"props"],[150,42,159,48],[151,8,160,12],[151,9,160,13],[152,8,161,12],[153,0,162,0],[154,0,163,0],[155,0,164,0],[156,8,165,12,"scrollToOffset"],[156,22,165,26],[156,24,165,28,"_ref"],[156,28,165,28],[156,32,165,83],[157,10,165,83],[157,14,165,31,"offset"],[157,20,165,37],[157,23,165,37,"_ref"],[157,27,165,37],[157,28,165,31,"offset"],[157,34,165,37],[158,12,165,39,"animated"],[158,20,165,47],[158,23,165,47,"_ref"],[158,27,165,47],[158,28,165,39,"animated"],[158,36,165,47],[159,12,165,47,"_ref$skipFirstItemOff"],[159,33,165,47],[159,36,165,47,"_ref"],[159,40,165,47],[159,41,165,49,"skipFirstItemOffset"],[159,60,165,68],[160,12,165,49,"skipFirstItemOffset"],[160,31,165,68],[160,34,165,68,"_ref$skipFirstItemOff"],[160,55,165,68],[160,69,165,71],[160,73,165,75],[160,76,165,75,"_ref$skipFirstItemOff"],[160,97,165,75],[161,10,166,16],[161,14,166,24,"horizontal"],[161,24,166,34],[161,27,166,39,"recyclerViewManager"],[161,46,166,58],[161,47,166,59,"props"],[161,52,166,64],[161,53,166,24,"horizontal"],[161,63,166,34],[162,10,167,16],[162,14,167,20,"scrollViewRef"],[162,27,167,33],[162,28,167,34,"current"],[162,35,167,41],[162,37,167,43],[163,12,168,20],[164,12,169,20],[164,16,169,24,"I18nManager"],[164,28,169,35],[164,29,169,35,"I18nManager"],[164,40,169,35],[164,41,169,36,"isRTL"],[164,46,169,41],[164,50,169,45,"horizontal"],[164,60,169,55],[164,62,169,57],[165,14,170,24],[166,14,171,24,"offset"],[166,20,171,30],[166,23,172,28],[166,27,172,28,"adjustOffsetForRTL"],[166,51,172,46],[166,52,172,46,"adjustOffsetForRTL"],[166,70,172,46],[166,72,172,47,"offset"],[166,78,172,53],[166,80,172,55,"recyclerViewManager"],[166,99,172,74],[166,100,172,75,"getChildContainerDimensions"],[166,127,172,102],[166,128,172,103],[166,129,172,104],[166,130,172,105,"width"],[166,135,172,110],[166,137,172,112,"recyclerViewManager"],[166,156,172,131],[166,157,172,132,"getWindowSize"],[166,170,172,145],[166,171,172,146],[166,172,172,147],[166,173,172,148,"width"],[166,178,172,153],[166,179,172,154],[166,183,173,33,"skipFirstItemOffset"],[166,202,173,52],[166,205,174,38,"recyclerViewManager"],[166,224,174,57],[166,225,174,58,"firstItemOffset"],[166,240,174,73],[166,243,175,38],[166,244,175,39,"recyclerViewManager"],[166,263,175,58],[166,264,175,59,"firstItemOffset"],[166,279,175,74],[166,280,175,75],[167,12,176,20],[168,12,177,20],[169,12,178,20],[169,16,178,26,"adjustedOffset"],[169,30,178,40],[169,33,178,43,"offset"],[169,39,178,49],[169,43,179,25,"skipFirstItemOffset"],[169,62,179,44],[169,65,179,47],[169,66,179,48],[169,69,179,51,"recyclerViewManager"],[169,88,179,70],[169,89,179,71,"firstItemOffset"],[169,104,179,86],[169,105,179,87],[170,12,180,20],[170,16,180,26,"scrollTo"],[170,24,180,34],[170,27,180,37,"horizontal"],[170,37,180,47],[170,40,181,26],[171,14,181,28,"x"],[171,15,181,29],[171,17,181,31,"adjustedOffset"],[171,31,181,45],[172,14,181,47,"y"],[172,15,181,48],[172,17,181,50],[173,12,181,52],[173,13,181,53],[173,16,182,26],[174,14,182,28,"x"],[174,15,182,29],[174,17,182,31],[174,18,182,32],[175,14,182,34,"y"],[175,15,182,35],[175,17,182,37,"adjustedOffset"],[176,12,182,52],[176,13,182,53],[177,12,183,20,"scrollViewRef"],[177,25,183,33],[177,26,183,34,"current"],[177,33,183,41],[177,34,183,42,"scrollTo"],[177,42,183,50],[177,43,183,51],[178,14,184,24],[178,17,184,27,"scrollTo"],[178,25,184,35],[179,14,185,24,"animated"],[180,12,186,20],[180,13,186,21],[180,14,186,22],[181,10,187,16],[182,8,188,12],[182,9,188,13],[183,8,189,12,"clearLayoutCacheOnUpdate"],[183,32,189,36],[183,34,189,38,"clearLayoutCacheOnUpdate"],[183,35,189,38],[183,40,189,44],[184,10,190,16,"recyclerViewManager"],[184,29,190,35],[184,30,190,36,"markLayoutManagerDirty"],[184,52,190,58],[184,53,190,59],[184,54,190,60],[185,8,191,12],[185,9,191,13],[186,8,192,12],[187,8,193,12,"flashScrollIndicators"],[187,29,193,33],[187,31,193,35,"flashScrollIndicators"],[187,32,193,35],[187,37,193,41],[188,10,194,16,"scrollViewRef"],[188,23,194,29],[188,24,194,30,"current"],[188,31,194,37],[188,32,194,38,"flashScrollIndicators"],[188,53,194,59],[188,54,194,60],[188,55,194,61],[189,8,195,12],[189,9,195,13],[190,8,196,12,"getNativeScrollRef"],[190,26,196,30],[190,28,196,32,"getNativeScrollRef"],[190,29,196,32],[190,34,196,38],[191,10,197,16],[191,17,197,23,"scrollViewRef"],[191,30,197,36],[191,31,197,37,"current"],[191,38,197,44],[192,8,198,12],[192,9,198,13],[193,8,199,12,"getScrollResponder"],[193,26,199,30],[193,28,199,32,"getScrollResponder"],[193,29,199,32],[193,34,199,38],[194,10,200,16],[194,17,200,23,"scrollViewRef"],[194,30,200,36],[194,31,200,37,"current"],[194,38,200,44],[194,39,200,45,"getScrollResponder"],[194,57,200,63],[194,58,200,64],[194,59,200,65],[195,8,201,12],[195,9,201,13],[196,8,202,12,"getScrollableNode"],[196,25,202,29],[196,27,202,31,"getScrollableNode"],[196,28,202,31],[196,33,202,37],[197,10,203,16],[197,17,203,23,"scrollViewRef"],[197,30,203,36],[197,31,203,37,"current"],[197,38,203,44],[197,39,203,45,"getScrollableNode"],[197,56,203,62],[197,57,203,63],[197,58,203,64],[198,8,204,12],[198,9,204,13],[199,8,205,12],[200,0,206,0],[201,0,207,0],[202,8,208,12,"scrollToEnd"],[202,19,208,23],[203,10,208,23],[203,14,208,23,"_ref2"],[203,19,208,23],[203,26,208,23,"_asyncToGenerator"],[203,43,208,23],[203,44,208,23,"default"],[203,51,208,23],[203,53,208,25],[203,66,208,54],[204,12,208,54],[204,16,208,54,"_ref3"],[204,21,208,54],[204,24,208,54,"arguments"],[204,33,208,54],[204,34,208,54,"length"],[204,40,208,54],[204,48,208,54,"arguments"],[204,57,208,54],[204,65,208,54,"undefined"],[204,74,208,54],[204,77,208,54,"arguments"],[204,86,208,54],[204,92,208,47],[204,93,208,48],[204,94,208,49],[205,14,208,34,"animated"],[205,22,208,42],[205,25,208,42,"_ref3"],[205,30,208,42],[205,31,208,34,"animated"],[205,39,208,42],[206,12,209,16],[206,16,209,24,"data"],[206,20,209,28],[206,23,209,33,"recyclerViewManager"],[206,42,209,52],[206,43,209,53,"props"],[206,48,209,58],[206,49,209,24,"data"],[206,53,209,28],[207,12,210,16],[207,16,210,20,"data"],[207,20,210,24],[207,24,210,28,"data"],[207,28,210,32],[207,29,210,33,"length"],[207,35,210,39],[207,38,210,42],[207,39,210,43],[207,41,210,45],[208,14,211,20],[208,18,211,26,"lastIndex"],[208,27,211,35],[208,30,211,38,"data"],[208,34,211,42],[208,35,211,43,"length"],[208,41,211,49],[208,44,211,52],[208,45,211,53],[209,14,212,20],[209,18,212,24],[209,19,212,25,"recyclerViewManager"],[209,38,212,44],[209,39,212,45,"getEngagedIndices"],[209,56,212,62],[209,57,212,63],[209,58,212,64],[209,59,212,65,"includes"],[209,67,212,73],[209,68,212,74,"lastIndex"],[209,77,212,83],[209,78,212,84],[209,80,212,86],[210,16,213,24],[210,22,213,30,"handlerMethods"],[210,36,213,44],[210,37,213,45,"scrollToIndex"],[210,50,213,58],[210,51,213,59],[211,18,214,28,"index"],[211,23,214,33],[211,25,214,35,"lastIndex"],[211,34,214,44],[212,18,215,28,"animated"],[213,16,216,24],[213,17,216,25],[213,18,216,26],[214,14,217,20],[215,12,218,16],[216,12,219,16,"setTimeout"],[216,22,219,26],[216,23,219,27],[216,29,219,33],[217,14,220,20],[217,18,220,24,"_a"],[217,20,220,26],[218,14,221,20],[218,15,221,21,"_a"],[218,17,221,23],[218,20,221,26,"scrollViewRef"],[218,33,221,39],[218,34,221,40,"current"],[218,41,221,47],[218,47,221,53],[218,51,221,57],[218,55,221,61,"_a"],[218,57,221,63],[218,62,221,68],[218,67,221,73],[218,68,221,74],[218,71,221,77],[218,76,221,82],[218,77,221,83],[218,80,221,86,"_a"],[218,82,221,88],[218,83,221,89,"scrollToEnd"],[218,94,221,100],[218,95,221,101],[219,16,221,103,"animated"],[220,14,221,112],[220,15,221,113],[220,16,221,114],[221,12,222,16],[221,13,222,17],[221,15,222,19],[221,16,222,20],[221,17,222,21],[222,10,223,12],[222,11,223,13],[223,10,223,13],[223,26,208,12,"scrollToEnd"],[223,37,208,23,"scrollToEnd"],[223,38,208,23],[224,12,208,23],[224,19,208,23,"_ref2"],[224,24,208,23],[224,25,208,23,"apply"],[224,30,208,23],[224,37,208,23,"arguments"],[224,46,208,23],[225,10,208,23],[226,8,208,23],[226,11,223,13],[227,8,224,12],[228,0,225,0],[229,0,226,0],[230,8,227,12,"scrollToTop"],[230,19,227,23],[230,21,227,25],[230,30,227,25,"scrollToTop"],[230,31,227,25],[230,33,227,48],[231,10,227,48],[231,14,227,48,"_ref4"],[231,19,227,48],[231,22,227,48,"arguments"],[231,31,227,48],[231,32,227,48,"length"],[231,38,227,48],[231,46,227,48,"arguments"],[231,55,227,48],[231,63,227,48,"undefined"],[231,72,227,48],[231,75,227,48,"arguments"],[231,84,227,48],[231,90,227,41],[231,91,227,42],[231,92,227,43],[232,12,227,28,"animated"],[232,20,227,36],[232,23,227,36,"_ref4"],[232,28,227,36],[232,29,227,28,"animated"],[232,37,227,36],[233,10,228,16,"handlerMethods"],[233,24,228,30],[233,25,228,31,"scrollToOffset"],[233,39,228,45],[233,40,228,46],[234,12,229,20,"offset"],[234,18,229,26],[234,20,229,28],[234,21,229,29],[235,12,230,20,"animated"],[236,10,231,16],[236,11,231,17],[236,12,231,18],[237,8,232,12],[237,9,232,13],[238,8,233,12],[239,0,234,0],[240,0,235,0],[241,0,236,0],[242,0,237,0],[243,8,238,12,"scrollToIndex"],[243,21,238,25],[243,23,238,27,"_ref5"],[243,28,238,27],[243,32,238,79],[244,10,238,79],[244,14,238,30,"index"],[244,19,238,35],[244,22,238,35,"_ref5"],[244,27,238,35],[244,28,238,30,"index"],[244,33,238,35],[245,12,238,37,"animated"],[245,20,238,45],[245,23,238,45,"_ref5"],[245,28,238,45],[245,29,238,37,"animated"],[245,37,238,45],[246,12,238,47,"viewPosition"],[246,24,238,59],[246,27,238,59,"_ref5"],[246,32,238,59],[246,33,238,47,"viewPosition"],[246,45,238,59],[247,12,238,61,"viewOffset"],[247,22,238,71],[247,25,238,71,"_ref5"],[247,30,238,71],[247,31,238,61,"viewOffset"],[247,41,238,71],[248,10,239,16],[248,17,239,23],[248,21,239,27,"Promise"],[248,28,239,34],[248,29,239,36,"resolve"],[248,36,239,43],[248,40,239,48],[249,12,240,20],[249,16,240,28,"horizontal"],[249,26,240,38],[249,29,240,43,"recyclerViewManager"],[249,48,240,62],[249,49,240,63,"props"],[249,54,240,68],[249,55,240,28,"horizontal"],[249,65,240,38],[250,12,241,20],[250,16,241,24,"scrollViewRef"],[250,29,241,37],[250,30,241,38,"current"],[250,37,241,45],[250,41,242,24,"index"],[250,46,242,29],[250,50,242,33],[250,51,242,34],[250,55,243,24,"index"],[250,60,243,29],[250,63,243,32,"recyclerViewManager"],[250,82,243,51],[250,83,243,52,"getDataLength"],[250,96,243,65],[250,97,243,66],[250,98,243,67],[250,100,243,69],[251,14,244,24],[252,14,245,24,"pauseOffsetCorrection"],[252,35,245,45],[252,36,245,46,"current"],[252,43,245,53],[252,46,245,56],[252,50,245,60],[253,14,246,24,"recyclerViewManager"],[253,33,246,43],[253,34,246,44,"setOffsetProjectionEnabled"],[253,60,246,70],[253,61,246,71],[253,66,246,76],[253,67,246,77],[254,14,247,24],[254,18,247,30,"getFinalOffset"],[254,32,247,44],[254,35,247,47,"getFinalOffset"],[254,36,247,47],[254,41,247,53],[255,16,248,28],[255,20,248,34,"layout"],[255,26,248,40],[255,29,248,43,"recyclerViewManager"],[255,48,248,62],[255,49,248,63,"getLayout"],[255,58,248,72],[255,59,248,73,"index"],[255,64,248,78],[255,65,248,79],[256,16,249,28],[256,20,249,34,"offset"],[256,26,249,40],[256,29,249,43,"horizontal"],[256,39,249,53],[256,42,249,56,"layout"],[256,48,249,62],[256,49,249,63,"x"],[256,50,249,64],[256,53,249,67,"layout"],[256,59,249,73],[256,60,249,74,"y"],[256,61,249,75],[257,16,250,28],[257,20,250,32,"finalOffset"],[257,31,250,43],[257,34,250,46,"offset"],[257,40,250,52],[258,16,251,28],[259,16,252,28],[259,20,252,32,"viewPosition"],[259,32,252,44],[259,37,252,49,"undefined"],[259,46,252,58],[259,50,252,62,"viewOffset"],[259,60,252,72],[259,65,252,77,"undefined"],[259,74,252,86],[259,76,252,88],[260,18,253,32],[260,22,253,38,"containerSize"],[260,35,253,51],[260,38,253,54,"horizontal"],[260,48,253,64],[260,51,254,38,"recyclerViewManager"],[260,70,254,57],[260,71,254,58,"getWindowSize"],[260,84,254,71],[260,85,254,72],[260,86,254,73],[260,87,254,74,"width"],[260,92,254,79],[260,95,255,38,"recyclerViewManager"],[260,114,255,57],[260,115,255,58,"getWindowSize"],[260,128,255,71],[260,129,255,72],[260,130,255,73],[260,131,255,74,"height"],[260,137,255,80],[261,18,256,32],[261,22,256,38,"itemSize"],[261,30,256,46],[261,33,256,49,"horizontal"],[261,43,256,59],[261,46,256,62,"layout"],[261,52,256,68],[261,53,256,69,"width"],[261,58,256,74],[261,61,256,77,"layout"],[261,67,256,83],[261,68,256,84,"height"],[261,74,256,90],[262,18,257,32],[262,22,257,36,"viewPosition"],[262,34,257,48],[262,39,257,53,"undefined"],[262,48,257,62],[262,50,257,64],[263,20,258,36],[264,20,259,36,"finalOffset"],[264,31,259,47],[264,34,260,40,"offset"],[264,40,260,46],[264,43,260,49],[264,44,260,50,"containerSize"],[264,57,260,63],[264,60,260,66,"itemSize"],[264,68,260,74],[264,72,260,78,"viewPosition"],[264,84,260,90],[265,18,261,32],[266,18,262,32],[266,22,262,36,"viewOffset"],[266,32,262,46],[266,37,262,51,"undefined"],[266,46,262,60],[266,48,262,62],[267,20,263,36,"finalOffset"],[267,31,263,47],[267,35,263,51,"viewOffset"],[267,45,263,61],[268,18,264,32],[269,16,265,28],[270,16,266,28],[270,23,266,35,"finalOffset"],[270,34,266,46],[270,37,266,49,"recyclerViewManager"],[270,56,266,68],[270,57,266,69,"firstItemOffset"],[270,72,266,84],[271,14,267,24],[271,15,267,25],[272,14,268,24],[272,18,268,30,"lastAbsoluteScrollOffset"],[272,42,268,54],[272,45,268,57,"recyclerViewManager"],[272,64,268,76],[272,65,268,77,"getAbsoluteLastScrollOffset"],[272,92,268,104],[272,93,268,105],[272,94,268,106],[273,14,269,24],[273,18,269,30,"bufferForScroll"],[273,33,269,45],[273,36,269,48,"horizontal"],[273,46,269,58],[273,49,270,30,"recyclerViewManager"],[273,68,270,49],[273,69,270,50,"getWindowSize"],[273,82,270,63],[273,83,270,64],[273,84,270,65],[273,85,270,66,"width"],[273,90,270,71],[273,93,271,30,"recyclerViewManager"],[273,112,271,49],[273,113,271,50,"getWindowSize"],[273,126,271,63],[273,127,271,64],[273,128,271,65],[273,129,271,66,"height"],[273,135,271,72],[274,14,272,24],[274,18,272,30,"bufferForCompute"],[274,34,272,46],[274,37,272,49,"bufferForScroll"],[274,52,272,64],[274,55,272,67],[274,56,272,68],[275,14,273,24],[275,18,273,30,"getStartScrollOffset"],[275,38,273,50],[275,41,273,53,"getStartScrollOffset"],[275,42,273,53],[275,47,273,59],[276,16,274,28],[276,20,274,32,"lastScrollOffset"],[276,36,274,48],[276,39,274,51,"lastAbsoluteScrollOffset"],[276,63,274,75],[277,16,275,28],[277,20,275,34,"finalOffset"],[277,31,275,45],[277,34,275,48,"getFinalOffset"],[277,48,275,62],[277,49,275,63],[277,50,275,64],[278,16,276,28],[278,20,276,32,"finalOffset"],[278,31,276,43],[278,34,276,46,"lastScrollOffset"],[278,50,276,62],[278,52,276,64],[279,18,277,32,"lastScrollOffset"],[279,34,277,48],[279,37,277,51,"Math"],[279,41,277,55],[279,42,277,56,"max"],[279,45,277,59],[279,46,277,60,"finalOffset"],[279,57,277,71],[279,60,277,74,"bufferForCompute"],[279,76,277,90],[279,78,277,92,"lastScrollOffset"],[279,94,277,108],[279,95,277,109],[280,18,278,32,"recyclerViewManager"],[280,37,278,51],[280,38,278,52,"setScrollDirection"],[280,56,278,70],[280,57,278,71],[280,66,278,80],[280,67,278,81],[281,16,279,28],[281,17,279,29],[281,23,280,33],[282,18,281,32,"lastScrollOffset"],[282,34,281,48],[282,37,281,51,"Math"],[282,41,281,55],[282,42,281,56,"min"],[282,45,281,59],[282,46,281,60,"finalOffset"],[282,57,281,71],[282,60,281,74,"bufferForCompute"],[282,76,281,90],[282,78,281,92,"lastScrollOffset"],[282,94,281,108],[282,95,281,109],[283,18,282,32,"recyclerViewManager"],[283,37,282,51],[283,38,282,52,"setScrollDirection"],[283,56,282,70],[283,57,282,71],[283,67,282,81],[283,68,282,82],[284,16,283,28],[285,16,284,28],[285,23,284,35,"lastScrollOffset"],[285,39,284,51],[286,14,285,24],[286,15,285,25],[287,14,286,24],[287,18,286,28,"initialTargetOffset"],[287,37,286,47],[287,40,286,50,"getFinalOffset"],[287,54,286,64],[287,55,286,65],[287,56,286,66],[288,14,287,24],[288,18,287,28,"initialStartScrollOffset"],[288,42,287,52],[288,45,287,55,"getStartScrollOffset"],[288,65,287,75],[288,66,287,76],[288,67,287,77],[289,14,288,24],[289,18,288,28,"finalOffset"],[289,29,288,39],[289,32,288,42,"initialTargetOffset"],[289,51,288,61],[290,14,289,24],[290,18,289,28,"startScrollOffset"],[290,35,289,45],[290,38,289,48,"initialStartScrollOffset"],[290,62,289,72],[291,14,290,24],[291,18,290,30,"steps"],[291,23,290,35],[291,26,290,38],[291,27,290,39],[292,14,291,24],[293,0,292,0],[294,0,293,0],[295,0,294,0],[296,0,295,0],[297,0,296,0],[298,14,297,24],[298,18,297,30,"performScrollStep"],[298,35,297,47],[298,38,297,51,"currentStep"],[298,49,297,62],[298,53,297,67],[299,16,298,28],[300,16,299,28],[300,20,299,32,"isUnmounted"],[300,31,299,43],[300,32,299,44,"current"],[300,39,299,51],[300,41,299,53],[301,18,300,32,"resolve"],[301,25,300,39],[301,26,300,40],[301,27,300,41],[302,18,301,32],[303,16,302,28],[303,17,302,29],[303,23,303,33],[303,27,303,37,"currentStep"],[303,38,303,48],[303,42,303,52,"steps"],[303,47,303,57],[303,49,303,59],[304,18,304,32],[305,18,305,32,"finishScrollToIndex"],[305,37,305,51],[305,38,305,52],[305,39,305,53],[306,18,306,32],[307,16,307,28],[308,16,308,28],[309,16,309,28],[310,16,310,28],[311,16,311,28],[311,20,311,34,"nextOffset"],[311,30,311,44],[311,33,311,47,"animated"],[311,41,311,55],[311,44,312,34,"finalOffset"],[311,55,312,45],[311,58,313,36],[311,59,313,37,"startScrollOffset"],[311,76,313,54],[311,79,313,57,"finalOffset"],[311,90,313,68],[311,95,314,41,"currentStep"],[311,106,314,52],[311,110,314,56,"steps"],[311,115,314,61],[311,118,314,64],[311,119,314,65],[311,120,314,66],[311,121,314,67],[311,124,315,34,"startScrollOffset"],[311,141,315,51],[311,144,316,36],[311,145,316,37,"finalOffset"],[311,156,316,48],[311,159,316,51,"startScrollOffset"],[311,176,316,68],[311,181,317,41,"currentStep"],[311,192,317,52],[311,196,317,56,"steps"],[311,201,317,61],[311,204,317,64],[311,205,317,65],[311,206,317,66],[311,207,317,67],[312,16,318,28],[313,16,319,28,"updateScrollOffsetWithCallback"],[313,46,319,58],[313,47,319,59,"nextOffset"],[313,57,319,69],[313,59,319,71],[313,65,319,77],[314,18,320,32],[315,18,321,32],[315,22,321,36,"index"],[315,27,321,41],[315,31,321,45,"recyclerViewManager"],[315,50,321,64],[315,51,321,65,"getDataLength"],[315,64,321,78],[315,65,321,79],[315,66,321,80],[315,68,321,82],[316,20,322,36],[317,20,323,36,"handlerMethods"],[317,34,323,50],[317,35,323,51,"scrollToEnd"],[317,46,323,62],[317,47,323,63],[318,22,323,65,"animated"],[319,20,323,74],[319,21,323,75],[319,22,323,76],[320,20,324,36,"resolve"],[320,27,324,43],[320,28,324,44],[320,29,324,45],[320,30,324,46],[320,31,324,47],[321,20,325,36],[322,18,326,32],[323,18,327,32],[324,18,328,32],[324,22,328,38,"newFinalOffset"],[324,36,328,52],[324,39,328,55,"getFinalOffset"],[324,53,328,69],[324,54,328,70],[324,55,328,71],[325,18,329,32],[325,22,329,37,"newFinalOffset"],[325,36,329,51],[325,39,329,54,"initialTargetOffset"],[325,58,329,73],[325,62,330,36,"newFinalOffset"],[325,76,330,50],[325,79,330,53,"initialStartScrollOffset"],[325,103,330,77],[325,107,331,37,"newFinalOffset"],[325,121,331,51],[325,124,331,54,"initialTargetOffset"],[325,143,331,73],[325,147,332,40,"newFinalOffset"],[325,161,332,54],[325,164,332,57,"initialStartScrollOffset"],[325,188,332,82],[325,190,332,84],[326,20,333,36],[327,20,334,36,"finalOffset"],[327,31,334,47],[327,34,334,50,"newFinalOffset"],[327,48,334,64],[328,20,335,36,"startScrollOffset"],[328,37,335,53],[328,40,335,56,"getStartScrollOffset"],[328,60,335,76],[328,61,335,77],[328,62,335,78],[329,20,336,36,"initialTargetOffset"],[329,39,336,55],[329,42,336,58,"newFinalOffset"],[329,56,336,72],[330,20,337,36,"initialStartScrollOffset"],[330,44,337,60],[330,47,337,63,"startScrollOffset"],[330,64,337,80],[331,20,338,36,"performScrollStep"],[331,37,338,53],[331,38,338,54],[331,39,338,55],[331,40,338,56],[331,41,338,57],[331,42,338,58],[332,18,339,32],[332,19,339,33],[332,25,340,37],[333,20,341,36],[334,20,342,36,"performScrollStep"],[334,37,342,53],[334,38,342,54,"currentStep"],[334,49,342,65],[334,52,342,68],[334,53,342,69],[334,54,342,70],[335,18,343,32],[336,16,344,28],[336,17,344,29],[336,18,344,30],[337,14,345,24],[337,15,345,25],[338,14,346,24],[339,0,347,0],[340,0,348,0],[341,0,349,0],[342,14,350,24],[342,18,350,30,"finishScrollToIndex"],[342,37,350,49],[342,40,350,52,"finishScrollToIndex"],[342,41,350,52],[342,46,350,58],[343,16,351,28,"finalOffset"],[343,27,351,39],[343,30,351,42,"getFinalOffset"],[343,44,351,56],[343,45,351,57],[343,46,351,58],[344,16,352,28],[344,20,352,34,"maxOffset"],[344,29,352,43],[344,32,352,46,"recyclerViewManager"],[344,51,352,65],[344,52,352,66,"getMaxScrollOffset"],[344,70,352,84],[344,71,352,85],[344,72,352,86],[345,16,353,28],[345,20,353,32,"finalOffset"],[345,31,353,43],[345,34,353,46,"maxOffset"],[345,43,353,55],[345,45,353,57],[346,18,354,32,"finalOffset"],[346,29,354,43],[346,32,354,46,"maxOffset"],[346,41,354,55],[347,16,355,28],[348,16,356,28],[348,20,356,32,"animated"],[348,28,356,40],[348,30,356,42],[349,18,357,32],[350,18,358,32],[351,18,359,32,"handlerMethods"],[351,32,359,46],[351,33,359,47,"scrollToOffset"],[351,47,359,61],[351,48,359,62],[352,20,360,36,"offset"],[352,26,360,42],[352,28,360,44,"startScrollOffset"],[352,45,360,61],[353,20,361,36,"animated"],[353,28,361,44],[353,30,361,46],[353,35,361,51],[354,20,362,36,"skipFirstItemOffset"],[354,39,362,55],[354,41,362,57],[355,18,363,32],[355,19,363,33],[355,20,363,34],[356,16,364,28],[357,16,365,28],[358,16,366,28,"handlerMethods"],[358,30,366,42],[358,31,366,43,"scrollToOffset"],[358,45,366,57],[358,46,366,58],[359,18,367,32,"offset"],[359,24,367,38],[359,26,367,40,"finalOffset"],[359,37,367,51],[360,18,368,32,"animated"],[360,26,368,40],[361,18,369,32,"skipFirstItemOffset"],[361,37,369,51],[361,39,369,53],[362,16,370,28],[362,17,370,29],[362,18,370,30],[363,16,371,28],[364,16,372,28],[365,16,373,28,"setTimeout"],[365,26,373,38],[365,27,373,39],[365,33,373,45],[366,18,374,32,"pauseOffsetCorrection"],[366,39,374,53],[366,40,374,54,"current"],[366,47,374,61],[366,50,374,64],[366,55,374,69],[367,18,375,32,"recyclerViewManager"],[367,37,375,51],[367,38,375,52,"setOffsetProjectionEnabled"],[367,64,375,78],[367,65,375,79],[367,69,375,83],[367,70,375,84],[368,18,376,32,"resolve"],[368,25,376,39],[368,26,376,40],[368,27,376,41],[368,28,376,42],[368,29,376,43],[369,16,377,28],[369,17,377,29],[369,19,377,31,"animated"],[369,27,377,39],[369,30,377,42],[369,33,377,45],[369,36,377,48],[369,39,377,51],[369,40,377,52],[370,14,378,24],[370,15,378,25],[371,14,379,24],[372,14,380,24,"performScrollStep"],[372,31,380,41],[372,32,380,42],[372,33,380,43],[372,34,380,44],[373,12,381,20],[373,13,381,21],[373,19,382,25],[374,14,383,24],[375,14,384,24,"resolve"],[375,21,384,31],[375,22,384,32],[375,23,384,33],[376,12,385,20],[377,10,386,16],[377,11,386,17],[377,12,386,18],[378,8,387,12],[378,9,387,13],[379,8,388,12],[380,0,389,0],[381,0,390,0],[382,0,391,0],[383,8,392,12,"scrollToItem"],[383,20,392,24],[383,22,392,26,"_ref6"],[383,27,392,26],[383,31,392,77],[384,10,392,77],[384,14,392,29,"item"],[384,18,392,33],[384,21,392,33,"_ref6"],[384,26,392,33],[384,27,392,29,"item"],[384,31,392,33],[385,12,392,35,"animated"],[385,20,392,43],[385,23,392,43,"_ref6"],[385,28,392,43],[385,29,392,35,"animated"],[385,37,392,43],[386,12,392,45,"viewPosition"],[386,24,392,57],[386,27,392,57,"_ref6"],[386,32,392,57],[386,33,392,45,"viewPosition"],[386,45,392,57],[387,12,392,59,"viewOffset"],[387,22,392,69],[387,25,392,69,"_ref6"],[387,30,392,69],[387,31,392,59,"viewOffset"],[387,41,392,69],[388,10,393,16],[388,14,393,24,"data"],[388,18,393,28],[388,21,393,33,"recyclerViewManager"],[388,40,393,52],[388,41,393,53,"props"],[388,46,393,58],[388,47,393,24,"data"],[388,51,393,28],[389,10,394,16],[389,14,394,20,"scrollViewRef"],[389,27,394,33],[389,28,394,34,"current"],[389,35,394,41],[389,39,394,45,"data"],[389,43,394,49],[389,45,394,51],[390,12,395,20],[391,12,396,20],[391,16,396,26,"index"],[391,21,396,31],[391,24,396,34,"data"],[391,28,396,38],[391,29,396,39,"findIndex"],[391,38,396,48],[391,39,396,50,"dataItem"],[391,47,396,58],[391,51,396,63,"dataItem"],[391,59,396,71],[391,64,396,76,"item"],[391,68,396,80],[391,69,396,81],[392,12,397,20],[392,16,397,24,"index"],[392,21,397,29],[392,25,397,33],[392,26,397,34],[392,28,397,36],[393,14,398,24,"handlerMethods"],[393,28,398,38],[393,29,398,39,"scrollToIndex"],[393,42,398,52],[393,43,398,53],[394,16,399,28,"index"],[394,21,399,33],[395,16,400,28,"animated"],[395,24,400,36],[396,16,401,28,"viewPosition"],[396,28,401,40],[397,16,402,28,"viewOffset"],[398,14,403,24],[398,15,403,25],[398,16,403,26],[399,12,404,20],[400,10,405,16],[401,8,406,12],[401,9,406,13],[402,8,407,12],[403,8,408,12,"getFirstItemOffset"],[403,26,408,30],[403,28,408,32,"getFirstItemOffset"],[403,29,408,32],[403,34,408,38],[404,10,409,16],[404,17,409,23,"recyclerViewManager"],[404,36,409,42],[404,37,409,43,"firstItemOffset"],[404,52,409,58],[405,8,410,12],[405,9,410,13],[406,8,411,12,"getWindowSize"],[406,21,411,25],[406,23,411,27,"getWindowSize"],[406,24,411,27],[406,29,411,33],[407,10,412,16],[407,17,412,23,"recyclerViewManager"],[407,36,412,42],[407,37,412,43,"getWindowSize"],[407,50,412,56],[407,51,412,57],[407,52,412,58],[408,8,413,12],[408,9,413,13],[409,8,414,12,"getLayout"],[409,17,414,21],[409,19,414,24,"index"],[409,24,414,29],[409,28,414,34],[410,10,415,16],[410,17,415,23,"recyclerViewManager"],[410,36,415,42],[410,37,415,43,"tryGetLayout"],[410,49,415,55],[410,50,415,56,"index"],[410,55,415,61],[410,56,415,62],[411,8,416,12],[411,9,416,13],[412,8,417,12,"getAbsoluteLastScrollOffset"],[412,35,417,39],[412,37,417,41,"getAbsoluteLastScrollOffset"],[412,38,417,41],[412,43,417,47],[413,10,418,16],[413,17,418,23,"recyclerViewManager"],[413,36,418,42],[413,37,418,43,"getAbsoluteLastScrollOffset"],[413,64,418,70],[413,65,418,71],[413,66,418,72],[414,8,419,12],[414,9,419,13],[415,8,420,12,"getChildContainerDimensions"],[415,35,420,39],[415,37,420,41,"getChildContainerDimensions"],[415,38,420,41],[415,43,420,47],[416,10,421,16],[416,17,421,23,"recyclerViewManager"],[416,36,421,42],[416,37,421,43,"getChildContainerDimensions"],[416,64,421,70],[416,65,421,71],[416,66,421,72],[417,8,422,12],[417,9,422,13],[418,8,423,12,"recordInteraction"],[418,25,423,29],[418,27,423,31,"recordInteraction"],[418,28,423,31],[418,33,423,37],[419,10,424,16,"recyclerViewManager"],[419,29,424,35],[419,30,424,36,"recordInteraction"],[419,47,424,53],[419,48,424,54],[419,49,424,55],[420,8,425,12],[420,9,425,13],[421,8,426,12,"computeVisibleIndices"],[421,29,426,33],[421,31,426,35,"computeVisibleIndices"],[421,32,426,35],[421,37,426,41],[422,10,427,16],[422,17,427,23,"recyclerViewManager"],[422,36,427,42],[422,37,427,43,"computeVisibleIndices"],[422,58,427,64],[422,59,427,65],[422,60,427,66],[423,8,428,12],[423,9,428,13],[424,8,429,12,"getFirstVisibleIndex"],[424,28,429,32],[424,30,429,34,"getFirstVisibleIndex"],[424,31,429,34],[424,36,429,40],[425,10,430,16],[425,17,430,23,"recyclerViewManager"],[425,36,430,42],[425,37,430,43,"computeVisibleIndices"],[425,58,430,64],[425,59,430,65],[425,60,430,66],[425,61,430,67,"startIndex"],[425,71,430,77],[426,8,431,12],[426,9,431,13],[427,8,432,12,"recomputeViewableItems"],[427,30,432,34],[427,32,432,36,"recomputeViewableItems"],[427,33,432,36],[427,38,432,42],[428,10,433,16,"recyclerViewManager"],[428,29,433,35],[428,30,433,36,"recomputeViewableItems"],[428,52,433,58],[428,53,433,59],[428,54,433,60],[429,8,434,12],[429,9,434,13],[430,8,435,12],[431,0,436,0],[432,0,437,0],[433,8,438,12,"prepareForLayoutAnimationRender"],[433,39,438,43],[433,41,438,45,"prepareForLayoutAnimationRender"],[433,42,438,45],[433,47,438,51],[434,10,439,16],[434,14,439,20],[434,15,439,21,"recyclerViewManager"],[434,34,439,40],[434,35,439,41,"props"],[434,40,439,46],[434,41,439,47,"keyExtractor"],[434,53,439,59],[434,55,439,61],[435,12,440,20,"console"],[435,19,440,27],[435,20,440,28,"warn"],[435,24,440,32],[435,25,440,33,"WarningMessages"],[435,47,440,48],[435,48,440,48,"WarningMessages"],[435,63,440,48],[435,64,440,49,"keyExtractorNotDefinedForAnimation"],[435,98,440,83],[435,99,440,84],[436,10,441,16],[437,10,442,16,"recyclerViewManager"],[437,29,442,35],[437,30,442,36,"animationOptimizationsEnabled"],[437,59,442,65],[437,62,442,68],[437,66,442,72],[438,8,443,12],[439,6,444,8],[439,7,444,9],[440,4,445,4],[440,5,445,5],[440,7,445,7],[440,8,446,8,"recyclerViewManager"],[440,27,446,27],[440,29,447,8,"scrollViewRef"],[440,42,447,21],[440,44,448,8,"setTimeout"],[440,54,448,18],[440,56,449,8,"isUnmounted"],[440,67,449,19],[440,69,450,8,"updateScrollOffsetWithCallback"],[440,99,450,38],[440,100,451,5],[440,101,451,6],[441,4,452,4],[441,8,452,10,"applyInitialScrollIndex"],[441,31,452,33],[441,34,452,36],[441,38,452,36,"useCallback"],[441,44,452,47],[441,45,452,47,"useCallback"],[441,56,452,47],[441,58,452,48],[441,64,452,54],[442,6,453,8],[442,10,453,12,"_a"],[442,12,453,14],[442,14,453,16,"_b"],[442,16,453,18],[442,18,453,20,"_c"],[442,20,453,22],[443,6,454,8],[443,10,454,8,"_recyclerViewManager$2"],[443,32,454,8],[443,35,454,63,"recyclerViewManager"],[443,54,454,82],[443,55,454,83,"props"],[443,60,454,88],[444,8,454,16,"horizontal"],[444,18,454,26],[444,21,454,26,"_recyclerViewManager$2"],[444,43,454,26],[444,44,454,16,"horizontal"],[444,54,454,26],[445,8,454,28,"data"],[445,12,454,32],[445,15,454,32,"_recyclerViewManager$2"],[445,37,454,32],[445,38,454,28,"data"],[445,42,454,32],[446,8,454,34,"initialScrollIndexParams"],[446,32,454,58],[446,35,454,58,"_recyclerViewManager$2"],[446,57,454,58],[446,58,454,34,"initialScrollIndexParams"],[446,82,454,58],[447,6,455,8],[447,10,455,14,"initialScrollIndex"],[447,28,455,32],[447,31,455,35],[447,32,455,36,"_a"],[447,34,455,38],[447,37,455,41,"recyclerViewManager"],[447,56,455,60],[447,57,455,61,"getInitialScrollIndex"],[447,78,455,82],[447,79,455,83],[447,80,455,84],[447,86,455,90],[447,90,455,94],[447,94,455,98,"_a"],[447,96,455,100],[447,101,455,105],[447,106,455,110],[447,107,455,111],[447,110,455,114,"_a"],[447,112,455,116],[447,115,455,119],[447,116,455,120],[447,117,455,121],[448,6,456,8],[448,10,456,14,"dataLength"],[448,20,456,24],[448,23,456,27],[448,24,456,28,"_b"],[448,26,456,30],[448,29,456,33,"data"],[448,33,456,37],[448,38,456,42],[448,42,456,46],[448,46,456,50,"data"],[448,50,456,54],[448,55,456,59],[448,60,456,64],[448,61,456,65],[448,64,456,68],[448,69,456,73],[448,70,456,74],[448,73,456,77,"data"],[448,77,456,81],[448,78,456,82,"length"],[448,84,456,88],[448,90,456,94],[448,94,456,98],[448,98,456,102,"_b"],[448,100,456,104],[448,105,456,109],[448,110,456,114],[448,111,456,115],[448,114,456,118,"_b"],[448,116,456,120],[448,119,456,123],[448,120,456,124],[449,6,457,8],[449,10,457,12,"initialScrollIndex"],[449,28,457,30],[449,32,457,34],[449,33,457,35],[449,37,458,12,"initialScrollIndex"],[449,55,458,30],[449,58,458,33,"dataLength"],[449,68,458,43],[449,72,459,12],[449,73,459,13,"initialScrollCompletedRef"],[449,98,459,38],[449,99,459,39,"current"],[449,106,459,46],[449,110,460,12,"recyclerViewManager"],[449,129,460,31],[449,130,460,32,"getIsFirstLayoutComplete"],[449,154,460,56],[449,155,460,57],[449,156,460,58],[449,158,460,60],[450,8,461,12],[451,8,462,12,"setTimeout"],[451,18,462,22],[451,19,462,23],[451,25,462,29],[452,10,463,16,"initialScrollCompletedRef"],[452,35,463,41],[452,36,463,42,"current"],[452,43,463,49],[452,46,463,52],[452,50,463,56],[453,10,464,16,"pauseOffsetCorrection"],[453,31,464,37],[453,32,464,38,"current"],[453,39,464,45],[453,42,464,48],[453,47,464,53],[454,8,465,12],[454,9,465,13],[454,11,465,15],[454,14,465,18],[454,15,465,19],[455,8,466,12,"pauseOffsetCorrection"],[455,29,466,33],[455,30,466,34,"current"],[455,37,466,41],[455,40,466,44],[455,44,466,48],[456,8,467,12],[456,12,467,18,"additionalOffset"],[456,28,467,34],[456,31,467,37],[456,32,467,38,"_c"],[456,34,467,40],[456,37,467,43,"initialScrollIndexParams"],[456,61,467,67],[456,66,467,72],[456,70,467,76],[456,74,467,80,"initialScrollIndexParams"],[456,98,467,104],[456,103,467,109],[456,108,467,114],[456,109,467,115],[456,112,467,118],[456,117,467,123],[456,118,467,124],[456,121,467,127,"initialScrollIndexParams"],[456,145,467,151],[456,146,467,152,"viewOffset"],[456,156,467,162],[456,162,467,168],[456,166,467,172],[456,170,467,176,"_c"],[456,172,467,178],[456,177,467,183],[456,182,467,188],[456,183,467,189],[456,186,467,192,"_c"],[456,188,467,194],[456,191,467,197],[456,192,467,198],[457,8,468,12],[457,12,468,18,"offset"],[457,18,468,24],[457,21,468,27,"horizontal"],[457,31,468,37],[457,34,469,18,"recyclerViewManager"],[457,53,469,37],[457,54,469,38,"getLayout"],[457,63,469,47],[457,64,469,48,"initialScrollIndex"],[457,82,469,66],[457,83,469,67],[457,84,469,68,"x"],[457,85,469,69],[457,88,469,72,"additionalOffset"],[457,104,469,88],[457,107,470,18,"recyclerViewManager"],[457,126,470,37],[457,127,470,38,"getLayout"],[457,136,470,47],[457,137,470,48,"initialScrollIndex"],[457,155,470,66],[457,156,470,67],[457,157,470,68,"y"],[457,158,470,69],[457,161,471,20,"additionalOffset"],[457,177,471,36],[458,8,472,12,"handlerMethods"],[458,22,472,26],[458,23,472,27,"scrollToOffset"],[458,37,472,41],[458,38,472,42],[459,10,473,16,"offset"],[459,16,473,22],[460,10,474,16,"animated"],[460,18,474,24],[460,20,474,26],[460,25,474,31],[461,10,475,16,"skipFirstItemOffset"],[461,29,475,35],[461,31,475,37],[462,8,476,12],[462,9,476,13],[462,10,476,14],[463,8,477,12,"setTimeout"],[463,18,477,22],[463,19,477,23],[463,25,477,29],[464,10,478,16,"handlerMethods"],[464,24,478,30],[464,25,478,31,"scrollToOffset"],[464,39,478,45],[464,40,478,46],[465,12,479,20,"offset"],[465,18,479,26],[466,12,480,20,"animated"],[466,20,480,28],[466,22,480,30],[466,27,480,35],[467,12,481,20,"skipFirstItemOffset"],[467,31,481,39],[467,33,481,41],[468,10,482,16],[468,11,482,17],[468,12,482,18],[469,8,483,12],[469,9,483,13],[469,11,483,15],[469,12,483,16],[469,13,483,17],[470,6,484,8],[471,4,485,4],[471,5,485,5],[471,7,485,7],[471,8,485,8,"handlerMethods"],[471,22,485,22],[471,24,485,24,"recyclerViewManager"],[471,43,485,43],[471,45,485,45,"setTimeout"],[471,55,485,55],[471,56,485,56],[471,57,485,57],[472,4,486,4],[473,4,487,4],[473,8,487,4,"useImperativeHandle"],[473,14,487,23],[473,15,487,23,"useImperativeHandle"],[473,34,487,23],[473,36,487,24,"ref"],[473,39,487,27],[473,41,487,29],[473,47,487,35],[474,6,488,8],[474,10,488,14,"imperativeApi"],[474,23,488,27],[474,26,488,30],[475,8,488,32],[475,11,488,35,"scrollViewRef"],[475,24,488,48],[475,25,488,49,"current"],[475,32,488,56],[476,8,488,58],[476,11,488,61,"handlerMethods"],[477,6,488,76],[477,7,488,77],[478,6,489,8],[479,6,490,8],[480,6,491,8,"Object"],[480,12,491,14],[480,13,491,15,"defineProperty"],[480,27,491,29],[480,28,491,30,"imperativeApi"],[480,41,491,43],[480,43,491,45],[480,50,491,52],[480,52,491,54],[481,8,492,12,"get"],[481,11,492,15,"get"],[481,12,492,15],[481,14,492,18],[482,10,493,16],[482,17,493,23,"recyclerViewManager"],[482,36,493,42],[482,37,493,43,"props"],[482,42,493,48],[483,8,494,12],[483,9,494,13],[484,8,495,12,"enumerable"],[484,18,495,22],[484,20,495,24],[484,24,495,28],[485,8,496,12,"configurable"],[485,20,496,24],[485,22,496,26],[486,6,497,8],[486,7,497,9],[486,8,497,10],[487,6,498,8],[487,13,498,15,"imperativeApi"],[487,26,498,28],[488,4,499,4],[488,5,499,5],[488,7,499,7],[488,8,499,8,"handlerMethods"],[488,22,499,22],[488,24,499,24,"scrollViewRef"],[488,37,499,37],[488,39,499,39,"recyclerViewManager"],[488,58,499,58],[488,59,499,59],[488,60,499,60],[489,4,500,4],[489,11,500,11],[490,6,501,8,"applyOffsetCorrection"],[490,27,501,29],[491,6,502,8,"computeFirstVisibleIndexForOffsetCorrection"],[491,49,502,51],[492,6,503,8,"applyInitialScrollIndex"],[492,29,503,31],[493,6,504,8,"handlerMethods"],[494,4,505,4],[494,5,505,5],[495,2,506,0],[496,0,506,1],[496,3]],"functionMap":{"names":["<global>","useRecyclerViewController","updateScrollOffsetWithCallback","setRenderId$argument_0","computeFirstVisibleIndexForOffsetCorrection","applyOffsetCorrection","callbacks.forEach$argument_0","recyclerViewManager.getEngagedIndices.findValue$argument_0","data.findIndex$argument_0","updateScrollOffsetWithCallback$argument_1","setTimeout$argument_0","useMemo$argument_0","get__props","scrollToOffset","clearLayoutCacheOnUpdate","flashScrollIndicators","getNativeScrollRef","getScrollResponder","getScrollableNode","scrollToEnd","scrollToTop","scrollToIndex","Promise$argument_0","getFinalOffset","getStartScrollOffset","performScrollStep","finishScrollToIndex","scrollToItem","getFirstItemOffset","getWindowSize","getLayout","getAbsoluteLastScrollOffset","getChildContainerDimensions","recordInteraction","computeVisibleIndices","getFirstVisibleIndex","recomputeViewableItems","prepareForLayoutAnimationRender","applyInitialScrollIndex","useImperativeHandle$argument_1","Object.defineProperty$argument_2.get"],"mappings":"AAA;OCuB;uDCsB;wBCO,kBD;KDM;oEGC;KHe;8CIM;0BCO,wBD;+BEW;+CFC;iFGC;mDHC;qHIkC,SJ;uCKE;6BLE;KJQ;mCUQ;YCE;aDE;4BEK;aFuB;sCGC;aHE;mCIE;aJE;gCKC;aLE;gCMC;aNE;+BOC;aPE;yBQI;2BTW;iBSG;aRC;yBSI;aTK;2BUM;mCCC;+CCQ;yBDoB;qDEM;yBFY;kDGY;uEhBsB;6BgByB;yBHC;oDIK;uChBuB;6BgBI;yBJC;iBDQ;aVC;0BgBK;iDnBI,+BmB;ahBU;gCiBE;ajBE;2BkBC;alBE;uBmBC;anBE;yCoBC;apBE;yCqBC;arBE;+BsBC;atBE;mCuBC;avBE;kCwBC;axBE;oCyBC;azBE;6C0BI;a1BK;KVE;gDqCO;uB5BU;a4BG;uB5BY;a4BM;KrCE;6BsCE;YCK;aDE;KtCK;CDO"},"hasCjsExports":false},"type":"js/module"}]}