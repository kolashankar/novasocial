{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"../../native/config/PlatformHelper","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":68,"index":68}}],"key":"VAeUL6D5iY8QXYEBY5o7Ew2wCF4=","exportNames":["*"],"imports":1}},{"name":"./ConsecutiveNumbers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":69},"end":{"line":2,"column":58,"index":127}}],"key":"b+ekfNlQYWowRogjJ1zD6mvkT+k=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"RVEngagedIndicesTrackerImpl\", {\n    enumerable: true,\n    get: function () {\n      return RVEngagedIndicesTrackerImpl;\n    }\n  });\n  var _babelRuntimeHelpersClassCallCheck = require(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n  var _classCallCheck = _interopDefault(_babelRuntimeHelpersClassCallCheck);\n  var _babelRuntimeHelpersCreateClass = require(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n  var _createClass = _interopDefault(_babelRuntimeHelpersCreateClass);\n  var _nativeConfigPlatformHelper = require(_dependencyMap[2], \"../../native/config/PlatformHelper\");\n  var _ConsecutiveNumbers = require(_dependencyMap[3], \"./ConsecutiveNumbers\");\n  var RVEngagedIndicesTrackerImpl = /*#__PURE__*/function () {\n    function RVEngagedIndicesTrackerImpl() {\n      (0, _classCallCheck.default)(this, RVEngagedIndicesTrackerImpl);\n      // Current scroll position of the list\n      this.scrollOffset = 0;\n      // Distance to pre-render items before and after the visible viewport (in pixels)\n      this.drawDistance = _nativeConfigPlatformHelper.PlatformConfig.defaultDrawDistance;\n      // Whether to use offset projection to predict the next scroll offset\n      this.enableOffsetProjection = true;\n      // Average render time of the list\n      this.averageRenderTime = 16;\n      // Internal override to disable offset projection\n      this.forceDisableOffsetProjection = false;\n      // Currently rendered item indices (including buffer items)\n      this.engagedIndices = _ConsecutiveNumbers.ConsecutiveNumbers.EMPTY;\n      // Buffer distribution multipliers for scroll direction optimization\n      this.smallMultiplier = 0.3; // Used for buffer in the opposite direction of scroll\n      this.largeMultiplier = 0.7; // Used for buffer in the direction of scroll\n      // Circular buffer to track recent scroll velocities for direction detection\n      this.velocityHistory = [0, 0, 0, -0.1, -0.1];\n      this.velocityIndex = 0;\n    }\n    /**\n     * Updates scroll position and determines which items should be rendered.\n     * Implements a smart buffer system that:\n     * 1. Calculates the visible viewport\n     * 2. Determines optimal buffer distribution based on scroll direction\n     * 3. Adjusts buffer sizes at list boundaries\n     * 4. Returns new indices that need to be rendered\n     */\n    return (0, _createClass.default)(RVEngagedIndicesTrackerImpl, [{\n      key: \"updateScrollOffset\",\n      value: function updateScrollOffset(offset, velocity, layoutManager) {\n        // Update current scroll position\n        this.scrollOffset = offset;\n        // STEP 1: Determine the currently visible viewport\n        var windowSize = layoutManager.getWindowsSize();\n        var isHorizontal = layoutManager.isHorizontal();\n        // Update velocity history\n        if (velocity) {\n          this.updateVelocityHistory(isHorizontal ? velocity.x : velocity.y);\n        }\n        // Determine scroll direction to optimize buffer distribution\n        var isScrollingBackward = this.isScrollingBackward();\n        var viewportStart = this.enableOffsetProjection && !this.forceDisableOffsetProjection ? this.getProjectedScrollOffset(offset, this.averageRenderTime) : offset;\n        // console.log(\"timeMs\", this.averageRenderTime, offset, viewportStart);\n        var viewportSize = isHorizontal ? windowSize.width : windowSize.height;\n        var viewportEnd = viewportStart + viewportSize;\n        // STEP 2: Determine buffer size and distribution\n        // The total extra space where items will be pre-rendered\n        var totalBuffer = this.drawDistance * 2;\n        // Distribute more buffer in the direction of scrolling\n        // When scrolling forward: more buffer after viewport\n        // When scrolling backward: more buffer before viewport\n        var beforeRatio = isScrollingBackward ? this.largeMultiplier : this.smallMultiplier;\n        var afterRatio = isScrollingBackward ? this.smallMultiplier : this.largeMultiplier;\n        var bufferBefore = Math.ceil(totalBuffer * beforeRatio);\n        var bufferAfter = Math.ceil(totalBuffer * afterRatio);\n        // STEP 3: Calculate the extended viewport (visible area + buffers)\n        // The start position with buffer (never less than 0)\n        var extendedStart = Math.max(0, viewportStart - bufferBefore);\n        // If we couldn't apply full buffer at start, calculate how much was unused\n        var unusedStartBuffer = Math.max(0, bufferBefore - viewportStart);\n        // Add any unused start buffer to the end buffer\n        var extendedEnd = viewportEnd + bufferAfter + unusedStartBuffer;\n        // STEP 4: Handle end boundary adjustments\n        // Get the total content size to check for end boundary\n        var layoutSize = layoutManager.getLayoutSize();\n        var maxPosition = isHorizontal ? layoutSize.width : layoutSize.height;\n        // If we hit the end boundary, redistribute unused buffer to the start\n        if (extendedEnd > maxPosition) {\n          // Calculate unused end buffer and apply it to the start if possible\n          var unusedEndBuffer = extendedEnd - maxPosition;\n          extendedEnd = maxPosition;\n          // Try to extend start position further with the unused end buffer\n          extendedStart = Math.max(0, extendedStart - unusedEndBuffer);\n        }\n        // STEP 5: Get and return the new engaged indices\n        var newEngagedIndices = layoutManager.getVisibleLayouts(extendedStart, extendedEnd);\n        // console.log(\n        //   \"newEngagedIndices\",\n        //   newEngagedIndices,\n        //   this.scrollOffset,\n        //   viewportStart\n        // );\n        // Only return new indices if they've changed\n        var oldEngagedIndices = this.engagedIndices;\n        this.engagedIndices = newEngagedIndices;\n        return newEngagedIndices.equals(oldEngagedIndices) ? undefined : newEngagedIndices;\n      }\n      /**\n       * Updates the velocity history with a new velocity value.\n       * @param velocity - Current scroll velocity component (x or y)\n       */\n    }, {\n      key: \"updateVelocityHistory\",\n      value: function updateVelocityHistory(velocity) {\n        this.velocityHistory[this.velocityIndex] = velocity;\n        this.velocityIndex = (this.velocityIndex + 1) % this.velocityHistory.length;\n      }\n      /**\n       * Determines scroll direction by analyzing recent velocity history.\n       * Uses a majority voting system on the last 5 velocity values.\n       * @returns true if scrolling backward (negative direction), false otherwise\n       */\n    }, {\n      key: \"isScrollingBackward\",\n      value: function isScrollingBackward() {\n        // should decide based on whether we have more positive or negative values, use for loop\n        var positiveCount = 0;\n        var negativeCount = 0;\n        // eslint-disable-next-line @typescript-eslint/prefer-for-of\n        for (var i = 0; i < this.velocityHistory.length; i++) {\n          if (this.velocityHistory[i] > 0) {\n            positiveCount++;\n          } else if (this.velocityHistory[i] < 0) {\n            negativeCount++;\n          }\n        }\n        return positiveCount < negativeCount;\n      }\n      /**\n       * Calculates the median velocity based on velocity history\n       * Medina works better agains outliers\n       * @returns Median velocity over the recent history\n       */\n    }, {\n      key: \"getMedianVelocity\",\n      value: function getMedianVelocity() {\n        // Make a copy of velocity history and sort it\n        var sortedVelocities = [...this.velocityHistory].sort((valueA, valueB) => valueA - valueB);\n        var length = sortedVelocities.length;\n        // If length is odd, return the middle element\n        if (length % 2 === 1) {\n          return sortedVelocities[Math.floor(length / 2)];\n        }\n        // If length is even, return the average of the two middle elements\n        var midIndex = length / 2;\n        return (sortedVelocities[midIndex - 1] + sortedVelocities[midIndex]) / 2;\n      }\n      /**\n       * Projects the next scroll offset based on median velocity\n       * @param timeMs Time in milliseconds to predict ahead\n       * @returns Projected scroll offset\n       */\n    }, {\n      key: \"getProjectedScrollOffset\",\n      value: function getProjectedScrollOffset(offset, timeMs) {\n        var medianVelocity = this.getMedianVelocity();\n        // Convert time from ms to seconds for velocity calculation\n        // Predict next position: current position + (velocity * time)\n        return offset + medianVelocity * timeMs;\n      }\n      /**\n       * Calculates which items are currently visible in the viewport.\n       * Unlike getEngagedIndices, this doesn't include buffer items.\n       * @param layoutManager - Layout manager to fetch item positions\n       * @returns Indices of items currently visible in the viewport\n       */\n    }, {\n      key: \"computeVisibleIndices\",\n      value: function computeVisibleIndices(layoutManager) {\n        var windowSize = layoutManager.getWindowsSize();\n        var isHorizontal = layoutManager.isHorizontal();\n        // Calculate viewport boundaries\n        var viewportStart = this.scrollOffset;\n        var viewportSize = isHorizontal ? windowSize.width : windowSize.height;\n        var viewportEnd = viewportStart + viewportSize;\n        // Get indices of items currently visible in the viewport\n        var newVisibleIndices = layoutManager.getVisibleLayouts(viewportStart, viewportEnd);\n        return newVisibleIndices;\n      }\n      /**\n       * Returns the currently engaged (rendered) indices.\n       * This includes both visible items and buffer items.\n       * @returns The last computed set of engaged indices\n       */\n    }, {\n      key: \"getEngagedIndices\",\n      value: function getEngagedIndices() {\n        return this.engagedIndices;\n      }\n    }, {\n      key: \"setScrollDirection\",\n      value: function setScrollDirection(scrollDirection) {\n        if (scrollDirection === \"forward\") {\n          this.velocityHistory = [0, 0, 0, 0.1, 0.1];\n          this.velocityIndex = 0;\n        } else {\n          this.velocityHistory = [0, 0, 0, -0.1, -0.1];\n          this.velocityIndex = 0;\n        }\n      }\n      /**\n       * Resets the velocity history based on the current scroll direction.\n       * This ensures that the velocity history is always in sync with the current scroll direction.\n       */\n    }, {\n      key: \"resetVelocityHistory\",\n      value: function resetVelocityHistory() {\n        if (this.isScrollingBackward()) {\n          this.setScrollDirection(\"backward\");\n        } else {\n          this.setScrollDirection(\"forward\");\n        }\n      }\n    }]);\n  }();\n});","lineCount":232,"map":[[12,2,3,0,"Object"],[12,8,3,0],[12,9,3,0,"defineProperty"],[12,23,3,0],[12,24,3,0,"exports"],[12,31,3,0],[13,4,3,0,"enumerable"],[13,14,3,0],[14,4,3,0,"get"],[14,7,3,0],[14,18,3,0,"get"],[14,19,3,0],[15,6,3,0],[15,13,3,0,"RVEngagedIndicesTrackerImpl"],[15,40,3,0],[16,4,3,0],[17,2,3,0],[18,2,201,1],[18,6,201,1,"_babelRuntimeHelpersClassCallCheck"],[18,40,201,1],[18,43,201,1,"require"],[18,50,201,1],[18,51,201,1,"_dependencyMap"],[18,65,201,1],[19,2,201,1],[19,6,201,1,"_classCallCheck"],[19,21,201,1],[19,24,201,1,"_interopDefault"],[19,39,201,1],[19,40,201,1,"_babelRuntimeHelpersClassCallCheck"],[19,74,201,1],[20,2,201,1],[20,6,201,1,"_babelRuntimeHelpersCreateClass"],[20,37,201,1],[20,40,201,1,"require"],[20,47,201,1],[20,48,201,1,"_dependencyMap"],[20,62,201,1],[21,2,201,1],[21,6,201,1,"_createClass"],[21,18,201,1],[21,21,201,1,"_interopDefault"],[21,36,201,1],[21,37,201,1,"_babelRuntimeHelpersCreateClass"],[21,68,201,1],[22,2,1,0],[22,6,1,0,"_nativeConfigPlatformHelper"],[22,33,1,0],[22,36,1,0,"require"],[22,43,1,0],[22,44,1,0,"_dependencyMap"],[22,58,1,0],[23,2,2,0],[23,6,2,0,"_ConsecutiveNumbers"],[23,25,2,0],[23,28,2,0,"require"],[23,35,2,0],[23,36,2,0,"_dependencyMap"],[23,50,2,0],[24,2,2,58],[24,6,3,13,"RVEngagedIndicesTrackerImpl"],[24,33,3,40],[25,4,4,4],[25,13,4,4,"RVEngagedIndicesTrackerImpl"],[25,41,4,4],[25,43,4,18],[26,6,4,18],[26,10,4,18,"_classCallCheck"],[26,25,4,18],[26,26,4,18,"default"],[26,33,4,18],[26,41,4,18,"RVEngagedIndicesTrackerImpl"],[26,68,4,18],[27,6,5,8],[28,6,6,8],[28,10,6,12],[28,11,6,13,"scrollOffset"],[28,23,6,25],[28,26,6,28],[28,27,6,29],[29,6,7,8],[30,6,8,8],[30,10,8,12],[30,11,8,13,"drawDistance"],[30,23,8,25],[30,26,8,28,"PlatformConfig"],[30,53,8,42],[30,54,8,42,"PlatformConfig"],[30,68,8,42],[30,69,8,43,"defaultDrawDistance"],[30,88,8,62],[31,6,9,8],[32,6,10,8],[32,10,10,12],[32,11,10,13,"enableOffsetProjection"],[32,33,10,35],[32,36,10,38],[32,40,10,42],[33,6,11,8],[34,6,12,8],[34,10,12,12],[34,11,12,13,"averageRenderTime"],[34,28,12,30],[34,31,12,33],[34,33,12,35],[35,6,13,8],[36,6,14,8],[36,10,14,12],[36,11,14,13,"forceDisableOffsetProjection"],[36,39,14,41],[36,42,14,44],[36,47,14,49],[37,6,15,8],[38,6,16,8],[38,10,16,12],[38,11,16,13,"engagedIndices"],[38,25,16,27],[38,28,16,30,"ConsecutiveNumbers"],[38,47,16,48],[38,48,16,48,"ConsecutiveNumbers"],[38,66,16,48],[38,67,16,49,"EMPTY"],[38,72,16,54],[39,6,17,8],[40,6,18,8],[40,10,18,12],[40,11,18,13,"smallMultiplier"],[40,26,18,28],[40,29,18,31],[40,32,18,34],[40,33,18,35],[40,34,18,36],[41,6,19,8],[41,10,19,12],[41,11,19,13,"largeMultiplier"],[41,26,19,28],[41,29,19,31],[41,32,19,34],[41,33,19,35],[41,34,19,36],[42,6,20,8],[43,6,21,8],[43,10,21,12],[43,11,21,13,"velocityHistory"],[43,26,21,28],[43,29,21,31],[43,30,21,32],[43,31,21,33],[43,33,21,35],[43,34,21,36],[43,36,21,38],[43,37,21,39],[43,39,21,41],[43,40,21,42],[43,43,21,45],[43,45,21,47],[43,46,21,48],[43,49,21,51],[43,50,21,52],[44,6,22,8],[44,10,22,12],[44,11,22,13,"velocityIndex"],[44,24,22,26],[44,27,22,29],[44,28,22,30],[45,4,23,4],[46,4,24,4],[47,0,25,0],[48,0,26,0],[49,0,27,0],[50,0,28,0],[51,0,29,0],[52,0,30,0],[53,0,31,0],[54,4,24,4],[54,15,24,4,"_createClass"],[54,27,24,4],[54,28,24,4,"default"],[54,35,24,4],[54,37,24,4,"RVEngagedIndicesTrackerImpl"],[54,64,24,4],[55,6,24,4,"key"],[55,9,24,4],[56,6,24,4,"value"],[56,11,24,4],[56,13,32,4],[56,22,32,4,"updateScrollOffset"],[56,40,32,22,"updateScrollOffset"],[56,41,32,23,"offset"],[56,47,32,29],[56,49,32,31,"velocity"],[56,57,32,39],[56,59,32,41,"layoutManager"],[56,72,32,54],[56,74,32,56],[57,8,33,8],[58,8,34,8],[58,12,34,12],[58,13,34,13,"scrollOffset"],[58,25,34,25],[58,28,34,28,"offset"],[58,34,34,34],[59,8,35,8],[60,8,36,8],[60,12,36,14,"windowSize"],[60,22,36,24],[60,25,36,27,"layoutManager"],[60,38,36,40],[60,39,36,41,"getWindowsSize"],[60,53,36,55],[60,54,36,56],[60,55,36,57],[61,8,37,8],[61,12,37,14,"isHorizontal"],[61,24,37,26],[61,27,37,29,"layoutManager"],[61,40,37,42],[61,41,37,43,"isHorizontal"],[61,53,37,55],[61,54,37,56],[61,55,37,57],[62,8,38,8],[63,8,39,8],[63,12,39,12,"velocity"],[63,20,39,20],[63,22,39,22],[64,10,40,12],[64,14,40,16],[64,15,40,17,"updateVelocityHistory"],[64,36,40,38],[64,37,40,39,"isHorizontal"],[64,49,40,51],[64,52,40,54,"velocity"],[64,60,40,62],[64,61,40,63,"x"],[64,62,40,64],[64,65,40,67,"velocity"],[64,73,40,75],[64,74,40,76,"y"],[64,75,40,77],[64,76,40,78],[65,8,41,8],[66,8,42,8],[67,8,43,8],[67,12,43,14,"isScrollingBackward"],[67,31,43,33],[67,34,43,36],[67,38,43,40],[67,39,43,41,"isScrollingBackward"],[67,58,43,60],[67,59,43,61],[67,60,43,62],[68,8,44,8],[68,12,44,14,"viewportStart"],[68,25,44,27],[68,28,44,30],[68,32,44,34],[68,33,44,35,"enableOffsetProjection"],[68,55,44,57],[68,59,44,61],[68,60,44,62],[68,64,44,66],[68,65,44,67,"forceDisableOffsetProjection"],[68,93,44,95],[68,96,45,14],[68,100,45,18],[68,101,45,19,"getProjectedScrollOffset"],[68,125,45,43],[68,126,45,44,"offset"],[68,132,45,50],[68,134,45,52],[68,138,45,56],[68,139,45,57,"averageRenderTime"],[68,156,45,74],[68,157,45,75],[68,160,46,14,"offset"],[68,166,46,20],[69,8,47,8],[70,8,48,8],[70,12,48,14,"viewportSize"],[70,24,48,26],[70,27,48,29,"isHorizontal"],[70,39,48,41],[70,42,48,44,"windowSize"],[70,52,48,54],[70,53,48,55,"width"],[70,58,48,60],[70,61,48,63,"windowSize"],[70,71,48,73],[70,72,48,74,"height"],[70,78,48,80],[71,8,49,8],[71,12,49,14,"viewportEnd"],[71,23,49,25],[71,26,49,28,"viewportStart"],[71,39,49,41],[71,42,49,44,"viewportSize"],[71,54,49,56],[72,8,50,8],[73,8,51,8],[74,8,52,8],[74,12,52,14,"totalBuffer"],[74,23,52,25],[74,26,52,28],[74,30,52,32],[74,31,52,33,"drawDistance"],[74,43,52,45],[74,46,52,48],[74,47,52,49],[75,8,53,8],[76,8,54,8],[77,8,55,8],[78,8,56,8],[78,12,56,14,"beforeRatio"],[78,23,56,25],[78,26,56,28,"isScrollingBackward"],[78,45,56,47],[78,48,57,14],[78,52,57,18],[78,53,57,19,"largeMultiplier"],[78,68,57,34],[78,71,58,14],[78,75,58,18],[78,76,58,19,"smallMultiplier"],[78,91,58,34],[79,8,59,8],[79,12,59,14,"afterRatio"],[79,22,59,24],[79,25,59,27,"isScrollingBackward"],[79,44,59,46],[79,47,60,14],[79,51,60,18],[79,52,60,19,"smallMultiplier"],[79,67,60,34],[79,70,61,14],[79,74,61,18],[79,75,61,19,"largeMultiplier"],[79,90,61,34],[80,8,62,8],[80,12,62,14,"bufferBefore"],[80,24,62,26],[80,27,62,29,"Math"],[80,31,62,33],[80,32,62,34,"ceil"],[80,36,62,38],[80,37,62,39,"totalBuffer"],[80,48,62,50],[80,51,62,53,"beforeRatio"],[80,62,62,64],[80,63,62,65],[81,8,63,8],[81,12,63,14,"bufferAfter"],[81,23,63,25],[81,26,63,28,"Math"],[81,30,63,32],[81,31,63,33,"ceil"],[81,35,63,37],[81,36,63,38,"totalBuffer"],[81,47,63,49],[81,50,63,52,"afterRatio"],[81,60,63,62],[81,61,63,63],[82,8,64,8],[83,8,65,8],[84,8,66,8],[84,12,66,12,"extendedStart"],[84,25,66,25],[84,28,66,28,"Math"],[84,32,66,32],[84,33,66,33,"max"],[84,36,66,36],[84,37,66,37],[84,38,66,38],[84,40,66,40,"viewportStart"],[84,53,66,53],[84,56,66,56,"bufferBefore"],[84,68,66,68],[84,69,66,69],[85,8,67,8],[86,8,68,8],[86,12,68,14,"unusedStartBuffer"],[86,29,68,31],[86,32,68,34,"Math"],[86,36,68,38],[86,37,68,39,"max"],[86,40,68,42],[86,41,68,43],[86,42,68,44],[86,44,68,46,"bufferBefore"],[86,56,68,58],[86,59,68,61,"viewportStart"],[86,72,68,74],[86,73,68,75],[87,8,69,8],[88,8,70,8],[88,12,70,12,"extendedEnd"],[88,23,70,23],[88,26,70,26,"viewportEnd"],[88,37,70,37],[88,40,70,40,"bufferAfter"],[88,51,70,51],[88,54,70,54,"unusedStartBuffer"],[88,71,70,71],[89,8,71,8],[90,8,72,8],[91,8,73,8],[91,12,73,14,"layoutSize"],[91,22,73,24],[91,25,73,27,"layoutManager"],[91,38,73,40],[91,39,73,41,"getLayoutSize"],[91,52,73,54],[91,53,73,55],[91,54,73,56],[92,8,74,8],[92,12,74,14,"maxPosition"],[92,23,74,25],[92,26,74,28,"isHorizontal"],[92,38,74,40],[92,41,74,43,"layoutSize"],[92,51,74,53],[92,52,74,54,"width"],[92,57,74,59],[92,60,74,62,"layoutSize"],[92,70,74,72],[92,71,74,73,"height"],[92,77,74,79],[93,8,75,8],[94,8,76,8],[94,12,76,12,"extendedEnd"],[94,23,76,23],[94,26,76,26,"maxPosition"],[94,37,76,37],[94,39,76,39],[95,10,77,12],[96,10,78,12],[96,14,78,18,"unusedEndBuffer"],[96,29,78,33],[96,32,78,36,"extendedEnd"],[96,43,78,47],[96,46,78,50,"maxPosition"],[96,57,78,61],[97,10,79,12,"extendedEnd"],[97,21,79,23],[97,24,79,26,"maxPosition"],[97,35,79,37],[98,10,80,12],[99,10,81,12,"extendedStart"],[99,23,81,25],[99,26,81,28,"Math"],[99,30,81,32],[99,31,81,33,"max"],[99,34,81,36],[99,35,81,37],[99,36,81,38],[99,38,81,40,"extendedStart"],[99,51,81,53],[99,54,81,56,"unusedEndBuffer"],[99,69,81,71],[99,70,81,72],[100,8,82,8],[101,8,83,8],[102,8,84,8],[102,12,84,14,"newEngagedIndices"],[102,29,84,31],[102,32,84,34,"layoutManager"],[102,45,84,47],[102,46,84,48,"getVisibleLayouts"],[102,63,84,65],[102,64,84,66,"extendedStart"],[102,77,84,79],[102,79,84,81,"extendedEnd"],[102,90,84,92],[102,91,84,93],[103,8,85,8],[104,8,86,8],[105,8,87,8],[106,8,88,8],[107,8,89,8],[108,8,90,8],[109,8,91,8],[110,8,92,8],[110,12,92,14,"oldEngagedIndices"],[110,29,92,31],[110,32,92,34],[110,36,92,38],[110,37,92,39,"engagedIndices"],[110,51,92,53],[111,8,93,8],[111,12,93,12],[111,13,93,13,"engagedIndices"],[111,27,93,27],[111,30,93,30,"newEngagedIndices"],[111,47,93,47],[112,8,94,8],[112,15,94,15,"newEngagedIndices"],[112,32,94,32],[112,33,94,33,"equals"],[112,39,94,39],[112,40,94,40,"oldEngagedIndices"],[112,57,94,57],[112,58,94,58],[112,61,95,14,"undefined"],[112,70,95,23],[112,73,96,14,"newEngagedIndices"],[112,90,96,31],[113,6,97,4],[114,6,98,4],[115,0,99,0],[116,0,100,0],[117,0,101,0],[118,4,98,4],[119,6,98,4,"key"],[119,9,98,4],[120,6,98,4,"value"],[120,11,98,4],[120,13,102,4],[120,22,102,4,"updateVelocityHistory"],[120,43,102,25,"updateVelocityHistory"],[120,44,102,26,"velocity"],[120,52,102,34],[120,54,102,36],[121,8,103,8],[121,12,103,12],[121,13,103,13,"velocityHistory"],[121,28,103,28],[121,29,103,29],[121,33,103,33],[121,34,103,34,"velocityIndex"],[121,47,103,47],[121,48,103,48],[121,51,103,51,"velocity"],[121,59,103,59],[122,8,104,8],[122,12,104,12],[122,13,104,13,"velocityIndex"],[122,26,104,26],[122,29,104,29],[122,30,104,30],[122,34,104,34],[122,35,104,35,"velocityIndex"],[122,48,104,48],[122,51,104,51],[122,52,104,52],[122,56,104,56],[122,60,104,60],[122,61,104,61,"velocityHistory"],[122,76,104,76],[122,77,104,77,"length"],[122,83,104,83],[123,6,105,4],[124,6,106,4],[125,0,107,0],[126,0,108,0],[127,0,109,0],[128,0,110,0],[129,4,106,4],[130,6,106,4,"key"],[130,9,106,4],[131,6,106,4,"value"],[131,11,106,4],[131,13,111,4],[131,22,111,4,"isScrollingBackward"],[131,41,111,23,"isScrollingBackward"],[131,42,111,23],[131,44,111,26],[132,8,112,8],[133,8,113,8],[133,12,113,12,"positiveCount"],[133,25,113,25],[133,28,113,28],[133,29,113,29],[134,8,114,8],[134,12,114,12,"negativeCount"],[134,25,114,25],[134,28,114,28],[134,29,114,29],[135,8,115,8],[136,8,116,8],[136,13,116,13],[136,17,116,17,"i"],[136,18,116,18],[136,21,116,21],[136,22,116,22],[136,24,116,24,"i"],[136,25,116,25],[136,28,116,28],[136,32,116,32],[136,33,116,33,"velocityHistory"],[136,48,116,48],[136,49,116,49,"length"],[136,55,116,55],[136,57,116,57,"i"],[136,58,116,58],[136,60,116,60],[136,62,116,62],[137,10,117,12],[137,14,117,16],[137,18,117,20],[137,19,117,21,"velocityHistory"],[137,34,117,36],[137,35,117,37,"i"],[137,36,117,38],[137,37,117,39],[137,40,117,42],[137,41,117,43],[137,43,117,45],[138,12,118,16,"positiveCount"],[138,25,118,29],[138,27,118,31],[139,10,119,12],[139,11,119,13],[139,17,120,17],[139,21,120,21],[139,25,120,25],[139,26,120,26,"velocityHistory"],[139,41,120,41],[139,42,120,42,"i"],[139,43,120,43],[139,44,120,44],[139,47,120,47],[139,48,120,48],[139,50,120,50],[140,12,121,16,"negativeCount"],[140,25,121,29],[140,27,121,31],[141,10,122,12],[142,8,123,8],[143,8,124,8],[143,15,124,15,"positiveCount"],[143,28,124,28],[143,31,124,31,"negativeCount"],[143,44,124,44],[144,6,125,4],[145,6,126,4],[146,0,127,0],[147,0,128,0],[148,0,129,0],[149,0,130,0],[150,4,126,4],[151,6,126,4,"key"],[151,9,126,4],[152,6,126,4,"value"],[152,11,126,4],[152,13,131,4],[152,22,131,4,"getMedianVelocity"],[152,39,131,21,"getMedianVelocity"],[152,40,131,21],[152,42,131,24],[153,8,132,8],[154,8,133,8],[154,12,133,14,"sortedVelocities"],[154,28,133,30],[154,31,133,33],[154,32,133,34],[154,35,133,37],[154,39,133,41],[154,40,133,42,"velocityHistory"],[154,55,133,57],[154,56,133,58],[154,57,133,59,"sort"],[154,61,133,63],[154,62,133,64],[154,63,133,65,"valueA"],[154,69,133,71],[154,71,133,73,"valueB"],[154,77,133,79],[154,82,133,84,"valueA"],[154,88,133,90],[154,91,133,93,"valueB"],[154,97,133,99],[154,98,133,100],[155,8,134,8],[155,12,134,14,"length"],[155,18,134,20],[155,21,134,23,"sortedVelocities"],[155,37,134,39],[155,38,134,40,"length"],[155,44,134,46],[156,8,135,8],[157,8,136,8],[157,12,136,12,"length"],[157,18,136,18],[157,21,136,21],[157,22,136,22],[157,27,136,27],[157,28,136,28],[157,30,136,30],[158,10,137,12],[158,17,137,19,"sortedVelocities"],[158,33,137,35],[158,34,137,36,"Math"],[158,38,137,40],[158,39,137,41,"floor"],[158,44,137,46],[158,45,137,47,"length"],[158,51,137,53],[158,54,137,56],[158,55,137,57],[158,56,137,58],[158,57,137,59],[159,8,138,8],[160,8,139,8],[161,8,140,8],[161,12,140,14,"midIndex"],[161,20,140,22],[161,23,140,25,"length"],[161,29,140,31],[161,32,140,34],[161,33,140,35],[162,8,141,8],[162,15,141,15],[162,16,141,16,"sortedVelocities"],[162,32,141,32],[162,33,141,33,"midIndex"],[162,41,141,41],[162,44,141,44],[162,45,141,45],[162,46,141,46],[162,49,141,49,"sortedVelocities"],[162,65,141,65],[162,66,141,66,"midIndex"],[162,74,141,74],[162,75,141,75],[162,79,141,79],[162,80,141,80],[163,6,142,4],[164,6,143,4],[165,0,144,0],[166,0,145,0],[167,0,146,0],[168,0,147,0],[169,4,143,4],[170,6,143,4,"key"],[170,9,143,4],[171,6,143,4,"value"],[171,11,143,4],[171,13,148,4],[171,22,148,4,"getProjectedScrollOffset"],[171,46,148,28,"getProjectedScrollOffset"],[171,47,148,29,"offset"],[171,53,148,35],[171,55,148,37,"timeMs"],[171,61,148,43],[171,63,148,45],[172,8,149,8],[172,12,149,14,"medianVelocity"],[172,26,149,28],[172,29,149,31],[172,33,149,35],[172,34,149,36,"getMedianVelocity"],[172,51,149,53],[172,52,149,54],[172,53,149,55],[173,8,150,8],[174,8,151,8],[175,8,152,8],[175,15,152,15,"offset"],[175,21,152,21],[175,24,152,24,"medianVelocity"],[175,38,152,38],[175,41,152,41,"timeMs"],[175,47,152,47],[176,6,153,4],[177,6,154,4],[178,0,155,0],[179,0,156,0],[180,0,157,0],[181,0,158,0],[182,0,159,0],[183,4,154,4],[184,6,154,4,"key"],[184,9,154,4],[185,6,154,4,"value"],[185,11,154,4],[185,13,160,4],[185,22,160,4,"computeVisibleIndices"],[185,43,160,25,"computeVisibleIndices"],[185,44,160,26,"layoutManager"],[185,57,160,39],[185,59,160,41],[186,8,161,8],[186,12,161,14,"windowSize"],[186,22,161,24],[186,25,161,27,"layoutManager"],[186,38,161,40],[186,39,161,41,"getWindowsSize"],[186,53,161,55],[186,54,161,56],[186,55,161,57],[187,8,162,8],[187,12,162,14,"isHorizontal"],[187,24,162,26],[187,27,162,29,"layoutManager"],[187,40,162,42],[187,41,162,43,"isHorizontal"],[187,53,162,55],[187,54,162,56],[187,55,162,57],[188,8,163,8],[189,8,164,8],[189,12,164,14,"viewportStart"],[189,25,164,27],[189,28,164,30],[189,32,164,34],[189,33,164,35,"scrollOffset"],[189,45,164,47],[190,8,165,8],[190,12,165,14,"viewportSize"],[190,24,165,26],[190,27,165,29,"isHorizontal"],[190,39,165,41],[190,42,165,44,"windowSize"],[190,52,165,54],[190,53,165,55,"width"],[190,58,165,60],[190,61,165,63,"windowSize"],[190,71,165,73],[190,72,165,74,"height"],[190,78,165,80],[191,8,166,8],[191,12,166,14,"viewportEnd"],[191,23,166,25],[191,26,166,28,"viewportStart"],[191,39,166,41],[191,42,166,44,"viewportSize"],[191,54,166,56],[192,8,167,8],[193,8,168,8],[193,12,168,14,"newVisibleIndices"],[193,29,168,31],[193,32,168,34,"layoutManager"],[193,45,168,47],[193,46,168,48,"getVisibleLayouts"],[193,63,168,65],[193,64,168,66,"viewportStart"],[193,77,168,79],[193,79,168,81,"viewportEnd"],[193,90,168,92],[193,91,168,93],[194,8,169,8],[194,15,169,15,"newVisibleIndices"],[194,32,169,32],[195,6,170,4],[196,6,171,4],[197,0,172,0],[198,0,173,0],[199,0,174,0],[200,0,175,0],[201,4,171,4],[202,6,171,4,"key"],[202,9,171,4],[203,6,171,4,"value"],[203,11,171,4],[203,13,176,4],[203,22,176,4,"getEngagedIndices"],[203,39,176,21,"getEngagedIndices"],[203,40,176,21],[203,42,176,24],[204,8,177,8],[204,15,177,15],[204,19,177,19],[204,20,177,20,"engagedIndices"],[204,34,177,34],[205,6,178,4],[206,4,178,5],[207,6,178,5,"key"],[207,9,178,5],[208,6,178,5,"value"],[208,11,178,5],[208,13,179,4],[208,22,179,4,"setScrollDirection"],[208,40,179,22,"setScrollDirection"],[208,41,179,23,"scrollDirection"],[208,56,179,38],[208,58,179,40],[209,8,180,8],[209,12,180,12,"scrollDirection"],[209,27,180,27],[209,32,180,32],[209,41,180,41],[209,43,180,43],[210,10,181,12],[210,14,181,16],[210,15,181,17,"velocityHistory"],[210,30,181,32],[210,33,181,35],[210,34,181,36],[210,35,181,37],[210,37,181,39],[210,38,181,40],[210,40,181,42],[210,41,181,43],[210,43,181,45],[210,46,181,48],[210,48,181,50],[210,51,181,53],[210,52,181,54],[211,10,182,12],[211,14,182,16],[211,15,182,17,"velocityIndex"],[211,28,182,30],[211,31,182,33],[211,32,182,34],[212,8,183,8],[212,9,183,9],[212,15,184,13],[213,10,185,12],[213,14,185,16],[213,15,185,17,"velocityHistory"],[213,30,185,32],[213,33,185,35],[213,34,185,36],[213,35,185,37],[213,37,185,39],[213,38,185,40],[213,40,185,42],[213,41,185,43],[213,43,185,45],[213,44,185,46],[213,47,185,49],[213,49,185,51],[213,50,185,52],[213,53,185,55],[213,54,185,56],[214,10,186,12],[214,14,186,16],[214,15,186,17,"velocityIndex"],[214,28,186,30],[214,31,186,33],[214,32,186,34],[215,8,187,8],[216,6,188,4],[217,6,189,4],[218,0,190,0],[219,0,191,0],[220,0,192,0],[221,4,189,4],[222,6,189,4,"key"],[222,9,189,4],[223,6,189,4,"value"],[223,11,189,4],[223,13,193,4],[223,22,193,4,"resetVelocityHistory"],[223,42,193,24,"resetVelocityHistory"],[223,43,193,24],[223,45,193,27],[224,8,194,8],[224,12,194,12],[224,16,194,16],[224,17,194,17,"isScrollingBackward"],[224,36,194,36],[224,37,194,37],[224,38,194,38],[224,40,194,40],[225,10,195,12],[225,14,195,16],[225,15,195,17,"setScrollDirection"],[225,33,195,35],[225,34,195,36],[225,44,195,46],[225,45,195,47],[226,8,196,8],[226,9,196,9],[226,15,197,13],[227,10,198,12],[227,14,198,16],[227,15,198,17,"setScrollDirection"],[227,33,198,35],[227,34,198,36],[227,43,198,45],[227,44,198,46],[228,8,199,8],[229,6,200,4],[230,4,200,5],[231,2,200,5],[232,0,200,5],[232,3]],"functionMap":{"names":["<global>","RVEngagedIndicesTrackerImpl","RVEngagedIndicesTrackerImpl#constructor","RVEngagedIndicesTrackerImpl#updateScrollOffset","RVEngagedIndicesTrackerImpl#updateVelocityHistory","RVEngagedIndicesTrackerImpl#isScrollingBackward","RVEngagedIndicesTrackerImpl#getMedianVelocity","sort$argument_0","RVEngagedIndicesTrackerImpl#getProjectedScrollOffset","RVEngagedIndicesTrackerImpl#computeVisibleIndices","RVEngagedIndicesTrackerImpl#getEngagedIndices","RVEngagedIndicesTrackerImpl#setScrollDirection","RVEngagedIndicesTrackerImpl#resetVelocityHistory"],"mappings":"AAA;OCE;ICC;KDmB;IES;KFiE;IGK;KHG;IIM;KJc;IKM;gECE,mCD;KLS;IOM;KPK;IQO;KRU;ISM;KTE;IUC;KVS;IWK;KXO;CDC"},"hasCjsExports":false},"type":"js/module"}]}