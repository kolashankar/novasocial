{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":36,"index":141},"end":{"line":7,"column":52,"index":157}}],"key":"XN65eZP/QkNMzaBAXbG/zPyidpY=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/index","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"55efhPHw3gz2FoQtoN2yI1VuhbM=","exportNames":["*"],"imports":1}},{"name":"./CameraError","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":19,"index":223},"end":{"line":9,"column":43,"index":247}}],"key":"PupDKD1hIw9H8fZTt+JPYNmxfnU=","exportNames":["*"],"imports":1}},{"name":"./NativeCameraModule","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":26,"index":275},"end":{"line":10,"column":57,"index":306}}],"key":"qrOyseGJYv3FKJEGDsGfobqIbWE=","exportNames":["*"],"imports":1}},{"name":"./frame-processors/VisionCameraProxy","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":11,"column":25,"index":333},"end":{"line":11,"column":72,"index":380}}],"key":"gr685en3ehErGlMRg08DVjz5+3Q=","exportNames":["*"],"imports":1}},{"name":"./CameraDevices","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":21,"index":403},"end":{"line":12,"column":47,"index":429}}],"key":"zmtva7P8cJEIwJHn6qj7IKzEC2A=","exportNames":["*"],"imports":1}},{"name":"./skia/SkiaCameraCanvas","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":24,"index":455},"end":{"line":13,"column":58,"index":489}}],"key":"eWbeXjWqdmuNx4gLiLzZ8IsNIH0=","exportNames":["*"],"imports":1}},{"name":"./FpsGraph","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":16,"index":507},"end":{"line":14,"column":37,"index":528}}],"key":"kxVAh42zKeyqG+iLlJUJPLrVU6o=","exportNames":["*"],"imports":1}},{"name":"./NativeCameraView","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":15,"column":24,"index":554},"end":{"line":15,"column":53,"index":583}}],"key":"fte1c4LZ9Nu3bqoyYOuODMNrdRw=","exportNames":["*"],"imports":1}},{"name":"./RotationHelper","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":16,"column":22,"index":607},"end":{"line":16,"column":49,"index":634}}],"key":"bcT/jrhAG3eagEVa1NKQtAoM/ic=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Camera = void 0;\n  var _react = _interopRequireDefault(require(_dependencyMap[0], \"react\"));\n  var _reactNative = require(_dependencyMap[1], \"react-native-web/dist/index\");\n  var _CameraError = require(_dependencyMap[2], \"./CameraError\");\n  var _NativeCameraModule = require(_dependencyMap[3], \"./NativeCameraModule\");\n  var _VisionCameraProxy = require(_dependencyMap[4], \"./frame-processors/VisionCameraProxy\");\n  var _CameraDevices = require(_dependencyMap[5], \"./CameraDevices\");\n  var _SkiaCameraCanvas = require(_dependencyMap[6], \"./skia/SkiaCameraCanvas\");\n  var _FpsGraph = require(_dependencyMap[7], \"./FpsGraph\");\n  var _NativeCameraView = require(_dependencyMap[8], \"./NativeCameraView\");\n  var _RotationHelper = require(_dependencyMap[9], \"./RotationHelper\");\n  function _interopRequireDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _extends() {\n    return _extends = Object.assign ? Object.assign.bind() : function (n) {\n      for (var e = 1; e < arguments.length; e++) {\n        var t = arguments[e];\n        for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n      }\n      return n;\n    }, _extends.apply(null, arguments);\n  }\n  //#region Types\n\n  //#endregion\n\n  function isSkiaFrameProcessor(frameProcessor) {\n    return frameProcessor?.type === 'drawable-skia';\n  }\n\n  //#region Camera Component\n  /**\n   * ### A powerful `<Camera>` component.\n   *\n   * Read the [VisionCamera documentation](https://react-native-vision-camera.com/) for more information.\n   *\n   * The `<Camera>` component's most important properties are:\n   *\n   * * {@linkcode CameraProps.device | device}: Specifies the {@linkcode CameraDevice} to use. Get a {@linkcode CameraDevice} by using\n   * the {@linkcode useCameraDevice | useCameraDevice(..)} hook, or manually by using\n   * the {@linkcode CameraDevices.getAvailableCameraDevices | CameraDevices.getAvailableCameraDevices()} function.\n   * * {@linkcode CameraProps.isActive | isActive}: A boolean value that specifies whether the Camera should\n   * actively stream video frames or not. This can be compared to a Video component, where `isActive` specifies whether the video\n   * is paused or not. If you fully unmount the `<Camera>` component instead of using `isActive={false}`, the Camera will take a bit longer to start again.\n   *\n   * @example\n   * ```tsx\n   * function App() {\n   *   const device = useCameraDevice('back')\n   *\n   *   if (device == null) return <NoCameraErrorView />\n   *   return (\n   *     <Camera\n   *       style={StyleSheet.absoluteFill}\n   *       device={device}\n   *       isActive={true}\n   *     />\n   *   )\n   * }\n   * ```\n   *\n   * @component\n   */\n  class Camera extends _react.default.PureComponent {\n    /** @internal */\n    static displayName = 'Camera';\n    /** @internal */\n    displayName = Camera.displayName;\n    isNativeViewMounted = false;\n    lastUIRotation = undefined;\n    rotationHelper = new _RotationHelper.RotationHelper();\n    /** @internal */\n    constructor(props) {\n      super(props);\n      this.onViewReady = this.onViewReady.bind(this);\n      this.onAverageFpsChanged = this.onAverageFpsChanged.bind(this);\n      this.onInitialized = this.onInitialized.bind(this);\n      this.onStarted = this.onStarted.bind(this);\n      this.onStopped = this.onStopped.bind(this);\n      this.onPreviewStarted = this.onPreviewStarted.bind(this);\n      this.onPreviewStopped = this.onPreviewStopped.bind(this);\n      this.onShutter = this.onShutter.bind(this);\n      this.onOutputOrientationChanged = this.onOutputOrientationChanged.bind(this);\n      this.onPreviewOrientationChanged = this.onPreviewOrientationChanged.bind(this);\n      this.onError = this.onError.bind(this);\n      this.onCodeScanned = this.onCodeScanned.bind(this);\n      this.ref = /*#__PURE__*/_react.default.createRef();\n      this.lastFrameProcessor = undefined;\n      this.state = {\n        isRecordingWithFlash: false,\n        averageFpsSamples: []\n      };\n    }\n    get handle() {\n      const nodeHandle = (0, _reactNative.findNodeHandle)(this.ref.current);\n      if (nodeHandle == null || nodeHandle === -1) {\n        throw new _CameraError.CameraRuntimeError('system/view-not-found', \"Could not get the Camera's native view tag! Does the Camera View exist in the native view-tree?\");\n      }\n      return nodeHandle;\n    }\n\n    //#region View-specific functions (UIViewManager)\n    /**\n     * Take a single photo and write it's content to a temporary file.\n     *\n     * @throws {@linkcode CameraCaptureError} When any kind of error occured while capturing the photo.\n     * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error\n     * @example\n     * ```ts\n     * const photo = await camera.current.takePhoto({\n     *   flash: 'on',\n     *   enableAutoRedEyeReduction: true\n     * })\n     * ```\n     */\n    async takePhoto(options) {\n      try {\n        return await _NativeCameraModule.CameraModule.takePhoto(this.handle, options ?? {});\n      } catch (e) {\n        throw (0, _CameraError.tryParseNativeCameraError)(e);\n      }\n    }\n\n    /**\n     * Captures a snapshot of the Camera view and write it's content to a temporary file.\n     *\n     * - On iOS, `takeSnapshot` waits for a Frame from the video pipeline and therefore requires `video` to be enabled.\n     * - On Android, `takeSnapshot` performs a GPU view screenshot from the preview view.\n     *\n     * @throws {@linkcode CameraCaptureError} When any kind of error occured while capturing the photo.\n     * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error\n     * @example\n     * ```ts\n     * const snapshot = await camera.current.takeSnapshot({\n     *   quality: 100\n     * })\n     * ```\n     */\n    async takeSnapshot(options) {\n      try {\n        return await _NativeCameraModule.CameraModule.takeSnapshot(this.handle, options ?? {});\n      } catch (e) {\n        throw (0, _CameraError.tryParseNativeCameraError)(e);\n      }\n    }\n    getBitRateMultiplier(bitRate) {\n      if (typeof bitRate === 'number' || bitRate == null) return 1;\n      switch (bitRate) {\n        case 'extra-low':\n          return 0.6;\n        case 'low':\n          return 0.8;\n        case 'normal':\n          return 1;\n        case 'high':\n          return 1.2;\n        case 'extra-high':\n          return 1.4;\n      }\n    }\n\n    /**\n     * Start a new video recording.\n     *\n     * @throws {@linkcode CameraCaptureError} When any kind of error occured while starting the video recording.\n     * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error\n     *\n     * @example\n     * ```ts\n     * camera.current.startRecording({\n     *   onRecordingFinished: (video) => console.log(video),\n     *   onRecordingError: (error) => console.error(error),\n     * })\n     * setTimeout(() => {\n     *   camera.current.stopRecording()\n     * }, 5000)\n     * ```\n     */\n    startRecording(options) {\n      const {\n        onRecordingError,\n        onRecordingFinished,\n        ...passThruOptions\n      } = options;\n      if (typeof onRecordingError !== 'function' || typeof onRecordingFinished !== 'function') throw new _CameraError.CameraRuntimeError('parameter/invalid-parameter', 'The onRecordingError or onRecordingFinished functions were not set!');\n      if (options.flash === 'on') {\n        // Enable torch for video recording\n        this.setState({\n          isRecordingWithFlash: true\n        });\n      }\n      const onRecordCallback = (video, error) => {\n        if (this.state.isRecordingWithFlash) {\n          // disable torch again if it was enabled\n          this.setState({\n            isRecordingWithFlash: false\n          });\n        }\n        if (error != null) return onRecordingError(error);\n        if (video != null) return onRecordingFinished(video);\n      };\n      const nativeRecordVideoOptions = passThruOptions;\n      try {\n        // TODO: Use TurboModules to make this awaitable.\n        _NativeCameraModule.CameraModule.startRecording(this.handle, nativeRecordVideoOptions, onRecordCallback);\n      } catch (e) {\n        throw (0, _CameraError.tryParseNativeCameraError)(e);\n      }\n    }\n\n    /**\n     * Pauses the current video recording.\n     *\n     * @throws {@linkcode CameraCaptureError} When any kind of error occured while pausing the video recording.\n     * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error\n     *\n     * @example\n     * ```ts\n     * // Start\n     * await camera.current.startRecording({\n     *   onRecordingFinished: (video) => console.log(video),\n     *   onRecordingError: (error) => console.error(error),\n     * })\n     * await timeout(1000)\n     * // Pause\n     * await camera.current.pauseRecording()\n     * await timeout(500)\n     * // Resume\n     * await camera.current.resumeRecording()\n     * await timeout(2000)\n     * // Stop\n     * await camera.current.stopRecording()\n     * ```\n     */\n    async pauseRecording() {\n      try {\n        return await _NativeCameraModule.CameraModule.pauseRecording(this.handle);\n      } catch (e) {\n        throw (0, _CameraError.tryParseNativeCameraError)(e);\n      }\n    }\n\n    /**\n     * Resumes a currently paused video recording.\n     *\n     * @throws {@linkcode CameraCaptureError} When any kind of error occured while resuming the video recording.\n     * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error\n     *\n     * @example\n     * ```ts\n     * // Start\n     * await camera.current.startRecording({\n     *   onRecordingFinished: (video) => console.log(video),\n     *   onRecordingError: (error) => console.error(error),\n     * })\n     * await timeout(1000)\n     * // Pause\n     * await camera.current.pauseRecording()\n     * await timeout(500)\n     * // Resume\n     * await camera.current.resumeRecording()\n     * await timeout(2000)\n     * // Stop\n     * await camera.current.stopRecording()\n     * ```\n     */\n    async resumeRecording() {\n      try {\n        return await _NativeCameraModule.CameraModule.resumeRecording(this.handle);\n      } catch (e) {\n        throw (0, _CameraError.tryParseNativeCameraError)(e);\n      }\n    }\n\n    /**\n     * Stop the current video recording.\n     *\n     * @throws {@linkcode CameraCaptureError} When any kind of error occured while stopping the video recording.\n     * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error\n     *\n     * @example\n     * ```ts\n     * await camera.current.startRecording({\n     *   onRecordingFinished: (video) => console.log(video),\n     *   onRecordingError: (error) => console.error(error),\n     * })\n     * setTimeout(async () => {\n     *   await camera.current.stopRecording()\n     * }, 5000)\n     * ```\n     */\n    async stopRecording() {\n      try {\n        return await _NativeCameraModule.CameraModule.stopRecording(this.handle);\n      } catch (e) {\n        throw (0, _CameraError.tryParseNativeCameraError)(e);\n      }\n    }\n\n    /**\n     * Cancel the current video recording. The temporary video file will be deleted,\n     * and the `startRecording`'s `onRecordingError` callback will be invoked with a `capture/recording-canceled` error.\n     *\n     * @throws {@linkcode CameraCaptureError} When any kind of error occured while canceling the video recording.\n     * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error\n     *\n     * @example\n     * ```ts\n     * await camera.current.startRecording({\n     *   onRecordingFinished: (video) => console.log(video),\n     *   onRecordingError: (error) => {\n     *     if (error.code === 'capture/recording-canceled') {\n     *       // recording was canceled.\n     *     } else {\n     *       console.error(error)\n     *     }\n     *   },\n     * })\n     * setTimeout(async () => {\n     *   await camera.current.cancelRecording()\n     * }, 5000)\n     * ```\n     */\n    async cancelRecording() {\n      try {\n        return await _NativeCameraModule.CameraModule.cancelRecording(this.handle);\n      } catch (e) {\n        throw (0, _CameraError.tryParseNativeCameraError)(e);\n      }\n    }\n\n    /**\n     * Focus the camera to a specific point in the coordinate system.\n     * @param {Point} point The point to focus to. This should be relative\n     * to the Camera view's coordinate system and is expressed in points.\n     *  * `(0, 0)` means **top left**.\n     *  * `(CameraView.width, CameraView.height)` means **bottom right**.\n     *\n     * Make sure the value doesn't exceed the CameraView's dimensions.\n     *\n     * @throws {@linkcode CameraRuntimeError} When any kind of error occured while focussing.\n     * Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error\n     * @example\n     * ```ts\n     * await camera.current.focus({\n     *   x: tapEvent.x,\n     *   y: tapEvent.y\n     * })\n     * ```\n     */\n    async focus(point) {\n      try {\n        return await _NativeCameraModule.CameraModule.focus(this.handle, point);\n      } catch (e) {\n        throw (0, _CameraError.tryParseNativeCameraError)(e);\n      }\n    }\n    //#endregion\n\n    //#region Static Functions (NativeModule)\n    /**\n     * Get a list of all available camera devices on the current phone.\n     *\n     * If you use Hooks, use the `useCameraDevices(..)` hook instead.\n     *\n     * * For Camera Devices attached to the phone, it is safe to assume that this will never change.\n     * * For external Camera Devices (USB cameras, Mac continuity cameras, etc.) the available Camera Devices\n     * could change over time when the external Camera device gets plugged in or plugged out, so\n     * use {@link addCameraDevicesChangedListener | addCameraDevicesChangedListener(...)} to listen for such changes.\n     *\n     * @example\n     * ```ts\n     * const devices = Camera.getAvailableCameraDevices()\n     * const backCameras = devices.filter((d) => d.position === \"back\")\n     * const frontCameras = devices.filter((d) => d.position === \"front\")\n     * ```\n     */\n    static getAvailableCameraDevices() {\n      return _CameraDevices.CameraDevices.getAvailableCameraDevices();\n    }\n    /**\n     * Adds a listener that gets called everytime the Camera Devices change, for example\n     * when an external Camera Device (USB or continuity Camera) gets plugged in or plugged out.\n     *\n     * If you use Hooks, use the `useCameraDevices()` hook instead.\n     */\n    static addCameraDevicesChangedListener(listener) {\n      return _CameraDevices.CameraDevices.addCameraDevicesChangedListener(listener);\n    }\n    /**\n     * Gets the current Camera Permission Status. Check this before mounting the Camera to ensure\n     * the user has permitted the app to use the camera.\n     *\n     * To actually prompt the user for camera permission, use {@linkcode Camera.requestCameraPermission | requestCameraPermission()}.\n     */\n    static getCameraPermissionStatus() {\n      return _NativeCameraModule.CameraModule.getCameraPermissionStatus();\n    }\n    /**\n     * Gets the current Microphone-Recording Permission Status.\n     * Check this before enabling the `audio={...}` property to make sure the\n     * user has permitted the app to use the microphone.\n     *\n     * To actually prompt the user for microphone permission, use {@linkcode Camera.requestMicrophonePermission | requestMicrophonePermission()}.\n     */\n    static getMicrophonePermissionStatus() {\n      return _NativeCameraModule.CameraModule.getMicrophonePermissionStatus();\n    }\n    /**\n     * Gets the current Location Permission Status.\n     * Check this before enabling the `location={...}` property to make sure the\n     * the user has permitted the app to use the location.\n     *\n     * To actually prompt the user for location permission, use {@linkcode Camera.requestLocationPermission | requestLocationPermission()}.\n     *\n     * Note: This method will throw a `system/location-not-enabled` error if the Location APIs are not enabled at build-time.\n     * See [the \"GPS Location Tags\" documentation](https://react-native-vision-camera.com/docs/guides/location) for more information.\n     */\n    static getLocationPermissionStatus() {\n      return _NativeCameraModule.CameraModule.getLocationPermissionStatus();\n    }\n    /**\n     * Shows a \"request permission\" alert to the user, and resolves with the new camera permission status.\n     *\n     * If the user has previously blocked the app from using the camera, the alert will not be shown\n     * and `\"denied\"` will be returned.\n     *\n     * @throws {@linkcode CameraRuntimeError} When any kind of error occured while requesting permission.\n     * Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error\n     */\n    static async requestCameraPermission() {\n      try {\n        return await _NativeCameraModule.CameraModule.requestCameraPermission();\n      } catch (e) {\n        throw (0, _CameraError.tryParseNativeCameraError)(e);\n      }\n    }\n    /**\n     * Shows a \"request permission\" alert to the user, and resolves with the new microphone permission status.\n     *\n     * If the user has previously blocked the app from using the microphone, the alert will not be shown\n     * and `\"denied\"` will be returned.\n     *\n     * @throws {@linkcode CameraRuntimeError} When any kind of error occured while requesting permission.\n     * Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error\n     */\n    static async requestMicrophonePermission() {\n      try {\n        return await _NativeCameraModule.CameraModule.requestMicrophonePermission();\n      } catch (e) {\n        throw (0, _CameraError.tryParseNativeCameraError)(e);\n      }\n    }\n    /**\n     * Shows a \"request permission\" alert to the user, and resolves with the new location permission status.\n     *\n     * If the user has previously blocked the app from using the location, the alert will not be shown\n     * and `\"denied\"` will be returned.\n     *\n     * @throws {@linkcode CameraRuntimeError} When any kind of error occured while requesting permission.\n     * Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error\n     */\n    static async requestLocationPermission() {\n      try {\n        return await _NativeCameraModule.CameraModule.requestLocationPermission();\n      } catch (e) {\n        throw (0, _CameraError.tryParseNativeCameraError)(e);\n      }\n    }\n    //#endregion\n\n    //#region Events (Wrapped to maintain reference equality)\n    onError(event) {\n      const error = event.nativeEvent;\n      const cause = (0, _CameraError.isErrorWithCause)(error.cause) ? error.cause : undefined;\n      // @ts-expect-error We're casting from unknown bridge types to TS unions, I expect it to hopefully work\n      const cameraError = new _CameraError.CameraRuntimeError(error.code, error.message, cause);\n      if (this.props.onError != null) {\n        this.props.onError(cameraError);\n      } else {\n        // User didn't pass an `onError` handler, so just log it to console\n        console.error(cameraError);\n      }\n    }\n    onInitialized() {\n      this.props.onInitialized?.();\n    }\n    onStarted() {\n      this.props.onStarted?.();\n    }\n    onStopped() {\n      this.props.onStopped?.();\n    }\n    onPreviewStarted() {\n      this.props.onPreviewStarted?.();\n    }\n    onPreviewStopped() {\n      this.props.onPreviewStopped?.();\n    }\n    onShutter(event) {\n      this.props.onShutter?.(event.nativeEvent);\n    }\n    onOutputOrientationChanged({\n      nativeEvent: {\n        outputOrientation\n      }\n    }) {\n      this.rotationHelper.outputOrientation = outputOrientation;\n      this.props.onOutputOrientationChanged?.(outputOrientation);\n      this.maybeUpdateUIRotation();\n    }\n    onPreviewOrientationChanged({\n      nativeEvent: {\n        previewOrientation\n      }\n    }) {\n      this.rotationHelper.previewOrientation = previewOrientation;\n      this.props.onPreviewOrientationChanged?.(previewOrientation);\n      this.maybeUpdateUIRotation();\n      if (isSkiaFrameProcessor(this.props.frameProcessor)) {\n        // If we have a Skia Frame Processor, we need to update it's orientation so it knows how to render.\n        this.props.frameProcessor.previewOrientation.value = previewOrientation;\n      }\n    }\n    maybeUpdateUIRotation() {\n      const uiRotation = this.rotationHelper.uiRotation;\n      if (uiRotation !== this.lastUIRotation) {\n        this.props.onUIRotationChanged?.(uiRotation);\n        this.lastUIRotation = uiRotation;\n      }\n    }\n    //#endregion\n\n    onCodeScanned(event) {\n      const codeScanner = this.props.codeScanner;\n      if (codeScanner == null) return;\n      codeScanner.onCodeScanned(event.nativeEvent.codes, event.nativeEvent.frame);\n    }\n\n    //#region Lifecycle\n    setFrameProcessor(frameProcessor) {\n      _VisionCameraProxy.VisionCameraProxy.setFrameProcessor(this.handle, frameProcessor);\n    }\n    unsetFrameProcessor() {\n      _VisionCameraProxy.VisionCameraProxy.removeFrameProcessor(this.handle);\n    }\n    onViewReady() {\n      this.isNativeViewMounted = true;\n      if (this.props.frameProcessor != null) {\n        // user passed a `frameProcessor` but we didn't set it yet because the native view was not mounted yet. set it now.\n        this.setFrameProcessor(this.props.frameProcessor.frameProcessor);\n        this.lastFrameProcessor = this.props.frameProcessor.frameProcessor;\n      }\n    }\n    onAverageFpsChanged({\n      nativeEvent: {\n        averageFps\n      }\n    }) {\n      this.setState(state => {\n        const averageFpsSamples = [...state.averageFpsSamples, averageFps];\n        while (averageFpsSamples.length >= _FpsGraph.MAX_BARS + 1) {\n          // we keep a maximum of 30 FPS samples in our history\n          averageFpsSamples.shift();\n        }\n        return {\n          ...state,\n          averageFpsSamples: averageFpsSamples\n        };\n      });\n    }\n\n    /** @internal */\n    componentDidUpdate() {\n      if (!this.isNativeViewMounted) return;\n      const frameProcessor = this.props.frameProcessor;\n      if (frameProcessor?.frameProcessor !== this.lastFrameProcessor) {\n        // frameProcessor argument identity changed. Update native to reflect the change.\n        if (frameProcessor != null) this.setFrameProcessor(frameProcessor.frameProcessor);else this.unsetFrameProcessor();\n        this.lastFrameProcessor = frameProcessor?.frameProcessor;\n      }\n    }\n    //#endregion\n\n    /** @internal */\n    render() {\n      // We remove the big `device` object from the props because we only need to pass `cameraId` to native.\n      const {\n        device,\n        frameProcessor,\n        codeScanner,\n        enableFpsGraph,\n        fps,\n        videoBitRate,\n        ...props\n      } = this.props;\n\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (device == null) {\n        throw new _CameraError.CameraRuntimeError('device/no-device', 'Camera: `device` is null! Select a valid Camera device. See: https://mrousavy.com/react-native-vision-camera/docs/guides/devices');\n      }\n      const shouldEnableBufferCompression = props.video === true && frameProcessor == null;\n      const torch = this.state.isRecordingWithFlash ? 'on' : props.torch;\n      const isRenderingWithSkia = isSkiaFrameProcessor(frameProcessor);\n      const shouldBeMirrored = device.position === 'front';\n\n      // minFps/maxFps is either the fixed `fps` value, or a value from the [min, max] tuple\n      const minFps = fps == null ? undefined : typeof fps === 'number' ? fps : fps[0];\n      const maxFps = fps == null ? undefined : typeof fps === 'number' ? fps : fps[1];\n\n      // bitrate is number (override) or string (multiplier)\n      let bitRateMultiplier;\n      let bitRateOverride;\n      if (typeof videoBitRate === 'number') {\n        // If the user passed an absolute number as a bit-rate, we just use this as a full override.\n        bitRateOverride = videoBitRate;\n      } else if (typeof videoBitRate === 'string' && videoBitRate !== 'normal') {\n        // If the user passed 'low'/'normal'/'high', we need to apply this as a multiplier to the native bitrate instead of absolutely setting it\n        bitRateMultiplier = this.getBitRateMultiplier(videoBitRate);\n      }\n      return /*#__PURE__*/_react.default.createElement(_NativeCameraView.NativeCameraView, _extends({}, props, {\n        cameraId: device.id,\n        ref: this.ref,\n        torch: torch,\n        minFps: minFps,\n        maxFps: maxFps,\n        isMirrored: props.isMirrored ?? shouldBeMirrored,\n        onViewReady: this.onViewReady,\n        onAverageFpsChanged: enableFpsGraph ? this.onAverageFpsChanged : undefined,\n        onInitialized: this.onInitialized,\n        onCodeScanned: this.onCodeScanned,\n        onStarted: this.onStarted,\n        onStopped: this.onStopped,\n        onPreviewStarted: this.onPreviewStarted,\n        onPreviewStopped: this.onPreviewStopped,\n        onShutter: this.onShutter,\n        videoBitRateMultiplier: bitRateMultiplier,\n        videoBitRateOverride: bitRateOverride,\n        onOutputOrientationChanged: this.onOutputOrientationChanged,\n        onPreviewOrientationChanged: this.onPreviewOrientationChanged,\n        onError: this.onError,\n        codeScannerOptions: codeScanner,\n        enableFrameProcessor: frameProcessor != null,\n        enableBufferCompression: props.enableBufferCompression ?? shouldEnableBufferCompression,\n        preview: isRenderingWithSkia ? false : props.preview ?? true\n      }), isRenderingWithSkia && /*#__PURE__*/_react.default.createElement(_SkiaCameraCanvas.SkiaCameraCanvas, {\n        style: styles.customPreviewView,\n        offscreenTextures: frameProcessor.offscreenTextures,\n        resizeMode: props.resizeMode\n      }), enableFpsGraph && /*#__PURE__*/_react.default.createElement(_FpsGraph.FpsGraph, {\n        style: styles.fpsGraph,\n        averageFpsSamples: this.state.averageFpsSamples,\n        targetMaxFps: props.format?.maxFps ?? 60\n      }));\n    }\n  }\n  //#endregion\n  exports.Camera = Camera;\n  const styles = _reactNative.StyleSheet.create({\n    customPreviewView: {\n      flex: 1\n    },\n    fpsGraph: {\n      elevation: 1,\n      position: 'absolute',\n      left: 15,\n      top: 30\n    }\n  });\n});","lineCount":679,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"Camera"],[7,16,6,14],[7,19,6,17],[7,24,6,22],[7,25,6,23],[8,2,7,0],[8,6,7,4,"_react"],[8,12,7,10],[8,15,7,13,"_interopRequireDefault"],[8,37,7,35],[8,38,7,36,"require"],[8,45,7,43],[8,46,7,43,"_dependencyMap"],[8,60,7,43],[8,72,7,51],[8,73,7,52],[8,74,7,53],[9,2,7,54],[9,6,7,54,"_reactNative"],[9,18,7,54],[9,21,7,54,"require"],[9,28,7,54],[9,29,7,54,"_dependencyMap"],[9,43,7,54],[10,2,9,0],[10,6,9,4,"_CameraError"],[10,18,9,16],[10,21,9,19,"require"],[10,28,9,26],[10,29,9,26,"_dependencyMap"],[10,43,9,26],[10,63,9,42],[10,64,9,43],[11,2,10,0],[11,6,10,4,"_NativeCameraModule"],[11,25,10,23],[11,28,10,26,"require"],[11,35,10,33],[11,36,10,33,"_dependencyMap"],[11,50,10,33],[11,77,10,56],[11,78,10,57],[12,2,11,0],[12,6,11,4,"_VisionCameraProxy"],[12,24,11,22],[12,27,11,25,"require"],[12,34,11,32],[12,35,11,32,"_dependencyMap"],[12,49,11,32],[12,92,11,71],[12,93,11,72],[13,2,12,0],[13,6,12,4,"_CameraDevices"],[13,20,12,18],[13,23,12,21,"require"],[13,30,12,28],[13,31,12,28,"_dependencyMap"],[13,45,12,28],[13,67,12,46],[13,68,12,47],[14,2,13,0],[14,6,13,4,"_SkiaCameraCanvas"],[14,23,13,21],[14,26,13,24,"require"],[14,33,13,31],[14,34,13,31,"_dependencyMap"],[14,48,13,31],[14,78,13,57],[14,79,13,58],[15,2,14,0],[15,6,14,4,"_FpsGraph"],[15,15,14,13],[15,18,14,16,"require"],[15,25,14,23],[15,26,14,23,"_dependencyMap"],[15,40,14,23],[15,57,14,36],[15,58,14,37],[16,2,15,0],[16,6,15,4,"_NativeCameraView"],[16,23,15,21],[16,26,15,24,"require"],[16,33,15,31],[16,34,15,31,"_dependencyMap"],[16,48,15,31],[16,73,15,52],[16,74,15,53],[17,2,16,0],[17,6,16,4,"_RotationHelper"],[17,21,16,19],[17,24,16,22,"require"],[17,31,16,29],[17,32,16,29,"_dependencyMap"],[17,46,16,29],[17,69,16,48],[17,70,16,49],[18,2,17,0],[18,11,17,9,"_interopRequireDefault"],[18,33,17,31,"_interopRequireDefault"],[18,34,17,32,"e"],[18,35,17,33],[18,37,17,35],[19,4,17,37],[19,11,17,44,"e"],[19,12,17,45],[19,16,17,49,"e"],[19,17,17,50],[19,18,17,51,"__esModule"],[19,28,17,61],[19,31,17,64,"e"],[19,32,17,65],[19,35,17,68],[20,6,17,70,"default"],[20,13,17,77],[20,15,17,79,"e"],[21,4,17,81],[21,5,17,82],[22,2,17,84],[23,2,18,0],[23,11,18,9,"_extends"],[23,19,18,17,"_extends"],[23,20,18,17],[23,22,18,20],[24,4,18,22],[24,11,18,29,"_extends"],[24,19,18,37],[24,22,18,40,"Object"],[24,28,18,46],[24,29,18,47,"assign"],[24,35,18,53],[24,38,18,56,"Object"],[24,44,18,62],[24,45,18,63,"assign"],[24,51,18,69],[24,52,18,70,"bind"],[24,56,18,74],[24,57,18,75],[24,58,18,76],[24,61,18,79],[24,71,18,89,"n"],[24,72,18,90],[24,74,18,92],[25,6,18,94],[25,11,18,99],[25,15,18,103,"e"],[25,16,18,104],[25,19,18,107],[25,20,18,108],[25,22,18,110,"e"],[25,23,18,111],[25,26,18,114,"arguments"],[25,35,18,123],[25,36,18,124,"length"],[25,42,18,130],[25,44,18,132,"e"],[25,45,18,133],[25,47,18,135],[25,49,18,137],[26,8,18,139],[26,12,18,143,"t"],[26,13,18,144],[26,16,18,147,"arguments"],[26,25,18,156],[26,26,18,157,"e"],[26,27,18,158],[26,28,18,159],[27,8,18,161],[27,13,18,166],[27,17,18,170,"r"],[27,18,18,171],[27,22,18,175,"t"],[27,23,18,176],[27,25,18,178],[27,26,18,179],[27,27,18,180],[27,28,18,181],[27,30,18,183,"hasOwnProperty"],[27,44,18,197],[27,45,18,198,"call"],[27,49,18,202],[27,50,18,203,"t"],[27,51,18,204],[27,53,18,206,"r"],[27,54,18,207],[27,55,18,208],[27,60,18,213,"n"],[27,61,18,214],[27,62,18,215,"r"],[27,63,18,216],[27,64,18,217],[27,67,18,220,"t"],[27,68,18,221],[27,69,18,222,"r"],[27,70,18,223],[27,71,18,224],[27,72,18,225],[28,6,18,227],[29,6,18,229],[29,13,18,236,"n"],[29,14,18,237],[30,4,18,239],[30,5,18,240],[30,7,18,242,"_extends"],[30,15,18,250],[30,16,18,251,"apply"],[30,21,18,256],[30,22,18,257],[30,26,18,261],[30,28,18,263,"arguments"],[30,37,18,272],[30,38,18,273],[31,2,18,275],[32,2,19,0],[34,2,21,0],[36,2,23,0],[36,11,23,9,"isSkiaFrameProcessor"],[36,31,23,29,"isSkiaFrameProcessor"],[36,32,23,30,"frameProcessor"],[36,46,23,44],[36,48,23,46],[37,4,24,2],[37,11,24,9,"frameProcessor"],[37,25,24,23],[37,27,24,25,"type"],[37,31,24,29],[37,36,24,34],[37,51,24,49],[38,2,25,0],[40,2,27,0],[41,2,28,0],[42,0,29,0],[43,0,30,0],[44,0,31,0],[45,0,32,0],[46,0,33,0],[47,0,34,0],[48,0,35,0],[49,0,36,0],[50,0,37,0],[51,0,38,0],[52,0,39,0],[53,0,40,0],[54,0,41,0],[55,0,42,0],[56,0,43,0],[57,0,44,0],[58,0,45,0],[59,0,46,0],[60,0,47,0],[61,0,48,0],[62,0,49,0],[63,0,50,0],[64,0,51,0],[65,0,52,0],[66,0,53,0],[67,0,54,0],[68,0,55,0],[69,0,56,0],[70,0,57,0],[71,0,58,0],[72,0,59,0],[73,2,60,0],[73,8,60,6,"Camera"],[73,14,60,12],[73,23,60,21,"_react"],[73,29,60,27],[73,30,60,28,"default"],[73,37,60,35],[73,38,60,36,"PureComponent"],[73,51,60,49],[73,52,60,50],[74,4,61,2],[75,4,62,2],[75,11,62,9,"displayName"],[75,22,62,20],[75,25,62,23],[75,33,62,31],[76,4,63,2],[77,4,64,2,"displayName"],[77,15,64,13],[77,18,64,16,"Camera"],[77,24,64,22],[77,25,64,23,"displayName"],[77,36,64,34],[78,4,65,2,"isNativeViewMounted"],[78,23,65,21],[78,26,65,24],[78,31,65,29],[79,4,66,2,"lastUIRotation"],[79,18,66,16],[79,21,66,19,"undefined"],[79,30,66,28],[80,4,67,2,"rotationHelper"],[80,18,67,16],[80,21,67,19],[80,25,67,23,"_RotationHelper"],[80,40,67,38],[80,41,67,39,"RotationHelper"],[80,55,67,53],[80,56,67,54],[80,57,67,55],[81,4,68,2],[82,4,69,2,"constructor"],[82,15,69,13,"constructor"],[82,16,69,14,"props"],[82,21,69,19],[82,23,69,21],[83,6,70,4],[83,11,70,9],[83,12,70,10,"props"],[83,17,70,15],[83,18,70,16],[84,6,71,4],[84,10,71,8],[84,11,71,9,"onViewReady"],[84,22,71,20],[84,25,71,23],[84,29,71,27],[84,30,71,28,"onViewReady"],[84,41,71,39],[84,42,71,40,"bind"],[84,46,71,44],[84,47,71,45],[84,51,71,49],[84,52,71,50],[85,6,72,4],[85,10,72,8],[85,11,72,9,"onAverageFpsChanged"],[85,30,72,28],[85,33,72,31],[85,37,72,35],[85,38,72,36,"onAverageFpsChanged"],[85,57,72,55],[85,58,72,56,"bind"],[85,62,72,60],[85,63,72,61],[85,67,72,65],[85,68,72,66],[86,6,73,4],[86,10,73,8],[86,11,73,9,"onInitialized"],[86,24,73,22],[86,27,73,25],[86,31,73,29],[86,32,73,30,"onInitialized"],[86,45,73,43],[86,46,73,44,"bind"],[86,50,73,48],[86,51,73,49],[86,55,73,53],[86,56,73,54],[87,6,74,4],[87,10,74,8],[87,11,74,9,"onStarted"],[87,20,74,18],[87,23,74,21],[87,27,74,25],[87,28,74,26,"onStarted"],[87,37,74,35],[87,38,74,36,"bind"],[87,42,74,40],[87,43,74,41],[87,47,74,45],[87,48,74,46],[88,6,75,4],[88,10,75,8],[88,11,75,9,"onStopped"],[88,20,75,18],[88,23,75,21],[88,27,75,25],[88,28,75,26,"onStopped"],[88,37,75,35],[88,38,75,36,"bind"],[88,42,75,40],[88,43,75,41],[88,47,75,45],[88,48,75,46],[89,6,76,4],[89,10,76,8],[89,11,76,9,"onPreviewStarted"],[89,27,76,25],[89,30,76,28],[89,34,76,32],[89,35,76,33,"onPreviewStarted"],[89,51,76,49],[89,52,76,50,"bind"],[89,56,76,54],[89,57,76,55],[89,61,76,59],[89,62,76,60],[90,6,77,4],[90,10,77,8],[90,11,77,9,"onPreviewStopped"],[90,27,77,25],[90,30,77,28],[90,34,77,32],[90,35,77,33,"onPreviewStopped"],[90,51,77,49],[90,52,77,50,"bind"],[90,56,77,54],[90,57,77,55],[90,61,77,59],[90,62,77,60],[91,6,78,4],[91,10,78,8],[91,11,78,9,"onShutter"],[91,20,78,18],[91,23,78,21],[91,27,78,25],[91,28,78,26,"onShutter"],[91,37,78,35],[91,38,78,36,"bind"],[91,42,78,40],[91,43,78,41],[91,47,78,45],[91,48,78,46],[92,6,79,4],[92,10,79,8],[92,11,79,9,"onOutputOrientationChanged"],[92,37,79,35],[92,40,79,38],[92,44,79,42],[92,45,79,43,"onOutputOrientationChanged"],[92,71,79,69],[92,72,79,70,"bind"],[92,76,79,74],[92,77,79,75],[92,81,79,79],[92,82,79,80],[93,6,80,4],[93,10,80,8],[93,11,80,9,"onPreviewOrientationChanged"],[93,38,80,36],[93,41,80,39],[93,45,80,43],[93,46,80,44,"onPreviewOrientationChanged"],[93,73,80,71],[93,74,80,72,"bind"],[93,78,80,76],[93,79,80,77],[93,83,80,81],[93,84,80,82],[94,6,81,4],[94,10,81,8],[94,11,81,9,"onError"],[94,18,81,16],[94,21,81,19],[94,25,81,23],[94,26,81,24,"onError"],[94,33,81,31],[94,34,81,32,"bind"],[94,38,81,36],[94,39,81,37],[94,43,81,41],[94,44,81,42],[95,6,82,4],[95,10,82,8],[95,11,82,9,"onCodeScanned"],[95,24,82,22],[95,27,82,25],[95,31,82,29],[95,32,82,30,"onCodeScanned"],[95,45,82,43],[95,46,82,44,"bind"],[95,50,82,48],[95,51,82,49],[95,55,82,53],[95,56,82,54],[96,6,83,4],[96,10,83,8],[96,11,83,9,"ref"],[96,14,83,12],[96,17,83,15],[96,30,83,28,"_react"],[96,36,83,34],[96,37,83,35,"default"],[96,44,83,42],[96,45,83,43,"createRef"],[96,54,83,52],[96,55,83,53],[96,56,83,54],[97,6,84,4],[97,10,84,8],[97,11,84,9,"lastFrameProcessor"],[97,29,84,27],[97,32,84,30,"undefined"],[97,41,84,39],[98,6,85,4],[98,10,85,8],[98,11,85,9,"state"],[98,16,85,14],[98,19,85,17],[99,8,86,6,"isRecordingWithFlash"],[99,28,86,26],[99,30,86,28],[99,35,86,33],[100,8,87,6,"averageFpsSamples"],[100,25,87,23],[100,27,87,25],[101,6,88,4],[101,7,88,5],[102,4,89,2],[103,4,90,2],[103,8,90,6,"handle"],[103,14,90,12,"handle"],[103,15,90,12],[103,17,90,15],[104,6,91,4],[104,12,91,10,"nodeHandle"],[104,22,91,20],[104,25,91,23],[104,26,91,24],[104,27,91,25],[104,29,91,27,"_reactNative"],[104,41,91,39],[104,42,91,40,"findNodeHandle"],[104,56,91,54],[104,58,91,56],[104,62,91,60],[104,63,91,61,"ref"],[104,66,91,64],[104,67,91,65,"current"],[104,74,91,72],[104,75,91,73],[105,6,92,4],[105,10,92,8,"nodeHandle"],[105,20,92,18],[105,24,92,22],[105,28,92,26],[105,32,92,30,"nodeHandle"],[105,42,92,40],[105,47,92,45],[105,48,92,46],[105,49,92,47],[105,51,92,49],[106,8,93,6],[106,14,93,12],[106,18,93,16,"_CameraError"],[106,30,93,28],[106,31,93,29,"CameraRuntimeError"],[106,49,93,47],[106,50,93,48],[106,73,93,71],[106,75,93,73],[106,172,93,170],[106,173,93,171],[107,6,94,4],[108,6,95,4],[108,13,95,11,"nodeHandle"],[108,23,95,21],[109,4,96,2],[111,4,98,2],[112,4,99,2],[113,0,100,0],[114,0,101,0],[115,0,102,0],[116,0,103,0],[117,0,104,0],[118,0,105,0],[119,0,106,0],[120,0,107,0],[121,0,108,0],[122,0,109,0],[123,0,110,0],[124,0,111,0],[125,4,112,2],[125,10,112,8,"takePhoto"],[125,19,112,17,"takePhoto"],[125,20,112,18,"options"],[125,27,112,25],[125,29,112,27],[126,6,113,4],[126,10,113,8],[127,8,114,6],[127,15,114,13],[127,21,114,19,"_NativeCameraModule"],[127,40,114,38],[127,41,114,39,"CameraModule"],[127,53,114,51],[127,54,114,52,"takePhoto"],[127,63,114,61],[127,64,114,62],[127,68,114,66],[127,69,114,67,"handle"],[127,75,114,73],[127,77,114,75,"options"],[127,84,114,82],[127,88,114,86],[127,89,114,87],[127,90,114,88],[127,91,114,89],[128,6,115,4],[128,7,115,5],[128,8,115,6],[128,15,115,13,"e"],[128,16,115,14],[128,18,115,16],[129,8,116,6],[129,14,116,12],[129,15,116,13],[129,16,116,14],[129,18,116,16,"_CameraError"],[129,30,116,28],[129,31,116,29,"tryParseNativeCameraError"],[129,56,116,54],[129,58,116,56,"e"],[129,59,116,57],[129,60,116,58],[130,6,117,4],[131,4,118,2],[133,4,120,2],[134,0,121,0],[135,0,122,0],[136,0,123,0],[137,0,124,0],[138,0,125,0],[139,0,126,0],[140,0,127,0],[141,0,128,0],[142,0,129,0],[143,0,130,0],[144,0,131,0],[145,0,132,0],[146,0,133,0],[147,0,134,0],[148,4,135,2],[148,10,135,8,"takeSnapshot"],[148,22,135,20,"takeSnapshot"],[148,23,135,21,"options"],[148,30,135,28],[148,32,135,30],[149,6,136,4],[149,10,136,8],[150,8,137,6],[150,15,137,13],[150,21,137,19,"_NativeCameraModule"],[150,40,137,38],[150,41,137,39,"CameraModule"],[150,53,137,51],[150,54,137,52,"takeSnapshot"],[150,66,137,64],[150,67,137,65],[150,71,137,69],[150,72,137,70,"handle"],[150,78,137,76],[150,80,137,78,"options"],[150,87,137,85],[150,91,137,89],[150,92,137,90],[150,93,137,91],[150,94,137,92],[151,6,138,4],[151,7,138,5],[151,8,138,6],[151,15,138,13,"e"],[151,16,138,14],[151,18,138,16],[152,8,139,6],[152,14,139,12],[152,15,139,13],[152,16,139,14],[152,18,139,16,"_CameraError"],[152,30,139,28],[152,31,139,29,"tryParseNativeCameraError"],[152,56,139,54],[152,58,139,56,"e"],[152,59,139,57],[152,60,139,58],[153,6,140,4],[154,4,141,2],[155,4,142,2,"getBitRateMultiplier"],[155,24,142,22,"getBitRateMultiplier"],[155,25,142,23,"bitRate"],[155,32,142,30],[155,34,142,32],[156,6,143,4],[156,10,143,8],[156,17,143,15,"bitRate"],[156,24,143,22],[156,29,143,27],[156,37,143,35],[156,41,143,39,"bitRate"],[156,48,143,46],[156,52,143,50],[156,56,143,54],[156,58,143,56],[156,65,143,63],[156,66,143,64],[157,6,144,4],[157,14,144,12,"bitRate"],[157,21,144,19],[158,8,145,6],[158,13,145,11],[158,24,145,22],[159,10,146,8],[159,17,146,15],[159,20,146,18],[160,8,147,6],[160,13,147,11],[160,18,147,16],[161,10,148,8],[161,17,148,15],[161,20,148,18],[162,8,149,6],[162,13,149,11],[162,21,149,19],[163,10,150,8],[163,17,150,15],[163,18,150,16],[164,8,151,6],[164,13,151,11],[164,19,151,17],[165,10,152,8],[165,17,152,15],[165,20,152,18],[166,8,153,6],[166,13,153,11],[166,25,153,23],[167,10,154,8],[167,17,154,15],[167,20,154,18],[168,6,155,4],[169,4,156,2],[171,4,158,2],[172,0,159,0],[173,0,160,0],[174,0,161,0],[175,0,162,0],[176,0,163,0],[177,0,164,0],[178,0,165,0],[179,0,166,0],[180,0,167,0],[181,0,168,0],[182,0,169,0],[183,0,170,0],[184,0,171,0],[185,0,172,0],[186,0,173,0],[187,0,174,0],[188,4,175,2,"startRecording"],[188,18,175,16,"startRecording"],[188,19,175,17,"options"],[188,26,175,24],[188,28,175,26],[189,6,176,4],[189,12,176,10],[190,8,177,6,"onRecordingError"],[190,24,177,22],[191,8,178,6,"onRecordingFinished"],[191,27,178,25],[192,8,179,6],[192,11,179,9,"passThruOptions"],[193,6,180,4],[193,7,180,5],[193,10,180,8,"options"],[193,17,180,15],[194,6,181,4],[194,10,181,8],[194,17,181,15,"onRecordingError"],[194,33,181,31],[194,38,181,36],[194,48,181,46],[194,52,181,50],[194,59,181,57,"onRecordingFinished"],[194,78,181,76],[194,83,181,81],[194,93,181,91],[194,95,181,93],[194,101,181,99],[194,105,181,103,"_CameraError"],[194,117,181,115],[194,118,181,116,"CameraRuntimeError"],[194,136,181,134],[194,137,181,135],[194,166,181,164],[194,168,181,166],[194,237,181,235],[194,238,181,236],[195,6,182,4],[195,10,182,8,"options"],[195,17,182,15],[195,18,182,16,"flash"],[195,23,182,21],[195,28,182,26],[195,32,182,30],[195,34,182,32],[196,8,183,6],[197,8,184,6],[197,12,184,10],[197,13,184,11,"setState"],[197,21,184,19],[197,22,184,20],[198,10,185,8,"isRecordingWithFlash"],[198,30,185,28],[198,32,185,30],[199,8,186,6],[199,9,186,7],[199,10,186,8],[200,6,187,4],[201,6,188,4],[201,12,188,10,"onRecordCallback"],[201,28,188,26],[201,31,188,29,"onRecordCallback"],[201,32,188,30,"video"],[201,37,188,35],[201,39,188,37,"error"],[201,44,188,42],[201,49,188,47],[202,8,189,6],[202,12,189,10],[202,16,189,14],[202,17,189,15,"state"],[202,22,189,20],[202,23,189,21,"isRecordingWithFlash"],[202,43,189,41],[202,45,189,43],[203,10,190,8],[204,10,191,8],[204,14,191,12],[204,15,191,13,"setState"],[204,23,191,21],[204,24,191,22],[205,12,192,10,"isRecordingWithFlash"],[205,32,192,30],[205,34,192,32],[206,10,193,8],[206,11,193,9],[206,12,193,10],[207,8,194,6],[208,8,195,6],[208,12,195,10,"error"],[208,17,195,15],[208,21,195,19],[208,25,195,23],[208,27,195,25],[208,34,195,32,"onRecordingError"],[208,50,195,48],[208,51,195,49,"error"],[208,56,195,54],[208,57,195,55],[209,8,196,6],[209,12,196,10,"video"],[209,17,196,15],[209,21,196,19],[209,25,196,23],[209,27,196,25],[209,34,196,32,"onRecordingFinished"],[209,53,196,51],[209,54,196,52,"video"],[209,59,196,57],[209,60,196,58],[210,6,197,4],[210,7,197,5],[211,6,198,4],[211,12,198,10,"nativeRecordVideoOptions"],[211,36,198,34],[211,39,198,37,"passThruOptions"],[211,54,198,52],[212,6,199,4],[212,10,199,8],[213,8,200,6],[214,8,201,6,"_NativeCameraModule"],[214,27,201,25],[214,28,201,26,"CameraModule"],[214,40,201,38],[214,41,201,39,"startRecording"],[214,55,201,53],[214,56,201,54],[214,60,201,58],[214,61,201,59,"handle"],[214,67,201,65],[214,69,201,67,"nativeRecordVideoOptions"],[214,93,201,91],[214,95,201,93,"onRecordCallback"],[214,111,201,109],[214,112,201,110],[215,6,202,4],[215,7,202,5],[215,8,202,6],[215,15,202,13,"e"],[215,16,202,14],[215,18,202,16],[216,8,203,6],[216,14,203,12],[216,15,203,13],[216,16,203,14],[216,18,203,16,"_CameraError"],[216,30,203,28],[216,31,203,29,"tryParseNativeCameraError"],[216,56,203,54],[216,58,203,56,"e"],[216,59,203,57],[216,60,203,58],[217,6,204,4],[218,4,205,2],[220,4,207,2],[221,0,208,0],[222,0,209,0],[223,0,210,0],[224,0,211,0],[225,0,212,0],[226,0,213,0],[227,0,214,0],[228,0,215,0],[229,0,216,0],[230,0,217,0],[231,0,218,0],[232,0,219,0],[233,0,220,0],[234,0,221,0],[235,0,222,0],[236,0,223,0],[237,0,224,0],[238,0,225,0],[239,0,226,0],[240,0,227,0],[241,0,228,0],[242,0,229,0],[243,0,230,0],[244,4,231,2],[244,10,231,8,"pauseRecording"],[244,24,231,22,"pauseRecording"],[244,25,231,22],[244,27,231,25],[245,6,232,4],[245,10,232,8],[246,8,233,6],[246,15,233,13],[246,21,233,19,"_NativeCameraModule"],[246,40,233,38],[246,41,233,39,"CameraModule"],[246,53,233,51],[246,54,233,52,"pauseRecording"],[246,68,233,66],[246,69,233,67],[246,73,233,71],[246,74,233,72,"handle"],[246,80,233,78],[246,81,233,79],[247,6,234,4],[247,7,234,5],[247,8,234,6],[247,15,234,13,"e"],[247,16,234,14],[247,18,234,16],[248,8,235,6],[248,14,235,12],[248,15,235,13],[248,16,235,14],[248,18,235,16,"_CameraError"],[248,30,235,28],[248,31,235,29,"tryParseNativeCameraError"],[248,56,235,54],[248,58,235,56,"e"],[248,59,235,57],[248,60,235,58],[249,6,236,4],[250,4,237,2],[252,4,239,2],[253,0,240,0],[254,0,241,0],[255,0,242,0],[256,0,243,0],[257,0,244,0],[258,0,245,0],[259,0,246,0],[260,0,247,0],[261,0,248,0],[262,0,249,0],[263,0,250,0],[264,0,251,0],[265,0,252,0],[266,0,253,0],[267,0,254,0],[268,0,255,0],[269,0,256,0],[270,0,257,0],[271,0,258,0],[272,0,259,0],[273,0,260,0],[274,0,261,0],[275,0,262,0],[276,4,263,2],[276,10,263,8,"resumeRecording"],[276,25,263,23,"resumeRecording"],[276,26,263,23],[276,28,263,26],[277,6,264,4],[277,10,264,8],[278,8,265,6],[278,15,265,13],[278,21,265,19,"_NativeCameraModule"],[278,40,265,38],[278,41,265,39,"CameraModule"],[278,53,265,51],[278,54,265,52,"resumeRecording"],[278,69,265,67],[278,70,265,68],[278,74,265,72],[278,75,265,73,"handle"],[278,81,265,79],[278,82,265,80],[279,6,266,4],[279,7,266,5],[279,8,266,6],[279,15,266,13,"e"],[279,16,266,14],[279,18,266,16],[280,8,267,6],[280,14,267,12],[280,15,267,13],[280,16,267,14],[280,18,267,16,"_CameraError"],[280,30,267,28],[280,31,267,29,"tryParseNativeCameraError"],[280,56,267,54],[280,58,267,56,"e"],[280,59,267,57],[280,60,267,58],[281,6,268,4],[282,4,269,2],[284,4,271,2],[285,0,272,0],[286,0,273,0],[287,0,274,0],[288,0,275,0],[289,0,276,0],[290,0,277,0],[291,0,278,0],[292,0,279,0],[293,0,280,0],[294,0,281,0],[295,0,282,0],[296,0,283,0],[297,0,284,0],[298,0,285,0],[299,0,286,0],[300,0,287,0],[301,4,288,2],[301,10,288,8,"stopRecording"],[301,23,288,21,"stopRecording"],[301,24,288,21],[301,26,288,24],[302,6,289,4],[302,10,289,8],[303,8,290,6],[303,15,290,13],[303,21,290,19,"_NativeCameraModule"],[303,40,290,38],[303,41,290,39,"CameraModule"],[303,53,290,51],[303,54,290,52,"stopRecording"],[303,67,290,65],[303,68,290,66],[303,72,290,70],[303,73,290,71,"handle"],[303,79,290,77],[303,80,290,78],[304,6,291,4],[304,7,291,5],[304,8,291,6],[304,15,291,13,"e"],[304,16,291,14],[304,18,291,16],[305,8,292,6],[305,14,292,12],[305,15,292,13],[305,16,292,14],[305,18,292,16,"_CameraError"],[305,30,292,28],[305,31,292,29,"tryParseNativeCameraError"],[305,56,292,54],[305,58,292,56,"e"],[305,59,292,57],[305,60,292,58],[306,6,293,4],[307,4,294,2],[309,4,296,2],[310,0,297,0],[311,0,298,0],[312,0,299,0],[313,0,300,0],[314,0,301,0],[315,0,302,0],[316,0,303,0],[317,0,304,0],[318,0,305,0],[319,0,306,0],[320,0,307,0],[321,0,308,0],[322,0,309,0],[323,0,310,0],[324,0,311,0],[325,0,312,0],[326,0,313,0],[327,0,314,0],[328,0,315,0],[329,0,316,0],[330,0,317,0],[331,0,318,0],[332,0,319,0],[333,4,320,2],[333,10,320,8,"cancelRecording"],[333,25,320,23,"cancelRecording"],[333,26,320,23],[333,28,320,26],[334,6,321,4],[334,10,321,8],[335,8,322,6],[335,15,322,13],[335,21,322,19,"_NativeCameraModule"],[335,40,322,38],[335,41,322,39,"CameraModule"],[335,53,322,51],[335,54,322,52,"cancelRecording"],[335,69,322,67],[335,70,322,68],[335,74,322,72],[335,75,322,73,"handle"],[335,81,322,79],[335,82,322,80],[336,6,323,4],[336,7,323,5],[336,8,323,6],[336,15,323,13,"e"],[336,16,323,14],[336,18,323,16],[337,8,324,6],[337,14,324,12],[337,15,324,13],[337,16,324,14],[337,18,324,16,"_CameraError"],[337,30,324,28],[337,31,324,29,"tryParseNativeCameraError"],[337,56,324,54],[337,58,324,56,"e"],[337,59,324,57],[337,60,324,58],[338,6,325,4],[339,4,326,2],[341,4,328,2],[342,0,329,0],[343,0,330,0],[344,0,331,0],[345,0,332,0],[346,0,333,0],[347,0,334,0],[348,0,335,0],[349,0,336,0],[350,0,337,0],[351,0,338,0],[352,0,339,0],[353,0,340,0],[354,0,341,0],[355,0,342,0],[356,0,343,0],[357,0,344,0],[358,0,345,0],[359,0,346,0],[360,4,347,2],[360,10,347,8,"focus"],[360,15,347,13,"focus"],[360,16,347,14,"point"],[360,21,347,19],[360,23,347,21],[361,6,348,4],[361,10,348,8],[362,8,349,6],[362,15,349,13],[362,21,349,19,"_NativeCameraModule"],[362,40,349,38],[362,41,349,39,"CameraModule"],[362,53,349,51],[362,54,349,52,"focus"],[362,59,349,57],[362,60,349,58],[362,64,349,62],[362,65,349,63,"handle"],[362,71,349,69],[362,73,349,71,"point"],[362,78,349,76],[362,79,349,77],[363,6,350,4],[363,7,350,5],[363,8,350,6],[363,15,350,13,"e"],[363,16,350,14],[363,18,350,16],[364,8,351,6],[364,14,351,12],[364,15,351,13],[364,16,351,14],[364,18,351,16,"_CameraError"],[364,30,351,28],[364,31,351,29,"tryParseNativeCameraError"],[364,56,351,54],[364,58,351,56,"e"],[364,59,351,57],[364,60,351,58],[365,6,352,4],[366,4,353,2],[367,4,354,2],[369,4,356,2],[370,4,357,2],[371,0,358,0],[372,0,359,0],[373,0,360,0],[374,0,361,0],[375,0,362,0],[376,0,363,0],[377,0,364,0],[378,0,365,0],[379,0,366,0],[380,0,367,0],[381,0,368,0],[382,0,369,0],[383,0,370,0],[384,0,371,0],[385,0,372,0],[386,0,373,0],[387,4,374,2],[387,11,374,9,"getAvailableCameraDevices"],[387,36,374,34,"getAvailableCameraDevices"],[387,37,374,34],[387,39,374,37],[388,6,375,4],[388,13,375,11,"_CameraDevices"],[388,27,375,25],[388,28,375,26,"CameraDevices"],[388,41,375,39],[388,42,375,40,"getAvailableCameraDevices"],[388,67,375,65],[388,68,375,66],[388,69,375,67],[389,4,376,2],[390,4,377,2],[391,0,378,0],[392,0,379,0],[393,0,380,0],[394,0,381,0],[395,0,382,0],[396,4,383,2],[396,11,383,9,"addCameraDevicesChangedListener"],[396,42,383,40,"addCameraDevicesChangedListener"],[396,43,383,41,"listener"],[396,51,383,49],[396,53,383,51],[397,6,384,4],[397,13,384,11,"_CameraDevices"],[397,27,384,25],[397,28,384,26,"CameraDevices"],[397,41,384,39],[397,42,384,40,"addCameraDevicesChangedListener"],[397,73,384,71],[397,74,384,72,"listener"],[397,82,384,80],[397,83,384,81],[398,4,385,2],[399,4,386,2],[400,0,387,0],[401,0,388,0],[402,0,389,0],[403,0,390,0],[404,0,391,0],[405,4,392,2],[405,11,392,9,"getCameraPermissionStatus"],[405,36,392,34,"getCameraPermissionStatus"],[405,37,392,34],[405,39,392,37],[406,6,393,4],[406,13,393,11,"_NativeCameraModule"],[406,32,393,30],[406,33,393,31,"CameraModule"],[406,45,393,43],[406,46,393,44,"getCameraPermissionStatus"],[406,71,393,69],[406,72,393,70],[406,73,393,71],[407,4,394,2],[408,4,395,2],[409,0,396,0],[410,0,397,0],[411,0,398,0],[412,0,399,0],[413,0,400,0],[414,0,401,0],[415,4,402,2],[415,11,402,9,"getMicrophonePermissionStatus"],[415,40,402,38,"getMicrophonePermissionStatus"],[415,41,402,38],[415,43,402,41],[416,6,403,4],[416,13,403,11,"_NativeCameraModule"],[416,32,403,30],[416,33,403,31,"CameraModule"],[416,45,403,43],[416,46,403,44,"getMicrophonePermissionStatus"],[416,75,403,73],[416,76,403,74],[416,77,403,75],[417,4,404,2],[418,4,405,2],[419,0,406,0],[420,0,407,0],[421,0,408,0],[422,0,409,0],[423,0,410,0],[424,0,411,0],[425,0,412,0],[426,0,413,0],[427,0,414,0],[428,4,415,2],[428,11,415,9,"getLocationPermissionStatus"],[428,38,415,36,"getLocationPermissionStatus"],[428,39,415,36],[428,41,415,39],[429,6,416,4],[429,13,416,11,"_NativeCameraModule"],[429,32,416,30],[429,33,416,31,"CameraModule"],[429,45,416,43],[429,46,416,44,"getLocationPermissionStatus"],[429,73,416,71],[429,74,416,72],[429,75,416,73],[430,4,417,2],[431,4,418,2],[432,0,419,0],[433,0,420,0],[434,0,421,0],[435,0,422,0],[436,0,423,0],[437,0,424,0],[438,0,425,0],[439,0,426,0],[440,4,427,2],[440,17,427,15,"requestCameraPermission"],[440,40,427,38,"requestCameraPermission"],[440,41,427,38],[440,43,427,41],[441,6,428,4],[441,10,428,8],[442,8,429,6],[442,15,429,13],[442,21,429,19,"_NativeCameraModule"],[442,40,429,38],[442,41,429,39,"CameraModule"],[442,53,429,51],[442,54,429,52,"requestCameraPermission"],[442,77,429,75],[442,78,429,76],[442,79,429,77],[443,6,430,4],[443,7,430,5],[443,8,430,6],[443,15,430,13,"e"],[443,16,430,14],[443,18,430,16],[444,8,431,6],[444,14,431,12],[444,15,431,13],[444,16,431,14],[444,18,431,16,"_CameraError"],[444,30,431,28],[444,31,431,29,"tryParseNativeCameraError"],[444,56,431,54],[444,58,431,56,"e"],[444,59,431,57],[444,60,431,58],[445,6,432,4],[446,4,433,2],[447,4,434,2],[448,0,435,0],[449,0,436,0],[450,0,437,0],[451,0,438,0],[452,0,439,0],[453,0,440,0],[454,0,441,0],[455,0,442,0],[456,4,443,2],[456,17,443,15,"requestMicrophonePermission"],[456,44,443,42,"requestMicrophonePermission"],[456,45,443,42],[456,47,443,45],[457,6,444,4],[457,10,444,8],[458,8,445,6],[458,15,445,13],[458,21,445,19,"_NativeCameraModule"],[458,40,445,38],[458,41,445,39,"CameraModule"],[458,53,445,51],[458,54,445,52,"requestMicrophonePermission"],[458,81,445,79],[458,82,445,80],[458,83,445,81],[459,6,446,4],[459,7,446,5],[459,8,446,6],[459,15,446,13,"e"],[459,16,446,14],[459,18,446,16],[460,8,447,6],[460,14,447,12],[460,15,447,13],[460,16,447,14],[460,18,447,16,"_CameraError"],[460,30,447,28],[460,31,447,29,"tryParseNativeCameraError"],[460,56,447,54],[460,58,447,56,"e"],[460,59,447,57],[460,60,447,58],[461,6,448,4],[462,4,449,2],[463,4,450,2],[464,0,451,0],[465,0,452,0],[466,0,453,0],[467,0,454,0],[468,0,455,0],[469,0,456,0],[470,0,457,0],[471,0,458,0],[472,4,459,2],[472,17,459,15,"requestLocationPermission"],[472,42,459,40,"requestLocationPermission"],[472,43,459,40],[472,45,459,43],[473,6,460,4],[473,10,460,8],[474,8,461,6],[474,15,461,13],[474,21,461,19,"_NativeCameraModule"],[474,40,461,38],[474,41,461,39,"CameraModule"],[474,53,461,51],[474,54,461,52,"requestLocationPermission"],[474,79,461,77],[474,80,461,78],[474,81,461,79],[475,6,462,4],[475,7,462,5],[475,8,462,6],[475,15,462,13,"e"],[475,16,462,14],[475,18,462,16],[476,8,463,6],[476,14,463,12],[476,15,463,13],[476,16,463,14],[476,18,463,16,"_CameraError"],[476,30,463,28],[476,31,463,29,"tryParseNativeCameraError"],[476,56,463,54],[476,58,463,56,"e"],[476,59,463,57],[476,60,463,58],[477,6,464,4],[478,4,465,2],[479,4,466,2],[481,4,468,2],[482,4,469,2,"onError"],[482,11,469,9,"onError"],[482,12,469,10,"event"],[482,17,469,15],[482,19,469,17],[483,6,470,4],[483,12,470,10,"error"],[483,17,470,15],[483,20,470,18,"event"],[483,25,470,23],[483,26,470,24,"nativeEvent"],[483,37,470,35],[484,6,471,4],[484,12,471,10,"cause"],[484,17,471,15],[484,20,471,18],[484,21,471,19],[484,22,471,20],[484,24,471,22,"_CameraError"],[484,36,471,34],[484,37,471,35,"isErrorWithCause"],[484,53,471,51],[484,55,471,53,"error"],[484,60,471,58],[484,61,471,59,"cause"],[484,66,471,64],[484,67,471,65],[484,70,471,68,"error"],[484,75,471,73],[484,76,471,74,"cause"],[484,81,471,79],[484,84,471,82,"undefined"],[484,93,471,91],[485,6,472,4],[486,6,473,4],[486,12,473,10,"cameraError"],[486,23,473,21],[486,26,473,24],[486,30,473,28,"_CameraError"],[486,42,473,40],[486,43,473,41,"CameraRuntimeError"],[486,61,473,59],[486,62,473,60,"error"],[486,67,473,65],[486,68,473,66,"code"],[486,72,473,70],[486,74,473,72,"error"],[486,79,473,77],[486,80,473,78,"message"],[486,87,473,85],[486,89,473,87,"cause"],[486,94,473,92],[486,95,473,93],[487,6,474,4],[487,10,474,8],[487,14,474,12],[487,15,474,13,"props"],[487,20,474,18],[487,21,474,19,"onError"],[487,28,474,26],[487,32,474,30],[487,36,474,34],[487,38,474,36],[488,8,475,6],[488,12,475,10],[488,13,475,11,"props"],[488,18,475,16],[488,19,475,17,"onError"],[488,26,475,24],[488,27,475,25,"cameraError"],[488,38,475,36],[488,39,475,37],[489,6,476,4],[489,7,476,5],[489,13,476,11],[490,8,477,6],[491,8,478,6,"console"],[491,15,478,13],[491,16,478,14,"error"],[491,21,478,19],[491,22,478,20,"cameraError"],[491,33,478,31],[491,34,478,32],[492,6,479,4],[493,4,480,2],[494,4,481,2,"onInitialized"],[494,17,481,15,"onInitialized"],[494,18,481,15],[494,20,481,18],[495,6,482,4],[495,10,482,8],[495,11,482,9,"props"],[495,16,482,14],[495,17,482,15,"onInitialized"],[495,30,482,28],[495,33,482,31],[495,34,482,32],[496,4,483,2],[497,4,484,2,"onStarted"],[497,13,484,11,"onStarted"],[497,14,484,11],[497,16,484,14],[498,6,485,4],[498,10,485,8],[498,11,485,9,"props"],[498,16,485,14],[498,17,485,15,"onStarted"],[498,26,485,24],[498,29,485,27],[498,30,485,28],[499,4,486,2],[500,4,487,2,"onStopped"],[500,13,487,11,"onStopped"],[500,14,487,11],[500,16,487,14],[501,6,488,4],[501,10,488,8],[501,11,488,9,"props"],[501,16,488,14],[501,17,488,15,"onStopped"],[501,26,488,24],[501,29,488,27],[501,30,488,28],[502,4,489,2],[503,4,490,2,"onPreviewStarted"],[503,20,490,18,"onPreviewStarted"],[503,21,490,18],[503,23,490,21],[504,6,491,4],[504,10,491,8],[504,11,491,9,"props"],[504,16,491,14],[504,17,491,15,"onPreviewStarted"],[504,33,491,31],[504,36,491,34],[504,37,491,35],[505,4,492,2],[506,4,493,2,"onPreviewStopped"],[506,20,493,18,"onPreviewStopped"],[506,21,493,18],[506,23,493,21],[507,6,494,4],[507,10,494,8],[507,11,494,9,"props"],[507,16,494,14],[507,17,494,15,"onPreviewStopped"],[507,33,494,31],[507,36,494,34],[507,37,494,35],[508,4,495,2],[509,4,496,2,"onShutter"],[509,13,496,11,"onShutter"],[509,14,496,12,"event"],[509,19,496,17],[509,21,496,19],[510,6,497,4],[510,10,497,8],[510,11,497,9,"props"],[510,16,497,14],[510,17,497,15,"onShutter"],[510,26,497,24],[510,29,497,27,"event"],[510,34,497,32],[510,35,497,33,"nativeEvent"],[510,46,497,44],[510,47,497,45],[511,4,498,2],[512,4,499,2,"onOutputOrientationChanged"],[512,30,499,28,"onOutputOrientationChanged"],[512,31,499,29],[513,6,500,4,"nativeEvent"],[513,17,500,15],[513,19,500,17],[514,8,501,6,"outputOrientation"],[515,6,502,4],[516,4,503,2],[516,5,503,3],[516,7,503,5],[517,6,504,4],[517,10,504,8],[517,11,504,9,"rotationHelper"],[517,25,504,23],[517,26,504,24,"outputOrientation"],[517,43,504,41],[517,46,504,44,"outputOrientation"],[517,63,504,61],[518,6,505,4],[518,10,505,8],[518,11,505,9,"props"],[518,16,505,14],[518,17,505,15,"onOutputOrientationChanged"],[518,43,505,41],[518,46,505,44,"outputOrientation"],[518,63,505,61],[518,64,505,62],[519,6,506,4],[519,10,506,8],[519,11,506,9,"maybeUpdateUIRotation"],[519,32,506,30],[519,33,506,31],[519,34,506,32],[520,4,507,2],[521,4,508,2,"onPreviewOrientationChanged"],[521,31,508,29,"onPreviewOrientationChanged"],[521,32,508,30],[522,6,509,4,"nativeEvent"],[522,17,509,15],[522,19,509,17],[523,8,510,6,"previewOrientation"],[524,6,511,4],[525,4,512,2],[525,5,512,3],[525,7,512,5],[526,6,513,4],[526,10,513,8],[526,11,513,9,"rotationHelper"],[526,25,513,23],[526,26,513,24,"previewOrientation"],[526,44,513,42],[526,47,513,45,"previewOrientation"],[526,65,513,63],[527,6,514,4],[527,10,514,8],[527,11,514,9,"props"],[527,16,514,14],[527,17,514,15,"onPreviewOrientationChanged"],[527,44,514,42],[527,47,514,45,"previewOrientation"],[527,65,514,63],[527,66,514,64],[528,6,515,4],[528,10,515,8],[528,11,515,9,"maybeUpdateUIRotation"],[528,32,515,30],[528,33,515,31],[528,34,515,32],[529,6,516,4],[529,10,516,8,"isSkiaFrameProcessor"],[529,30,516,28],[529,31,516,29],[529,35,516,33],[529,36,516,34,"props"],[529,41,516,39],[529,42,516,40,"frameProcessor"],[529,56,516,54],[529,57,516,55],[529,59,516,57],[530,8,517,6],[531,8,518,6],[531,12,518,10],[531,13,518,11,"props"],[531,18,518,16],[531,19,518,17,"frameProcessor"],[531,33,518,31],[531,34,518,32,"previewOrientation"],[531,52,518,50],[531,53,518,51,"value"],[531,58,518,56],[531,61,518,59,"previewOrientation"],[531,79,518,77],[532,6,519,4],[533,4,520,2],[534,4,521,2,"maybeUpdateUIRotation"],[534,25,521,23,"maybeUpdateUIRotation"],[534,26,521,23],[534,28,521,26],[535,6,522,4],[535,12,522,10,"uiRotation"],[535,22,522,20],[535,25,522,23],[535,29,522,27],[535,30,522,28,"rotationHelper"],[535,44,522,42],[535,45,522,43,"uiRotation"],[535,55,522,53],[536,6,523,4],[536,10,523,8,"uiRotation"],[536,20,523,18],[536,25,523,23],[536,29,523,27],[536,30,523,28,"lastUIRotation"],[536,44,523,42],[536,46,523,44],[537,8,524,6],[537,12,524,10],[537,13,524,11,"props"],[537,18,524,16],[537,19,524,17,"onUIRotationChanged"],[537,38,524,36],[537,41,524,39,"uiRotation"],[537,51,524,49],[537,52,524,50],[538,8,525,6],[538,12,525,10],[538,13,525,11,"lastUIRotation"],[538,27,525,25],[538,30,525,28,"uiRotation"],[538,40,525,38],[539,6,526,4],[540,4,527,2],[541,4,528,2],[543,4,530,2,"onCodeScanned"],[543,17,530,15,"onCodeScanned"],[543,18,530,16,"event"],[543,23,530,21],[543,25,530,23],[544,6,531,4],[544,12,531,10,"codeScanner"],[544,23,531,21],[544,26,531,24],[544,30,531,28],[544,31,531,29,"props"],[544,36,531,34],[544,37,531,35,"codeScanner"],[544,48,531,46],[545,6,532,4],[545,10,532,8,"codeScanner"],[545,21,532,19],[545,25,532,23],[545,29,532,27],[545,31,532,29],[546,6,533,4,"codeScanner"],[546,17,533,15],[546,18,533,16,"onCodeScanned"],[546,31,533,29],[546,32,533,30,"event"],[546,37,533,35],[546,38,533,36,"nativeEvent"],[546,49,533,47],[546,50,533,48,"codes"],[546,55,533,53],[546,57,533,55,"event"],[546,62,533,60],[546,63,533,61,"nativeEvent"],[546,74,533,72],[546,75,533,73,"frame"],[546,80,533,78],[546,81,533,79],[547,4,534,2],[549,4,536,2],[550,4,537,2,"setFrameProcessor"],[550,21,537,19,"setFrameProcessor"],[550,22,537,20,"frameProcessor"],[550,36,537,34],[550,38,537,36],[551,6,538,4,"_VisionCameraProxy"],[551,24,538,22],[551,25,538,23,"VisionCameraProxy"],[551,42,538,40],[551,43,538,41,"setFrameProcessor"],[551,60,538,58],[551,61,538,59],[551,65,538,63],[551,66,538,64,"handle"],[551,72,538,70],[551,74,538,72,"frameProcessor"],[551,88,538,86],[551,89,538,87],[552,4,539,2],[553,4,540,2,"unsetFrameProcessor"],[553,23,540,21,"unsetFrameProcessor"],[553,24,540,21],[553,26,540,24],[554,6,541,4,"_VisionCameraProxy"],[554,24,541,22],[554,25,541,23,"VisionCameraProxy"],[554,42,541,40],[554,43,541,41,"removeFrameProcessor"],[554,63,541,61],[554,64,541,62],[554,68,541,66],[554,69,541,67,"handle"],[554,75,541,73],[554,76,541,74],[555,4,542,2],[556,4,543,2,"onViewReady"],[556,15,543,13,"onViewReady"],[556,16,543,13],[556,18,543,16],[557,6,544,4],[557,10,544,8],[557,11,544,9,"isNativeViewMounted"],[557,30,544,28],[557,33,544,31],[557,37,544,35],[558,6,545,4],[558,10,545,8],[558,14,545,12],[558,15,545,13,"props"],[558,20,545,18],[558,21,545,19,"frameProcessor"],[558,35,545,33],[558,39,545,37],[558,43,545,41],[558,45,545,43],[559,8,546,6],[560,8,547,6],[560,12,547,10],[560,13,547,11,"setFrameProcessor"],[560,30,547,28],[560,31,547,29],[560,35,547,33],[560,36,547,34,"props"],[560,41,547,39],[560,42,547,40,"frameProcessor"],[560,56,547,54],[560,57,547,55,"frameProcessor"],[560,71,547,69],[560,72,547,70],[561,8,548,6],[561,12,548,10],[561,13,548,11,"lastFrameProcessor"],[561,31,548,29],[561,34,548,32],[561,38,548,36],[561,39,548,37,"props"],[561,44,548,42],[561,45,548,43,"frameProcessor"],[561,59,548,57],[561,60,548,58,"frameProcessor"],[561,74,548,72],[562,6,549,4],[563,4,550,2],[564,4,551,2,"onAverageFpsChanged"],[564,23,551,21,"onAverageFpsChanged"],[564,24,551,22],[565,6,552,4,"nativeEvent"],[565,17,552,15],[565,19,552,17],[566,8,553,6,"averageFps"],[567,6,554,4],[568,4,555,2],[568,5,555,3],[568,7,555,5],[569,6,556,4],[569,10,556,8],[569,11,556,9,"setState"],[569,19,556,17],[569,20,556,18,"state"],[569,25,556,23],[569,29,556,27],[570,8,557,6],[570,14,557,12,"averageFpsSamples"],[570,31,557,29],[570,34,557,32],[570,35,557,33],[570,38,557,36,"state"],[570,43,557,41],[570,44,557,42,"averageFpsSamples"],[570,61,557,59],[570,63,557,61,"averageFps"],[570,73,557,71],[570,74,557,72],[571,8,558,6],[571,15,558,13,"averageFpsSamples"],[571,32,558,30],[571,33,558,31,"length"],[571,39,558,37],[571,43,558,41,"_FpsGraph"],[571,52,558,50],[571,53,558,51,"MAX_BARS"],[571,61,558,59],[571,64,558,62],[571,65,558,63],[571,67,558,65],[572,10,559,8],[573,10,560,8,"averageFpsSamples"],[573,27,560,25],[573,28,560,26,"shift"],[573,33,560,31],[573,34,560,32],[573,35,560,33],[574,8,561,6],[575,8,562,6],[575,15,562,13],[576,10,563,8],[576,13,563,11,"state"],[576,18,563,16],[577,10,564,8,"averageFpsSamples"],[577,27,564,25],[577,29,564,27,"averageFpsSamples"],[578,8,565,6],[578,9,565,7],[579,6,566,4],[579,7,566,5],[579,8,566,6],[580,4,567,2],[582,4,569,2],[583,4,570,2,"componentDidUpdate"],[583,22,570,20,"componentDidUpdate"],[583,23,570,20],[583,25,570,23],[584,6,571,4],[584,10,571,8],[584,11,571,9],[584,15,571,13],[584,16,571,14,"isNativeViewMounted"],[584,35,571,33],[584,37,571,35],[585,6,572,4],[585,12,572,10,"frameProcessor"],[585,26,572,24],[585,29,572,27],[585,33,572,31],[585,34,572,32,"props"],[585,39,572,37],[585,40,572,38,"frameProcessor"],[585,54,572,52],[586,6,573,4],[586,10,573,8,"frameProcessor"],[586,24,573,22],[586,26,573,24,"frameProcessor"],[586,40,573,38],[586,45,573,43],[586,49,573,47],[586,50,573,48,"lastFrameProcessor"],[586,68,573,66],[586,70,573,68],[587,8,574,6],[588,8,575,6],[588,12,575,10,"frameProcessor"],[588,26,575,24],[588,30,575,28],[588,34,575,32],[588,36,575,34],[588,40,575,38],[588,41,575,39,"setFrameProcessor"],[588,58,575,56],[588,59,575,57,"frameProcessor"],[588,73,575,71],[588,74,575,72,"frameProcessor"],[588,88,575,86],[588,89,575,87],[588,90,575,88],[588,95,575,93],[588,99,575,97],[588,100,575,98,"unsetFrameProcessor"],[588,119,575,117],[588,120,575,118],[588,121,575,119],[589,8,576,6],[589,12,576,10],[589,13,576,11,"lastFrameProcessor"],[589,31,576,29],[589,34,576,32,"frameProcessor"],[589,48,576,46],[589,50,576,48,"frameProcessor"],[589,64,576,62],[590,6,577,4],[591,4,578,2],[592,4,579,2],[594,4,581,2],[595,4,582,2,"render"],[595,10,582,8,"render"],[595,11,582,8],[595,13,582,11],[596,6,583,4],[597,6,584,4],[597,12,584,10],[598,8,585,6,"device"],[598,14,585,12],[599,8,586,6,"frameProcessor"],[599,22,586,20],[600,8,587,6,"codeScanner"],[600,19,587,17],[601,8,588,6,"enableFpsGraph"],[601,22,588,20],[602,8,589,6,"fps"],[602,11,589,9],[603,8,590,6,"videoBitRate"],[603,20,590,18],[604,8,591,6],[604,11,591,9,"props"],[605,6,592,4],[605,7,592,5],[605,10,592,8],[605,14,592,12],[605,15,592,13,"props"],[605,20,592,18],[607,6,594,4],[608,6,595,4],[608,10,595,8,"device"],[608,16,595,14],[608,20,595,18],[608,24,595,22],[608,26,595,24],[609,8,596,6],[609,14,596,12],[609,18,596,16,"_CameraError"],[609,30,596,28],[609,31,596,29,"CameraRuntimeError"],[609,49,596,47],[609,50,596,48],[609,68,596,66],[609,70,596,68],[609,200,596,198],[609,201,596,199],[610,6,597,4],[611,6,598,4],[611,12,598,10,"shouldEnableBufferCompression"],[611,41,598,39],[611,44,598,42,"props"],[611,49,598,47],[611,50,598,48,"video"],[611,55,598,53],[611,60,598,58],[611,64,598,62],[611,68,598,66,"frameProcessor"],[611,82,598,80],[611,86,598,84],[611,90,598,88],[612,6,599,4],[612,12,599,10,"torch"],[612,17,599,15],[612,20,599,18],[612,24,599,22],[612,25,599,23,"state"],[612,30,599,28],[612,31,599,29,"isRecordingWithFlash"],[612,51,599,49],[612,54,599,52],[612,58,599,56],[612,61,599,59,"props"],[612,66,599,64],[612,67,599,65,"torch"],[612,72,599,70],[613,6,600,4],[613,12,600,10,"isRenderingWithSkia"],[613,31,600,29],[613,34,600,32,"isSkiaFrameProcessor"],[613,54,600,52],[613,55,600,53,"frameProcessor"],[613,69,600,67],[613,70,600,68],[614,6,601,4],[614,12,601,10,"shouldBeMirrored"],[614,28,601,26],[614,31,601,29,"device"],[614,37,601,35],[614,38,601,36,"position"],[614,46,601,44],[614,51,601,49],[614,58,601,56],[616,6,603,4],[617,6,604,4],[617,12,604,10,"minFps"],[617,18,604,16],[617,21,604,19,"fps"],[617,24,604,22],[617,28,604,26],[617,32,604,30],[617,35,604,33,"undefined"],[617,44,604,42],[617,47,604,45],[617,54,604,52,"fps"],[617,57,604,55],[617,62,604,60],[617,70,604,68],[617,73,604,71,"fps"],[617,76,604,74],[617,79,604,77,"fps"],[617,82,604,80],[617,83,604,81],[617,84,604,82],[617,85,604,83],[618,6,605,4],[618,12,605,10,"maxFps"],[618,18,605,16],[618,21,605,19,"fps"],[618,24,605,22],[618,28,605,26],[618,32,605,30],[618,35,605,33,"undefined"],[618,44,605,42],[618,47,605,45],[618,54,605,52,"fps"],[618,57,605,55],[618,62,605,60],[618,70,605,68],[618,73,605,71,"fps"],[618,76,605,74],[618,79,605,77,"fps"],[618,82,605,80],[618,83,605,81],[618,84,605,82],[618,85,605,83],[620,6,607,4],[621,6,608,4],[621,10,608,8,"bitRateMultiplier"],[621,27,608,25],[622,6,609,4],[622,10,609,8,"bitRateOverride"],[622,25,609,23],[623,6,610,4],[623,10,610,8],[623,17,610,15,"videoBitRate"],[623,29,610,27],[623,34,610,32],[623,42,610,40],[623,44,610,42],[624,8,611,6],[625,8,612,6,"bitRateOverride"],[625,23,612,21],[625,26,612,24,"videoBitRate"],[625,38,612,36],[626,6,613,4],[626,7,613,5],[626,13,613,11],[626,17,613,15],[626,24,613,22,"videoBitRate"],[626,36,613,34],[626,41,613,39],[626,49,613,47],[626,53,613,51,"videoBitRate"],[626,65,613,63],[626,70,613,68],[626,78,613,76],[626,80,613,78],[627,8,614,6],[628,8,615,6,"bitRateMultiplier"],[628,25,615,23],[628,28,615,26],[628,32,615,30],[628,33,615,31,"getBitRateMultiplier"],[628,53,615,51],[628,54,615,52,"videoBitRate"],[628,66,615,64],[628,67,615,65],[629,6,616,4],[630,6,617,4],[630,13,617,11],[630,26,617,24,"_react"],[630,32,617,30],[630,33,617,31,"default"],[630,40,617,38],[630,41,617,39,"createElement"],[630,54,617,52],[630,55,617,53,"_NativeCameraView"],[630,72,617,70],[630,73,617,71,"NativeCameraView"],[630,89,617,87],[630,91,617,89,"_extends"],[630,99,617,97],[630,100,617,98],[630,101,617,99],[630,102,617,100],[630,104,617,102,"props"],[630,109,617,107],[630,111,617,109],[631,8,618,6,"cameraId"],[631,16,618,14],[631,18,618,16,"device"],[631,24,618,22],[631,25,618,23,"id"],[631,27,618,25],[632,8,619,6,"ref"],[632,11,619,9],[632,13,619,11],[632,17,619,15],[632,18,619,16,"ref"],[632,21,619,19],[633,8,620,6,"torch"],[633,13,620,11],[633,15,620,13,"torch"],[633,20,620,18],[634,8,621,6,"minFps"],[634,14,621,12],[634,16,621,14,"minFps"],[634,22,621,20],[635,8,622,6,"maxFps"],[635,14,622,12],[635,16,622,14,"maxFps"],[635,22,622,20],[636,8,623,6,"isMirrored"],[636,18,623,16],[636,20,623,18,"props"],[636,25,623,23],[636,26,623,24,"isMirrored"],[636,36,623,34],[636,40,623,38,"shouldBeMirrored"],[636,56,623,54],[637,8,624,6,"onViewReady"],[637,19,624,17],[637,21,624,19],[637,25,624,23],[637,26,624,24,"onViewReady"],[637,37,624,35],[638,8,625,6,"onAverageFpsChanged"],[638,27,625,25],[638,29,625,27,"enableFpsGraph"],[638,43,625,41],[638,46,625,44],[638,50,625,48],[638,51,625,49,"onAverageFpsChanged"],[638,70,625,68],[638,73,625,71,"undefined"],[638,82,625,80],[639,8,626,6,"onInitialized"],[639,21,626,19],[639,23,626,21],[639,27,626,25],[639,28,626,26,"onInitialized"],[639,41,626,39],[640,8,627,6,"onCodeScanned"],[640,21,627,19],[640,23,627,21],[640,27,627,25],[640,28,627,26,"onCodeScanned"],[640,41,627,39],[641,8,628,6,"onStarted"],[641,17,628,15],[641,19,628,17],[641,23,628,21],[641,24,628,22,"onStarted"],[641,33,628,31],[642,8,629,6,"onStopped"],[642,17,629,15],[642,19,629,17],[642,23,629,21],[642,24,629,22,"onStopped"],[642,33,629,31],[643,8,630,6,"onPreviewStarted"],[643,24,630,22],[643,26,630,24],[643,30,630,28],[643,31,630,29,"onPreviewStarted"],[643,47,630,45],[644,8,631,6,"onPreviewStopped"],[644,24,631,22],[644,26,631,24],[644,30,631,28],[644,31,631,29,"onPreviewStopped"],[644,47,631,45],[645,8,632,6,"onShutter"],[645,17,632,15],[645,19,632,17],[645,23,632,21],[645,24,632,22,"onShutter"],[645,33,632,31],[646,8,633,6,"videoBitRateMultiplier"],[646,30,633,28],[646,32,633,30,"bitRateMultiplier"],[646,49,633,47],[647,8,634,6,"videoBitRateOverride"],[647,28,634,26],[647,30,634,28,"bitRateOverride"],[647,45,634,43],[648,8,635,6,"onOutputOrientationChanged"],[648,34,635,32],[648,36,635,34],[648,40,635,38],[648,41,635,39,"onOutputOrientationChanged"],[648,67,635,65],[649,8,636,6,"onPreviewOrientationChanged"],[649,35,636,33],[649,37,636,35],[649,41,636,39],[649,42,636,40,"onPreviewOrientationChanged"],[649,69,636,67],[650,8,637,6,"onError"],[650,15,637,13],[650,17,637,15],[650,21,637,19],[650,22,637,20,"onError"],[650,29,637,27],[651,8,638,6,"codeScannerOptions"],[651,26,638,24],[651,28,638,26,"codeScanner"],[651,39,638,37],[652,8,639,6,"enableFrameProcessor"],[652,28,639,26],[652,30,639,28,"frameProcessor"],[652,44,639,42],[652,48,639,46],[652,52,639,50],[653,8,640,6,"enableBufferCompression"],[653,31,640,29],[653,33,640,31,"props"],[653,38,640,36],[653,39,640,37,"enableBufferCompression"],[653,62,640,60],[653,66,640,64,"shouldEnableBufferCompression"],[653,95,640,93],[654,8,641,6,"preview"],[654,15,641,13],[654,17,641,15,"isRenderingWithSkia"],[654,36,641,34],[654,39,641,37],[654,44,641,42],[654,47,641,45,"props"],[654,52,641,50],[654,53,641,51,"preview"],[654,60,641,58],[654,64,641,62],[655,6,642,4],[655,7,642,5],[655,8,642,6],[655,10,642,8,"isRenderingWithSkia"],[655,29,642,27],[655,33,642,31],[655,46,642,44,"_react"],[655,52,642,50],[655,53,642,51,"default"],[655,60,642,58],[655,61,642,59,"createElement"],[655,74,642,72],[655,75,642,73,"_SkiaCameraCanvas"],[655,92,642,90],[655,93,642,91,"SkiaCameraCanvas"],[655,109,642,107],[655,111,642,109],[656,8,643,6,"style"],[656,13,643,11],[656,15,643,13,"styles"],[656,21,643,19],[656,22,643,20,"customPreviewView"],[656,39,643,37],[657,8,644,6,"offscreenTextures"],[657,25,644,23],[657,27,644,25,"frameProcessor"],[657,41,644,39],[657,42,644,40,"offscreenTextures"],[657,59,644,57],[658,8,645,6,"resizeMode"],[658,18,645,16],[658,20,645,18,"props"],[658,25,645,23],[658,26,645,24,"resizeMode"],[659,6,646,4],[659,7,646,5],[659,8,646,6],[659,10,646,8,"enableFpsGraph"],[659,24,646,22],[659,28,646,26],[659,41,646,39,"_react"],[659,47,646,45],[659,48,646,46,"default"],[659,55,646,53],[659,56,646,54,"createElement"],[659,69,646,67],[659,70,646,68,"_FpsGraph"],[659,79,646,77],[659,80,646,78,"FpsGraph"],[659,88,646,86],[659,90,646,88],[660,8,647,6,"style"],[660,13,647,11],[660,15,647,13,"styles"],[660,21,647,19],[660,22,647,20,"fpsGraph"],[660,30,647,28],[661,8,648,6,"averageFpsSamples"],[661,25,648,23],[661,27,648,25],[661,31,648,29],[661,32,648,30,"state"],[661,37,648,35],[661,38,648,36,"averageFpsSamples"],[661,55,648,53],[662,8,649,6,"targetMaxFps"],[662,20,649,18],[662,22,649,20,"props"],[662,27,649,25],[662,28,649,26,"format"],[662,34,649,32],[662,36,649,34,"maxFps"],[662,42,649,40],[662,46,649,44],[663,6,650,4],[663,7,650,5],[663,8,650,6],[663,9,650,7],[664,4,651,2],[665,2,652,0],[666,2,653,0],[667,2,654,0,"exports"],[667,9,654,7],[667,10,654,8,"Camera"],[667,16,654,14],[667,19,654,17,"Camera"],[667,25,654,23],[668,2,655,0],[668,8,655,6,"styles"],[668,14,655,12],[668,17,655,15,"_reactNative"],[668,29,655,27],[668,30,655,28,"StyleSheet"],[668,40,655,38],[668,41,655,39,"create"],[668,47,655,45],[668,48,655,46],[669,4,656,2,"customPreviewView"],[669,21,656,19],[669,23,656,21],[670,6,657,4,"flex"],[670,10,657,8],[670,12,657,10],[671,4,658,2],[671,5,658,3],[672,4,659,2,"fpsGraph"],[672,12,659,10],[672,14,659,12],[673,6,660,4,"elevation"],[673,15,660,13],[673,17,660,15],[673,18,660,16],[674,6,661,4,"position"],[674,14,661,12],[674,16,661,14],[674,26,661,24],[675,6,662,4,"left"],[675,10,662,8],[675,12,662,10],[675,14,662,12],[676,6,663,4,"top"],[676,9,663,7],[676,11,663,9],[677,4,664,2],[678,2,665,0],[678,3,665,1],[678,4,665,2],[679,0,665,3],[679,3]],"functionMap":{"names":["<global>","_interopRequireDefault","_extends","<anonymous>","isSkiaFrameProcessor","Camera","constructor","get__handle","takePhoto","takeSnapshot","getBitRateMultiplier","startRecording","onRecordCallback","pauseRecording","resumeRecording","stopRecording","cancelRecording","focus","getAvailableCameraDevices","addCameraDevicesChangedListener","getCameraPermissionStatus","getMicrophonePermissionStatus","getLocationPermissionStatus","requestCameraPermission","requestMicrophonePermission","requestLocationPermission","onError","onInitialized","onStarted","onStopped","onPreviewStarted","onPreviewStopped","onShutter","onOutputOrientationChanged","onPreviewOrientationChanged","maybeUpdateUIRotation","onCodeScanned","setFrameProcessor","unsetFrameProcessor","onViewReady","onAverageFpsChanged","setState$argument_0","componentDidUpdate","render"],"mappings":"AAA;ACgB,qFD;AEC,+EC,iKD,oCF;AIK;CJE;AKmC;ECS;GDoB;EEC;GFM;EGgB;GHM;EIiB;GJM;EKC;GLc;EMmB;6BCa;KDS;GNQ;EQ0B;GRM;ES0B;GTM;EUmB;GVM;EW0B;GXM;EYqB;GZM;EaqB;GbE;EcO;GdE;EeO;GfE;EgBQ;GhBE;EiBW;GjBE;EkBU;GlBM;EmBU;GnBM;EoBU;GpBM;EqBI;GrBW;EsBC;GtBE;EuBC;GvBE;EwBC;GxBE;EyBC;GzBE;E0BC;G1BE;E2BC;G3BE;E4BC;G5BQ;E6BC;G7BY;E8BC;G9BM;E+BG;G/BI;EgCG;GhCE;EiCC;GjCE;EkCC;GlCO;EmCC;kBCK;KDU;GnCC;EqCG;GrCQ;EsCI;GtCqE;CLC"},"hasCjsExports":true},"type":"js/module"}]}