{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":61,"index":61}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"./useUnmountAwareCallbacks","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":62},"end":{"line":2,"column":75,"index":137}}],"key":"3BUUYvw+CD+nwK2jZFzshln47Y4=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useOnListLoad\", {\n    enumerable: true,\n    get: function () {\n      return useOnListLoad;\n    }\n  });\n  Object.defineProperty(exports, \"useOnLoad\", {\n    enumerable: true,\n    get: function () {\n      return useOnLoad;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var _useUnmountAwareCallbacks = require(_dependencyMap[2], \"./useUnmountAwareCallbacks\");\n  // import { ToastAndroid } from \"react-native\";\n  /**\n   * Hook to track when the RecyclerView has loaded its items and notify when loading is complete.\n   * Similar to FlashList's onLoad functionality, this hook tracks the time it takes to render\n   * the initial set of items in the RecyclerView and provides performance metrics.\n   *\n   * @param recyclerViewManager - The RecyclerViewManager instance managing the list\n   * @param onLoad - Optional callback function that will be called when the list has loaded with timing information\n   * @returns Object containing isLoaded state indicating whether the list has completed initial rendering\n   */\n  var useOnListLoad = (recyclerViewManager, onLoad) => {\n    var loadStartTimeRef = (0, _react.useRef)(Date.now());\n    var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      isLoaded = _useState2[0],\n      setIsLoaded = _useState2[1];\n    var dataLength = recyclerViewManager.getDataLength();\n    // const dataCollector = useRef<number[]>([]);\n    var _useUnmountAwareAnima = (0, _useUnmountAwareCallbacks.useUnmountAwareAnimationFrame)(),\n      requestAnimationFrame = _useUnmountAwareAnima.requestAnimationFrame;\n    // Track render cycles by collecting elapsed time on each render\n    // useEffect(() => {\n    //   const elapsedTimeInMs = Date.now() - loadStartTimeRef.current;\n    //   dataCollector.current?.push(elapsedTimeInMs);\n    // });\n    (0, _react.useMemo)(() => {\n      loadStartTimeRef.current = Date.now();\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [dataLength]);\n    useOnLoad(recyclerViewManager, () => {\n      var elapsedTimeInMs = Date.now() - loadStartTimeRef.current;\n      // Commented code below was used for debugging purposes\n      // to display all collected timing data points\n      // const dataCollectorString = dataCollector.current\n      //   ?.map((value) => value.toString())\n      //   .join(\", \");\n      // ToastAndroid?.show(\n      //   `onLoad called after ${dataCollectorString}`,\n      //   ToastAndroid.SHORT\n      // );\n      // console.log(\"----------> dataCollector\", dataCollectorString);\n      // console.log(\"----------> FlashList v2 load in\", `${elapsedTimeInMs} ms`);\n      requestAnimationFrame(() => {\n        recyclerViewManager.isFirstPaintOnUiComplete = true;\n        onLoad === null || onLoad === void 0 ? void 0 : onLoad({\n          elapsedTimeInMs\n        });\n        setIsLoaded(true);\n      });\n    });\n    return {\n      isLoaded\n    };\n  };\n  /**\n   * Core hook that detects when a RecyclerView has completed its initial layout.\n   * This hook monitors the RecyclerViewManager and triggers the provided callback\n   * once the first layout is complete.\n   *\n   * @param recyclerViewManager - The RecyclerViewManager instance to monitor\n   * @param onLoad - Callback function that will be called once when the first layout is complete\n   */\n  var useOnLoad = (recyclerViewManager, onLoad) => {\n    var isLoaded = (0, _react.useRef)(false);\n    (0, _react.useEffect)(() => {\n      // Only trigger onLoad callback once when first layout is complete\n      if (recyclerViewManager.getIsFirstLayoutComplete() && !isLoaded.current) {\n        isLoaded.current = true;\n        onLoad();\n      }\n    });\n  };\n});","lineCount":100,"map":[[12,2,13,0,"Object"],[12,8,13,0],[12,9,13,0,"defineProperty"],[12,23,13,0],[12,24,13,0,"exports"],[12,31,13,0],[13,4,13,0,"enumerable"],[13,14,13,0],[14,4,13,0,"get"],[14,7,13,0],[14,18,13,0,"get"],[14,19,13,0],[15,6,13,0],[15,13,13,0,"useOnListLoad"],[15,26,13,0],[16,4,13,0],[17,2,13,0],[18,2,57,0,"Object"],[18,8,57,0],[18,9,57,0,"defineProperty"],[18,23,57,0],[18,24,57,0,"exports"],[18,31,57,0],[19,4,57,0,"enumerable"],[19,14,57,0],[20,4,57,0,"get"],[20,7,57,0],[20,18,57,0,"get"],[20,19,57,0],[21,6,57,0],[21,13,57,0,"useOnLoad"],[21,22,57,0],[22,4,57,0],[23,2,57,0],[24,2,66,2],[24,6,66,2,"_babelRuntimeHelpersSlicedToArray"],[24,39,66,2],[24,42,66,2,"require"],[24,49,66,2],[24,50,66,2,"_dependencyMap"],[24,64,66,2],[25,2,66,2],[25,6,66,2,"_slicedToArray"],[25,20,66,2],[25,23,66,2,"_interopDefault"],[25,38,66,2],[25,39,66,2,"_babelRuntimeHelpersSlicedToArray"],[25,72,66,2],[26,2,1,0],[26,6,1,0,"_react"],[26,12,1,0],[26,15,1,0,"require"],[26,22,1,0],[26,23,1,0,"_dependencyMap"],[26,37,1,0],[27,2,2,0],[27,6,2,0,"_useUnmountAwareCallbacks"],[27,31,2,0],[27,34,2,0,"require"],[27,41,2,0],[27,42,2,0,"_dependencyMap"],[27,56,2,0],[28,2,3,0],[29,2,4,0],[30,0,5,0],[31,0,6,0],[32,0,7,0],[33,0,8,0],[34,0,9,0],[35,0,10,0],[36,0,11,0],[37,0,12,0],[38,2,13,7],[38,6,13,13,"useOnListLoad"],[38,19,13,26],[38,22,13,29,"useOnListLoad"],[38,23,13,30,"recyclerViewManager"],[38,42,13,49],[38,44,13,51,"onLoad"],[38,50,13,57],[38,55,13,62],[39,4,14,4],[39,8,14,10,"loadStartTimeRef"],[39,24,14,26],[39,27,14,29],[39,31,14,29,"useRef"],[39,37,14,35],[39,38,14,35,"useRef"],[39,44,14,35],[39,46,14,36,"Date"],[39,50,14,40],[39,51,14,41,"now"],[39,54,14,44],[39,55,14,45],[39,56,14,46],[39,57,14,47],[40,4,15,4],[40,8,15,4,"_useState"],[40,17,15,4],[40,20,15,36],[40,24,15,36,"useState"],[40,30,15,44],[40,31,15,44,"useState"],[40,39,15,44],[40,41,15,45],[40,46,15,50],[40,47,15,51],[41,6,15,51,"_useState2"],[41,16,15,51],[41,23,15,51,"_slicedToArray"],[41,37,15,51],[41,38,15,51,"default"],[41,45,15,51],[41,47,15,51,"_useState"],[41,56,15,51],[42,6,15,11,"isLoaded"],[42,14,15,19],[42,17,15,19,"_useState2"],[42,27,15,19],[43,6,15,21,"setIsLoaded"],[43,17,15,32],[43,20,15,32,"_useState2"],[43,30,15,32],[44,4,16,4],[44,8,16,10,"dataLength"],[44,18,16,20],[44,21,16,23,"recyclerViewManager"],[44,40,16,42],[44,41,16,43,"getDataLength"],[44,54,16,56],[44,55,16,57],[44,56,16,58],[45,4,17,4],[46,4,18,4],[46,8,18,4,"_useUnmountAwareAnima"],[46,29,18,4],[46,32,18,38],[46,36,18,38,"useUnmountAwareAnimationFrame"],[46,61,18,67],[46,62,18,67,"useUnmountAwareAnimationFrame"],[46,91,18,67],[46,93,18,68],[46,94,18,69],[47,6,18,12,"requestAnimationFrame"],[47,27,18,33],[47,30,18,33,"_useUnmountAwareAnima"],[47,51,18,33],[47,52,18,12,"requestAnimationFrame"],[47,73,18,33],[48,4,19,4],[49,4,20,4],[50,4,21,4],[51,4,22,4],[52,4,23,4],[53,4,24,4],[53,8,24,4,"useMemo"],[53,14,24,11],[53,15,24,11,"useMemo"],[53,22,24,11],[53,24,24,12],[53,30,24,18],[54,6,25,8,"loadStartTimeRef"],[54,22,25,24],[54,23,25,25,"current"],[54,30,25,32],[54,33,25,35,"Date"],[54,37,25,39],[54,38,25,40,"now"],[54,41,25,43],[54,42,25,44],[54,43,25,45],[55,6,26,8],[56,4,27,4],[56,5,27,5],[56,7,27,7],[56,8,27,8,"dataLength"],[56,18,27,18],[56,19,27,19],[56,20,27,20],[57,4,28,4,"useOnLoad"],[57,13,28,13],[57,14,28,14,"recyclerViewManager"],[57,33,28,33],[57,35,28,35],[57,41,28,41],[58,6,29,8],[58,10,29,14,"elapsedTimeInMs"],[58,25,29,29],[58,28,29,32,"Date"],[58,32,29,36],[58,33,29,37,"now"],[58,36,29,40],[58,37,29,41],[58,38,29,42],[58,41,29,45,"loadStartTimeRef"],[58,57,29,61],[58,58,29,62,"current"],[58,65,29,69],[59,6,30,8],[60,6,31,8],[61,6,32,8],[62,6,33,8],[63,6,34,8],[64,6,35,8],[65,6,36,8],[66,6,37,8],[67,6,38,8],[68,6,39,8],[69,6,40,8],[70,6,41,8,"requestAnimationFrame"],[70,27,41,29],[70,28,41,30],[70,34,41,36],[71,8,42,12,"recyclerViewManager"],[71,27,42,31],[71,28,42,32,"isFirstPaintOnUiComplete"],[71,52,42,56],[71,55,42,59],[71,59,42,63],[72,8,43,12,"onLoad"],[72,14,43,18],[72,19,43,23],[72,23,43,27],[72,27,43,31,"onLoad"],[72,33,43,37],[72,38,43,42],[72,43,43,47],[72,44,43,48],[72,47,43,51],[72,52,43,56],[72,53,43,57],[72,56,43,60,"onLoad"],[72,62,43,66],[72,63,43,67],[73,10,43,69,"elapsedTimeInMs"],[74,8,43,85],[74,9,43,86],[74,10,43,87],[75,8,44,12,"setIsLoaded"],[75,19,44,23],[75,20,44,24],[75,24,44,28],[75,25,44,29],[76,6,45,8],[76,7,45,9],[76,8,45,10],[77,4,46,4],[77,5,46,5],[77,6,46,6],[78,4,47,4],[78,11,47,11],[79,6,47,13,"isLoaded"],[80,4,47,22],[80,5,47,23],[81,2,48,0],[81,3,48,1],[82,2,49,0],[83,0,50,0],[84,0,51,0],[85,0,52,0],[86,0,53,0],[87,0,54,0],[88,0,55,0],[89,0,56,0],[90,2,57,7],[90,6,57,13,"useOnLoad"],[90,15,57,22],[90,18,57,25,"useOnLoad"],[90,19,57,26,"recyclerViewManager"],[90,38,57,45],[90,40,57,47,"onLoad"],[90,46,57,53],[90,51,57,58],[91,4,58,4],[91,8,58,10,"isLoaded"],[91,16,58,18],[91,19,58,21],[91,23,58,21,"useRef"],[91,29,58,27],[91,30,58,27,"useRef"],[91,36,58,27],[91,38,58,28],[91,43,58,33],[91,44,58,34],[92,4,59,4],[92,8,59,4,"useEffect"],[92,14,59,13],[92,15,59,13,"useEffect"],[92,24,59,13],[92,26,59,14],[92,32,59,20],[93,6,60,8],[94,6,61,8],[94,10,61,12,"recyclerViewManager"],[94,29,61,31],[94,30,61,32,"getIsFirstLayoutComplete"],[94,54,61,56],[94,55,61,57],[94,56,61,58],[94,60,61,62],[94,61,61,63,"isLoaded"],[94,69,61,71],[94,70,61,72,"current"],[94,77,61,79],[94,79,61,81],[95,8,62,12,"isLoaded"],[95,16,62,20],[95,17,62,21,"current"],[95,24,62,28],[95,27,62,31],[95,31,62,35],[96,8,63,12,"onLoad"],[96,14,63,18],[96,15,63,19],[96,16,63,20],[97,6,64,8],[98,4,65,4],[98,5,65,5],[98,6,65,6],[99,2,66,0],[99,3,66,1],[100,0,66,2],[100,3]],"functionMap":{"names":["<global>","useOnListLoad","useMemo$argument_0","useOnLoad$argument_1","requestAnimationFrame$argument_0","useOnLoad","useEffect$argument_0"],"mappings":"AAA;6BCY;YCW;KDG;mCEC;8BCa;SDI;KFC;CDE;yBKS;cCE;KDM;CLC"},"hasCjsExports":false},"type":"js/module"}]}