{"dependencies":[{"name":"../CameraError","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":19,"index":142},"end":{"line":7,"column":44,"index":167}}],"key":"OyHSTdqjVmm47w7H0fMoEbg1uYc=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getCameraFormat = getCameraFormat;\n  var _CameraError = require(_dependencyMap[0], \"../CameraError\");\n  function filtersToFilterMap(filters) {\n    return filters.reduce((map, curr, index) => {\n      for (const key in curr) {\n        // @ts-expect-error keys are untyped\n        map[key] = {\n          // @ts-expect-error keys are untyped\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n          target: curr[key],\n          priority: filters.length - index\n        };\n      }\n      return map;\n    }, {});\n  }\n\n  /**\n   * Get the best matching Camera format for the given device that satisfies your requirements using a sorting filter. By default, formats are sorted by highest to lowest resolution.\n   *\n   * The {@linkcode filters | filters} are ranked by priority, from highest to lowest.\n   * This means the first item you pass will have a higher priority than the second, and so on.\n   *\n   * @param device The Camera Device you're currently using\n   * @param filters The filters you want to use. The format that matches your filter the closest will be returned\n   * @returns The format that matches your filter the closest.\n   *\n   * @example\n   * ```ts\n   * const format = getCameraFormat(device, [\n   *   { videoResolution: { width: 3048, height: 2160 } },\n   *   { fps: 60 }\n   * ])\n   * ```\n   */\n  function getCameraFormat(device, filters) {\n    // Combine filters into a single filter map for constant-time lookup\n    const filter = filtersToFilterMap(filters);\n    let bestFormat = device.formats[0];\n    if (bestFormat == null) throw new _CameraError.CameraRuntimeError('device/invalid-device', `The given Camera Device (${device.id}) does not have any formats!`);\n\n    // Compare each format using a point scoring system\n    for (const format of device.formats) {\n      let leftPoints = 0;\n      let rightPoints = 0;\n\n      // Video Resolution\n      if (filter.videoResolution != null) {\n        const leftVideoResolution = bestFormat.videoWidth * bestFormat.videoHeight;\n        const rightVideoResolution = format.videoWidth * format.videoHeight;\n        if (filter.videoResolution.target === 'max') {\n          // We just want the maximum resolution\n          if (leftVideoResolution > rightVideoResolution) leftPoints += filter.videoResolution.priority;\n          if (rightVideoResolution > leftVideoResolution) rightPoints += filter.videoResolution.priority;\n        } else {\n          // Find video resolution closest to the filter (ignoring orientation)\n          const targetResolution = filter.videoResolution.target.width * filter.videoResolution.target.height;\n          const leftDiff = Math.abs(leftVideoResolution - targetResolution);\n          const rightDiff = Math.abs(rightVideoResolution - targetResolution);\n          if (leftDiff < rightDiff) leftPoints += filter.videoResolution.priority;\n          if (rightDiff < leftDiff) rightPoints += filter.videoResolution.priority;\n        }\n      }\n\n      // Photo Resolution\n      if (filter.photoResolution != null) {\n        const leftPhotoResolution = bestFormat.photoWidth * bestFormat.photoHeight;\n        const rightPhotoResolution = format.photoWidth * format.photoHeight;\n        if (filter.photoResolution.target === 'max') {\n          // We just want the maximum resolution\n          if (leftPhotoResolution > rightPhotoResolution) leftPoints += filter.photoResolution.priority;\n          if (rightPhotoResolution > leftPhotoResolution) rightPoints += filter.photoResolution.priority;\n        } else {\n          // Find closest photo resolution to the filter (ignoring orientation)\n          const targetResolution = filter.photoResolution.target.width * filter.photoResolution.target.height;\n          const leftDiff = Math.abs(leftPhotoResolution - targetResolution);\n          const rightDiff = Math.abs(rightPhotoResolution - targetResolution);\n          if (leftDiff < rightDiff) leftPoints += filter.photoResolution.priority;\n          if (rightDiff < leftDiff) rightPoints += filter.photoResolution.priority;\n        }\n      }\n\n      // Find closest aspect ratio (video)\n      if (filter.videoAspectRatio != null) {\n        const leftAspect = bestFormat.videoWidth / bestFormat.videoHeight;\n        const rightAspect = format.videoWidth / format.videoHeight;\n        const leftDiff = Math.abs(leftAspect - filter.videoAspectRatio.target);\n        const rightDiff = Math.abs(rightAspect - filter.videoAspectRatio.target);\n        if (leftDiff < rightDiff) leftPoints += filter.videoAspectRatio.priority;\n        if (rightDiff < leftDiff) rightPoints += filter.videoAspectRatio.priority;\n      }\n\n      // Find closest aspect ratio (photo)\n      if (filter.photoAspectRatio != null) {\n        const leftAspect = bestFormat.photoWidth / bestFormat.photoHeight;\n        const rightAspect = format.photoWidth / format.photoHeight;\n        const leftDiff = Math.abs(leftAspect - filter.photoAspectRatio.target);\n        const rightDiff = Math.abs(rightAspect - filter.photoAspectRatio.target);\n        if (leftDiff < rightDiff) leftPoints += filter.photoAspectRatio.priority;\n        if (rightDiff < leftDiff) rightPoints += filter.photoAspectRatio.priority;\n      }\n\n      // Find closest max FPS\n      if (filter.fps != null) {\n        if (filter.fps.target === 'max') {\n          if (bestFormat.maxFps > format.maxFps) leftPoints += filter.fps.priority;\n          if (format.maxFps > bestFormat.maxFps) rightPoints += filter.fps.priority;\n        } else {\n          if (bestFormat.maxFps >= filter.fps.target) leftPoints += filter.fps.priority;\n          if (format.maxFps >= filter.fps.target) rightPoints += filter.fps.priority;\n        }\n      }\n\n      // Find closest ISO\n      if (filter.iso != null) {\n        if (filter.iso.target === 'max') {\n          if (bestFormat.maxISO > format.maxISO) leftPoints += filter.iso.priority;\n          if (format.maxISO > bestFormat.maxISO) rightPoints += filter.iso.priority;\n        } else if (filter.iso.target === 'min') {\n          if (bestFormat.minISO < format.minISO) leftPoints += filter.iso.priority;\n          if (format.minISO < bestFormat.minISO) rightPoints += filter.iso.priority;\n        } else {\n          if (filter.iso.target >= bestFormat.minISO && filter.iso.target <= bestFormat.maxISO) leftPoints += filter.iso.priority;\n          if (filter.iso.target >= format.minISO && filter.iso.target <= format.maxISO) rightPoints += filter.iso.priority;\n        }\n      }\n\n      // Find video stabilization mode\n      if (filter.videoStabilizationMode != null) {\n        if (bestFormat.videoStabilizationModes.includes(filter.videoStabilizationMode.target)) leftPoints += filter.videoStabilizationMode.priority;\n        if (format.videoStabilizationModes.includes(filter.videoStabilizationMode.target)) rightPoints += filter.videoStabilizationMode.priority;\n      }\n\n      // Find Photo HDR formats\n      if (filter.photoHdr != null) {\n        if (bestFormat.supportsPhotoHdr === filter.photoHdr.target) leftPoints += filter.photoHdr.priority;\n        if (format.supportsPhotoHdr === filter.photoHdr.target) rightPoints += filter.photoHdr.priority;\n      }\n\n      // Find Video HDR formats\n      if (filter.videoHdr != null) {\n        if (bestFormat.supportsVideoHdr === filter.videoHdr.target) leftPoints += filter.videoHdr.priority;\n        if (format.supportsVideoHdr === filter.videoHdr.target) rightPoints += filter.videoHdr.priority;\n      }\n\n      // Find matching AF system\n      if (filter.autoFocusSystem != null) {\n        if (bestFormat.autoFocusSystem === filter.autoFocusSystem.target) leftPoints += filter.autoFocusSystem.priority;\n        if (format.autoFocusSystem === filter.autoFocusSystem.target) rightPoints += filter.autoFocusSystem.priority;\n      }\n      if (rightPoints > leftPoints) bestFormat = format;\n    }\n    return bestFormat;\n  }\n});","lineCount":161,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"getCameraFormat"],[7,25,6,23],[7,28,6,26,"getCameraFormat"],[7,43,6,41],[8,2,7,0],[8,6,7,4,"_CameraError"],[8,18,7,16],[8,21,7,19,"require"],[8,28,7,26],[8,29,7,26,"_dependencyMap"],[8,43,7,26],[8,64,7,43],[8,65,7,44],[9,2,8,0],[9,11,8,9,"filtersToFilterMap"],[9,29,8,27,"filtersToFilterMap"],[9,30,8,28,"filters"],[9,37,8,35],[9,39,8,37],[10,4,9,2],[10,11,9,9,"filters"],[10,18,9,16],[10,19,9,17,"reduce"],[10,25,9,23],[10,26,9,24],[10,27,9,25,"map"],[10,30,9,28],[10,32,9,30,"curr"],[10,36,9,34],[10,38,9,36,"index"],[10,43,9,41],[10,48,9,46],[11,6,10,4],[11,11,10,9],[11,17,10,15,"key"],[11,20,10,18],[11,24,10,22,"curr"],[11,28,10,26],[11,30,10,28],[12,8,11,6],[13,8,12,6,"map"],[13,11,12,9],[13,12,12,10,"key"],[13,15,12,13],[13,16,12,14],[13,19,12,17],[14,10,13,8],[15,10,14,8],[16,10,15,8,"target"],[16,16,15,14],[16,18,15,16,"curr"],[16,22,15,20],[16,23,15,21,"key"],[16,26,15,24],[16,27,15,25],[17,10,16,8,"priority"],[17,18,16,16],[17,20,16,18,"filters"],[17,27,16,25],[17,28,16,26,"length"],[17,34,16,32],[17,37,16,35,"index"],[18,8,17,6],[18,9,17,7],[19,6,18,4],[20,6,19,4],[20,13,19,11,"map"],[20,16,19,14],[21,4,20,2],[21,5,20,3],[21,7,20,5],[21,8,20,6],[21,9,20,7],[21,10,20,8],[22,2,21,0],[24,2,23,0],[25,0,24,0],[26,0,25,0],[27,0,26,0],[28,0,27,0],[29,0,28,0],[30,0,29,0],[31,0,30,0],[32,0,31,0],[33,0,32,0],[34,0,33,0],[35,0,34,0],[36,0,35,0],[37,0,36,0],[38,0,37,0],[39,0,38,0],[40,0,39,0],[41,0,40,0],[42,2,41,0],[42,11,41,9,"getCameraFormat"],[42,26,41,24,"getCameraFormat"],[42,27,41,25,"device"],[42,33,41,31],[42,35,41,33,"filters"],[42,42,41,40],[42,44,41,42],[43,4,42,2],[44,4,43,2],[44,10,43,8,"filter"],[44,16,43,14],[44,19,43,17,"filtersToFilterMap"],[44,37,43,35],[44,38,43,36,"filters"],[44,45,43,43],[44,46,43,44],[45,4,44,2],[45,8,44,6,"bestFormat"],[45,18,44,16],[45,21,44,19,"device"],[45,27,44,25],[45,28,44,26,"formats"],[45,35,44,33],[45,36,44,34],[45,37,44,35],[45,38,44,36],[46,4,45,2],[46,8,45,6,"bestFormat"],[46,18,45,16],[46,22,45,20],[46,26,45,24],[46,28,45,26],[46,34,45,32],[46,38,45,36,"_CameraError"],[46,50,45,48],[46,51,45,49,"CameraRuntimeError"],[46,69,45,67],[46,70,45,68],[46,93,45,91],[46,95,45,93],[46,123,45,121,"device"],[46,129,45,127],[46,130,45,128,"id"],[46,132,45,130],[46,162,45,160],[46,163,45,161],[48,4,47,2],[49,4,48,2],[49,9,48,7],[49,15,48,13,"format"],[49,21,48,19],[49,25,48,23,"device"],[49,31,48,29],[49,32,48,30,"formats"],[49,39,48,37],[49,41,48,39],[50,6,49,4],[50,10,49,8,"leftPoints"],[50,20,49,18],[50,23,49,21],[50,24,49,22],[51,6,50,4],[51,10,50,8,"rightPoints"],[51,21,50,19],[51,24,50,22],[51,25,50,23],[53,6,52,4],[54,6,53,4],[54,10,53,8,"filter"],[54,16,53,14],[54,17,53,15,"videoResolution"],[54,32,53,30],[54,36,53,34],[54,40,53,38],[54,42,53,40],[55,8,54,6],[55,14,54,12,"leftVideoResolution"],[55,33,54,31],[55,36,54,34,"bestFormat"],[55,46,54,44],[55,47,54,45,"videoWidth"],[55,57,54,55],[55,60,54,58,"bestFormat"],[55,70,54,68],[55,71,54,69,"videoHeight"],[55,82,54,80],[56,8,55,6],[56,14,55,12,"rightVideoResolution"],[56,34,55,32],[56,37,55,35,"format"],[56,43,55,41],[56,44,55,42,"videoWidth"],[56,54,55,52],[56,57,55,55,"format"],[56,63,55,61],[56,64,55,62,"videoHeight"],[56,75,55,73],[57,8,56,6],[57,12,56,10,"filter"],[57,18,56,16],[57,19,56,17,"videoResolution"],[57,34,56,32],[57,35,56,33,"target"],[57,41,56,39],[57,46,56,44],[57,51,56,49],[57,53,56,51],[58,10,57,8],[59,10,58,8],[59,14,58,12,"leftVideoResolution"],[59,33,58,31],[59,36,58,34,"rightVideoResolution"],[59,56,58,54],[59,58,58,56,"leftPoints"],[59,68,58,66],[59,72,58,70,"filter"],[59,78,58,76],[59,79,58,77,"videoResolution"],[59,94,58,92],[59,95,58,93,"priority"],[59,103,58,101],[60,10,59,8],[60,14,59,12,"rightVideoResolution"],[60,34,59,32],[60,37,59,35,"leftVideoResolution"],[60,56,59,54],[60,58,59,56,"rightPoints"],[60,69,59,67],[60,73,59,71,"filter"],[60,79,59,77],[60,80,59,78,"videoResolution"],[60,95,59,93],[60,96,59,94,"priority"],[60,104,59,102],[61,8,60,6],[61,9,60,7],[61,15,60,13],[62,10,61,8],[63,10,62,8],[63,16,62,14,"targetResolution"],[63,32,62,30],[63,35,62,33,"filter"],[63,41,62,39],[63,42,62,40,"videoResolution"],[63,57,62,55],[63,58,62,56,"target"],[63,64,62,62],[63,65,62,63,"width"],[63,70,62,68],[63,73,62,71,"filter"],[63,79,62,77],[63,80,62,78,"videoResolution"],[63,95,62,93],[63,96,62,94,"target"],[63,102,62,100],[63,103,62,101,"height"],[63,109,62,107],[64,10,63,8],[64,16,63,14,"leftDiff"],[64,24,63,22],[64,27,63,25,"Math"],[64,31,63,29],[64,32,63,30,"abs"],[64,35,63,33],[64,36,63,34,"leftVideoResolution"],[64,55,63,53],[64,58,63,56,"targetResolution"],[64,74,63,72],[64,75,63,73],[65,10,64,8],[65,16,64,14,"rightDiff"],[65,25,64,23],[65,28,64,26,"Math"],[65,32,64,30],[65,33,64,31,"abs"],[65,36,64,34],[65,37,64,35,"rightVideoResolution"],[65,57,64,55],[65,60,64,58,"targetResolution"],[65,76,64,74],[65,77,64,75],[66,10,65,8],[66,14,65,12,"leftDiff"],[66,22,65,20],[66,25,65,23,"rightDiff"],[66,34,65,32],[66,36,65,34,"leftPoints"],[66,46,65,44],[66,50,65,48,"filter"],[66,56,65,54],[66,57,65,55,"videoResolution"],[66,72,65,70],[66,73,65,71,"priority"],[66,81,65,79],[67,10,66,8],[67,14,66,12,"rightDiff"],[67,23,66,21],[67,26,66,24,"leftDiff"],[67,34,66,32],[67,36,66,34,"rightPoints"],[67,47,66,45],[67,51,66,49,"filter"],[67,57,66,55],[67,58,66,56,"videoResolution"],[67,73,66,71],[67,74,66,72,"priority"],[67,82,66,80],[68,8,67,6],[69,6,68,4],[71,6,70,4],[72,6,71,4],[72,10,71,8,"filter"],[72,16,71,14],[72,17,71,15,"photoResolution"],[72,32,71,30],[72,36,71,34],[72,40,71,38],[72,42,71,40],[73,8,72,6],[73,14,72,12,"leftPhotoResolution"],[73,33,72,31],[73,36,72,34,"bestFormat"],[73,46,72,44],[73,47,72,45,"photoWidth"],[73,57,72,55],[73,60,72,58,"bestFormat"],[73,70,72,68],[73,71,72,69,"photoHeight"],[73,82,72,80],[74,8,73,6],[74,14,73,12,"rightPhotoResolution"],[74,34,73,32],[74,37,73,35,"format"],[74,43,73,41],[74,44,73,42,"photoWidth"],[74,54,73,52],[74,57,73,55,"format"],[74,63,73,61],[74,64,73,62,"photoHeight"],[74,75,73,73],[75,8,74,6],[75,12,74,10,"filter"],[75,18,74,16],[75,19,74,17,"photoResolution"],[75,34,74,32],[75,35,74,33,"target"],[75,41,74,39],[75,46,74,44],[75,51,74,49],[75,53,74,51],[76,10,75,8],[77,10,76,8],[77,14,76,12,"leftPhotoResolution"],[77,33,76,31],[77,36,76,34,"rightPhotoResolution"],[77,56,76,54],[77,58,76,56,"leftPoints"],[77,68,76,66],[77,72,76,70,"filter"],[77,78,76,76],[77,79,76,77,"photoResolution"],[77,94,76,92],[77,95,76,93,"priority"],[77,103,76,101],[78,10,77,8],[78,14,77,12,"rightPhotoResolution"],[78,34,77,32],[78,37,77,35,"leftPhotoResolution"],[78,56,77,54],[78,58,77,56,"rightPoints"],[78,69,77,67],[78,73,77,71,"filter"],[78,79,77,77],[78,80,77,78,"photoResolution"],[78,95,77,93],[78,96,77,94,"priority"],[78,104,77,102],[79,8,78,6],[79,9,78,7],[79,15,78,13],[80,10,79,8],[81,10,80,8],[81,16,80,14,"targetResolution"],[81,32,80,30],[81,35,80,33,"filter"],[81,41,80,39],[81,42,80,40,"photoResolution"],[81,57,80,55],[81,58,80,56,"target"],[81,64,80,62],[81,65,80,63,"width"],[81,70,80,68],[81,73,80,71,"filter"],[81,79,80,77],[81,80,80,78,"photoResolution"],[81,95,80,93],[81,96,80,94,"target"],[81,102,80,100],[81,103,80,101,"height"],[81,109,80,107],[82,10,81,8],[82,16,81,14,"leftDiff"],[82,24,81,22],[82,27,81,25,"Math"],[82,31,81,29],[82,32,81,30,"abs"],[82,35,81,33],[82,36,81,34,"leftPhotoResolution"],[82,55,81,53],[82,58,81,56,"targetResolution"],[82,74,81,72],[82,75,81,73],[83,10,82,8],[83,16,82,14,"rightDiff"],[83,25,82,23],[83,28,82,26,"Math"],[83,32,82,30],[83,33,82,31,"abs"],[83,36,82,34],[83,37,82,35,"rightPhotoResolution"],[83,57,82,55],[83,60,82,58,"targetResolution"],[83,76,82,74],[83,77,82,75],[84,10,83,8],[84,14,83,12,"leftDiff"],[84,22,83,20],[84,25,83,23,"rightDiff"],[84,34,83,32],[84,36,83,34,"leftPoints"],[84,46,83,44],[84,50,83,48,"filter"],[84,56,83,54],[84,57,83,55,"photoResolution"],[84,72,83,70],[84,73,83,71,"priority"],[84,81,83,79],[85,10,84,8],[85,14,84,12,"rightDiff"],[85,23,84,21],[85,26,84,24,"leftDiff"],[85,34,84,32],[85,36,84,34,"rightPoints"],[85,47,84,45],[85,51,84,49,"filter"],[85,57,84,55],[85,58,84,56,"photoResolution"],[85,73,84,71],[85,74,84,72,"priority"],[85,82,84,80],[86,8,85,6],[87,6,86,4],[89,6,88,4],[90,6,89,4],[90,10,89,8,"filter"],[90,16,89,14],[90,17,89,15,"videoAspectRatio"],[90,33,89,31],[90,37,89,35],[90,41,89,39],[90,43,89,41],[91,8,90,6],[91,14,90,12,"leftAspect"],[91,24,90,22],[91,27,90,25,"bestFormat"],[91,37,90,35],[91,38,90,36,"videoWidth"],[91,48,90,46],[91,51,90,49,"bestFormat"],[91,61,90,59],[91,62,90,60,"videoHeight"],[91,73,90,71],[92,8,91,6],[92,14,91,12,"rightAspect"],[92,25,91,23],[92,28,91,26,"format"],[92,34,91,32],[92,35,91,33,"videoWidth"],[92,45,91,43],[92,48,91,46,"format"],[92,54,91,52],[92,55,91,53,"videoHeight"],[92,66,91,64],[93,8,92,6],[93,14,92,12,"leftDiff"],[93,22,92,20],[93,25,92,23,"Math"],[93,29,92,27],[93,30,92,28,"abs"],[93,33,92,31],[93,34,92,32,"leftAspect"],[93,44,92,42],[93,47,92,45,"filter"],[93,53,92,51],[93,54,92,52,"videoAspectRatio"],[93,70,92,68],[93,71,92,69,"target"],[93,77,92,75],[93,78,92,76],[94,8,93,6],[94,14,93,12,"rightDiff"],[94,23,93,21],[94,26,93,24,"Math"],[94,30,93,28],[94,31,93,29,"abs"],[94,34,93,32],[94,35,93,33,"rightAspect"],[94,46,93,44],[94,49,93,47,"filter"],[94,55,93,53],[94,56,93,54,"videoAspectRatio"],[94,72,93,70],[94,73,93,71,"target"],[94,79,93,77],[94,80,93,78],[95,8,94,6],[95,12,94,10,"leftDiff"],[95,20,94,18],[95,23,94,21,"rightDiff"],[95,32,94,30],[95,34,94,32,"leftPoints"],[95,44,94,42],[95,48,94,46,"filter"],[95,54,94,52],[95,55,94,53,"videoAspectRatio"],[95,71,94,69],[95,72,94,70,"priority"],[95,80,94,78],[96,8,95,6],[96,12,95,10,"rightDiff"],[96,21,95,19],[96,24,95,22,"leftDiff"],[96,32,95,30],[96,34,95,32,"rightPoints"],[96,45,95,43],[96,49,95,47,"filter"],[96,55,95,53],[96,56,95,54,"videoAspectRatio"],[96,72,95,70],[96,73,95,71,"priority"],[96,81,95,79],[97,6,96,4],[99,6,98,4],[100,6,99,4],[100,10,99,8,"filter"],[100,16,99,14],[100,17,99,15,"photoAspectRatio"],[100,33,99,31],[100,37,99,35],[100,41,99,39],[100,43,99,41],[101,8,100,6],[101,14,100,12,"leftAspect"],[101,24,100,22],[101,27,100,25,"bestFormat"],[101,37,100,35],[101,38,100,36,"photoWidth"],[101,48,100,46],[101,51,100,49,"bestFormat"],[101,61,100,59],[101,62,100,60,"photoHeight"],[101,73,100,71],[102,8,101,6],[102,14,101,12,"rightAspect"],[102,25,101,23],[102,28,101,26,"format"],[102,34,101,32],[102,35,101,33,"photoWidth"],[102,45,101,43],[102,48,101,46,"format"],[102,54,101,52],[102,55,101,53,"photoHeight"],[102,66,101,64],[103,8,102,6],[103,14,102,12,"leftDiff"],[103,22,102,20],[103,25,102,23,"Math"],[103,29,102,27],[103,30,102,28,"abs"],[103,33,102,31],[103,34,102,32,"leftAspect"],[103,44,102,42],[103,47,102,45,"filter"],[103,53,102,51],[103,54,102,52,"photoAspectRatio"],[103,70,102,68],[103,71,102,69,"target"],[103,77,102,75],[103,78,102,76],[104,8,103,6],[104,14,103,12,"rightDiff"],[104,23,103,21],[104,26,103,24,"Math"],[104,30,103,28],[104,31,103,29,"abs"],[104,34,103,32],[104,35,103,33,"rightAspect"],[104,46,103,44],[104,49,103,47,"filter"],[104,55,103,53],[104,56,103,54,"photoAspectRatio"],[104,72,103,70],[104,73,103,71,"target"],[104,79,103,77],[104,80,103,78],[105,8,104,6],[105,12,104,10,"leftDiff"],[105,20,104,18],[105,23,104,21,"rightDiff"],[105,32,104,30],[105,34,104,32,"leftPoints"],[105,44,104,42],[105,48,104,46,"filter"],[105,54,104,52],[105,55,104,53,"photoAspectRatio"],[105,71,104,69],[105,72,104,70,"priority"],[105,80,104,78],[106,8,105,6],[106,12,105,10,"rightDiff"],[106,21,105,19],[106,24,105,22,"leftDiff"],[106,32,105,30],[106,34,105,32,"rightPoints"],[106,45,105,43],[106,49,105,47,"filter"],[106,55,105,53],[106,56,105,54,"photoAspectRatio"],[106,72,105,70],[106,73,105,71,"priority"],[106,81,105,79],[107,6,106,4],[109,6,108,4],[110,6,109,4],[110,10,109,8,"filter"],[110,16,109,14],[110,17,109,15,"fps"],[110,20,109,18],[110,24,109,22],[110,28,109,26],[110,30,109,28],[111,8,110,6],[111,12,110,10,"filter"],[111,18,110,16],[111,19,110,17,"fps"],[111,22,110,20],[111,23,110,21,"target"],[111,29,110,27],[111,34,110,32],[111,39,110,37],[111,41,110,39],[112,10,111,8],[112,14,111,12,"bestFormat"],[112,24,111,22],[112,25,111,23,"maxFps"],[112,31,111,29],[112,34,111,32,"format"],[112,40,111,38],[112,41,111,39,"maxFps"],[112,47,111,45],[112,49,111,47,"leftPoints"],[112,59,111,57],[112,63,111,61,"filter"],[112,69,111,67],[112,70,111,68,"fps"],[112,73,111,71],[112,74,111,72,"priority"],[112,82,111,80],[113,10,112,8],[113,14,112,12,"format"],[113,20,112,18],[113,21,112,19,"maxFps"],[113,27,112,25],[113,30,112,28,"bestFormat"],[113,40,112,38],[113,41,112,39,"maxFps"],[113,47,112,45],[113,49,112,47,"rightPoints"],[113,60,112,58],[113,64,112,62,"filter"],[113,70,112,68],[113,71,112,69,"fps"],[113,74,112,72],[113,75,112,73,"priority"],[113,83,112,81],[114,8,113,6],[114,9,113,7],[114,15,113,13],[115,10,114,8],[115,14,114,12,"bestFormat"],[115,24,114,22],[115,25,114,23,"maxFps"],[115,31,114,29],[115,35,114,33,"filter"],[115,41,114,39],[115,42,114,40,"fps"],[115,45,114,43],[115,46,114,44,"target"],[115,52,114,50],[115,54,114,52,"leftPoints"],[115,64,114,62],[115,68,114,66,"filter"],[115,74,114,72],[115,75,114,73,"fps"],[115,78,114,76],[115,79,114,77,"priority"],[115,87,114,85],[116,10,115,8],[116,14,115,12,"format"],[116,20,115,18],[116,21,115,19,"maxFps"],[116,27,115,25],[116,31,115,29,"filter"],[116,37,115,35],[116,38,115,36,"fps"],[116,41,115,39],[116,42,115,40,"target"],[116,48,115,46],[116,50,115,48,"rightPoints"],[116,61,115,59],[116,65,115,63,"filter"],[116,71,115,69],[116,72,115,70,"fps"],[116,75,115,73],[116,76,115,74,"priority"],[116,84,115,82],[117,8,116,6],[118,6,117,4],[120,6,119,4],[121,6,120,4],[121,10,120,8,"filter"],[121,16,120,14],[121,17,120,15,"iso"],[121,20,120,18],[121,24,120,22],[121,28,120,26],[121,30,120,28],[122,8,121,6],[122,12,121,10,"filter"],[122,18,121,16],[122,19,121,17,"iso"],[122,22,121,20],[122,23,121,21,"target"],[122,29,121,27],[122,34,121,32],[122,39,121,37],[122,41,121,39],[123,10,122,8],[123,14,122,12,"bestFormat"],[123,24,122,22],[123,25,122,23,"maxISO"],[123,31,122,29],[123,34,122,32,"format"],[123,40,122,38],[123,41,122,39,"maxISO"],[123,47,122,45],[123,49,122,47,"leftPoints"],[123,59,122,57],[123,63,122,61,"filter"],[123,69,122,67],[123,70,122,68,"iso"],[123,73,122,71],[123,74,122,72,"priority"],[123,82,122,80],[124,10,123,8],[124,14,123,12,"format"],[124,20,123,18],[124,21,123,19,"maxISO"],[124,27,123,25],[124,30,123,28,"bestFormat"],[124,40,123,38],[124,41,123,39,"maxISO"],[124,47,123,45],[124,49,123,47,"rightPoints"],[124,60,123,58],[124,64,123,62,"filter"],[124,70,123,68],[124,71,123,69,"iso"],[124,74,123,72],[124,75,123,73,"priority"],[124,83,123,81],[125,8,124,6],[125,9,124,7],[125,15,124,13],[125,19,124,17,"filter"],[125,25,124,23],[125,26,124,24,"iso"],[125,29,124,27],[125,30,124,28,"target"],[125,36,124,34],[125,41,124,39],[125,46,124,44],[125,48,124,46],[126,10,125,8],[126,14,125,12,"bestFormat"],[126,24,125,22],[126,25,125,23,"minISO"],[126,31,125,29],[126,34,125,32,"format"],[126,40,125,38],[126,41,125,39,"minISO"],[126,47,125,45],[126,49,125,47,"leftPoints"],[126,59,125,57],[126,63,125,61,"filter"],[126,69,125,67],[126,70,125,68,"iso"],[126,73,125,71],[126,74,125,72,"priority"],[126,82,125,80],[127,10,126,8],[127,14,126,12,"format"],[127,20,126,18],[127,21,126,19,"minISO"],[127,27,126,25],[127,30,126,28,"bestFormat"],[127,40,126,38],[127,41,126,39,"minISO"],[127,47,126,45],[127,49,126,47,"rightPoints"],[127,60,126,58],[127,64,126,62,"filter"],[127,70,126,68],[127,71,126,69,"iso"],[127,74,126,72],[127,75,126,73,"priority"],[127,83,126,81],[128,8,127,6],[128,9,127,7],[128,15,127,13],[129,10,128,8],[129,14,128,12,"filter"],[129,20,128,18],[129,21,128,19,"iso"],[129,24,128,22],[129,25,128,23,"target"],[129,31,128,29],[129,35,128,33,"bestFormat"],[129,45,128,43],[129,46,128,44,"minISO"],[129,52,128,50],[129,56,128,54,"filter"],[129,62,128,60],[129,63,128,61,"iso"],[129,66,128,64],[129,67,128,65,"target"],[129,73,128,71],[129,77,128,75,"bestFormat"],[129,87,128,85],[129,88,128,86,"maxISO"],[129,94,128,92],[129,96,128,94,"leftPoints"],[129,106,128,104],[129,110,128,108,"filter"],[129,116,128,114],[129,117,128,115,"iso"],[129,120,128,118],[129,121,128,119,"priority"],[129,129,128,127],[130,10,129,8],[130,14,129,12,"filter"],[130,20,129,18],[130,21,129,19,"iso"],[130,24,129,22],[130,25,129,23,"target"],[130,31,129,29],[130,35,129,33,"format"],[130,41,129,39],[130,42,129,40,"minISO"],[130,48,129,46],[130,52,129,50,"filter"],[130,58,129,56],[130,59,129,57,"iso"],[130,62,129,60],[130,63,129,61,"target"],[130,69,129,67],[130,73,129,71,"format"],[130,79,129,77],[130,80,129,78,"maxISO"],[130,86,129,84],[130,88,129,86,"rightPoints"],[130,99,129,97],[130,103,129,101,"filter"],[130,109,129,107],[130,110,129,108,"iso"],[130,113,129,111],[130,114,129,112,"priority"],[130,122,129,120],[131,8,130,6],[132,6,131,4],[134,6,133,4],[135,6,134,4],[135,10,134,8,"filter"],[135,16,134,14],[135,17,134,15,"videoStabilizationMode"],[135,39,134,37],[135,43,134,41],[135,47,134,45],[135,49,134,47],[136,8,135,6],[136,12,135,10,"bestFormat"],[136,22,135,20],[136,23,135,21,"videoStabilizationModes"],[136,46,135,44],[136,47,135,45,"includes"],[136,55,135,53],[136,56,135,54,"filter"],[136,62,135,60],[136,63,135,61,"videoStabilizationMode"],[136,85,135,83],[136,86,135,84,"target"],[136,92,135,90],[136,93,135,91],[136,95,135,93,"leftPoints"],[136,105,135,103],[136,109,135,107,"filter"],[136,115,135,113],[136,116,135,114,"videoStabilizationMode"],[136,138,135,136],[136,139,135,137,"priority"],[136,147,135,145],[137,8,136,6],[137,12,136,10,"format"],[137,18,136,16],[137,19,136,17,"videoStabilizationModes"],[137,42,136,40],[137,43,136,41,"includes"],[137,51,136,49],[137,52,136,50,"filter"],[137,58,136,56],[137,59,136,57,"videoStabilizationMode"],[137,81,136,79],[137,82,136,80,"target"],[137,88,136,86],[137,89,136,87],[137,91,136,89,"rightPoints"],[137,102,136,100],[137,106,136,104,"filter"],[137,112,136,110],[137,113,136,111,"videoStabilizationMode"],[137,135,136,133],[137,136,136,134,"priority"],[137,144,136,142],[138,6,137,4],[140,6,139,4],[141,6,140,4],[141,10,140,8,"filter"],[141,16,140,14],[141,17,140,15,"photoHdr"],[141,25,140,23],[141,29,140,27],[141,33,140,31],[141,35,140,33],[142,8,141,6],[142,12,141,10,"bestFormat"],[142,22,141,20],[142,23,141,21,"supportsPhotoHdr"],[142,39,141,37],[142,44,141,42,"filter"],[142,50,141,48],[142,51,141,49,"photoHdr"],[142,59,141,57],[142,60,141,58,"target"],[142,66,141,64],[142,68,141,66,"leftPoints"],[142,78,141,76],[142,82,141,80,"filter"],[142,88,141,86],[142,89,141,87,"photoHdr"],[142,97,141,95],[142,98,141,96,"priority"],[142,106,141,104],[143,8,142,6],[143,12,142,10,"format"],[143,18,142,16],[143,19,142,17,"supportsPhotoHdr"],[143,35,142,33],[143,40,142,38,"filter"],[143,46,142,44],[143,47,142,45,"photoHdr"],[143,55,142,53],[143,56,142,54,"target"],[143,62,142,60],[143,64,142,62,"rightPoints"],[143,75,142,73],[143,79,142,77,"filter"],[143,85,142,83],[143,86,142,84,"photoHdr"],[143,94,142,92],[143,95,142,93,"priority"],[143,103,142,101],[144,6,143,4],[146,6,145,4],[147,6,146,4],[147,10,146,8,"filter"],[147,16,146,14],[147,17,146,15,"videoHdr"],[147,25,146,23],[147,29,146,27],[147,33,146,31],[147,35,146,33],[148,8,147,6],[148,12,147,10,"bestFormat"],[148,22,147,20],[148,23,147,21,"supportsVideoHdr"],[148,39,147,37],[148,44,147,42,"filter"],[148,50,147,48],[148,51,147,49,"videoHdr"],[148,59,147,57],[148,60,147,58,"target"],[148,66,147,64],[148,68,147,66,"leftPoints"],[148,78,147,76],[148,82,147,80,"filter"],[148,88,147,86],[148,89,147,87,"videoHdr"],[148,97,147,95],[148,98,147,96,"priority"],[148,106,147,104],[149,8,148,6],[149,12,148,10,"format"],[149,18,148,16],[149,19,148,17,"supportsVideoHdr"],[149,35,148,33],[149,40,148,38,"filter"],[149,46,148,44],[149,47,148,45,"videoHdr"],[149,55,148,53],[149,56,148,54,"target"],[149,62,148,60],[149,64,148,62,"rightPoints"],[149,75,148,73],[149,79,148,77,"filter"],[149,85,148,83],[149,86,148,84,"videoHdr"],[149,94,148,92],[149,95,148,93,"priority"],[149,103,148,101],[150,6,149,4],[152,6,151,4],[153,6,152,4],[153,10,152,8,"filter"],[153,16,152,14],[153,17,152,15,"autoFocusSystem"],[153,32,152,30],[153,36,152,34],[153,40,152,38],[153,42,152,40],[154,8,153,6],[154,12,153,10,"bestFormat"],[154,22,153,20],[154,23,153,21,"autoFocusSystem"],[154,38,153,36],[154,43,153,41,"filter"],[154,49,153,47],[154,50,153,48,"autoFocusSystem"],[154,65,153,63],[154,66,153,64,"target"],[154,72,153,70],[154,74,153,72,"leftPoints"],[154,84,153,82],[154,88,153,86,"filter"],[154,94,153,92],[154,95,153,93,"autoFocusSystem"],[154,110,153,108],[154,111,153,109,"priority"],[154,119,153,117],[155,8,154,6],[155,12,154,10,"format"],[155,18,154,16],[155,19,154,17,"autoFocusSystem"],[155,34,154,32],[155,39,154,37,"filter"],[155,45,154,43],[155,46,154,44,"autoFocusSystem"],[155,61,154,59],[155,62,154,60,"target"],[155,68,154,66],[155,70,154,68,"rightPoints"],[155,81,154,79],[155,85,154,83,"filter"],[155,91,154,89],[155,92,154,90,"autoFocusSystem"],[155,107,154,105],[155,108,154,106,"priority"],[155,116,154,114],[156,6,155,4],[157,6,156,4],[157,10,156,8,"rightPoints"],[157,21,156,19],[157,24,156,22,"leftPoints"],[157,34,156,32],[157,36,156,34,"bestFormat"],[157,46,156,44],[157,49,156,47,"format"],[157,55,156,53],[158,4,157,2],[159,4,158,2],[159,11,158,9,"bestFormat"],[159,21,158,19],[160,2,159,0],[161,0,159,1],[161,3]],"functionMap":{"names":["<global>","filtersToFilterMap","filters.reduce$argument_0","getCameraFormat"],"mappings":"AAA;ACO;wBCC;GDW;CDC;AGoB;CHsH"},"hasCjsExports":true},"type":"js/module"}]}