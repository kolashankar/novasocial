{"dependencies":[{"name":"../dependencies/WorkletsProxy","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":21,"index":130},"end":{"line":7,"column":61,"index":170}}],"key":"5i1rEhCv+YOz7EImowzwFcR4T4A=","exportNames":["*"],"imports":1}},{"name":"./FrameProcessorsUnavailableError","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":39,"index":211},"end":{"line":8,"column":83,"index":255}}],"key":"OJsVqJTQyEgOCJhejOnxd4h1UlM=","exportNames":["*"],"imports":1}},{"name":"./throwErrorOnJS","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":22,"index":279},"end":{"line":9,"column":49,"index":306}}],"key":"jZBEYCisF2YZxlHWvqCZx3VF08I=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.runAsync = runAsync;\n  var _WorkletsProxy = require(_dependencyMap[0], \"../dependencies/WorkletsProxy\");\n  var _FrameProcessorsUnavailableError = require(_dependencyMap[1], \"./FrameProcessorsUnavailableError\");\n  var _throwErrorOnJS = require(_dependencyMap[2], \"./throwErrorOnJS\");\n  /**\n   * A synchronized Shared Value to indicate whether the async context is currently executing\n   */\n  let isAsyncContextBusy;\n  /**\n   * Runs the given function on the async context, and sets {@linkcode isAsyncContextBusy} to false after it finished executing.\n   */\n  let runOnAsyncContext;\n  const _worklet_14389502829438_init_data = {\n    code: \"function reactNativeVisionCamera_runAsyncJs1(frame,func){const{_throwErrorOnJS,isAsyncContextBusy}=this.__closure;try{func();}catch(e){(0,_throwErrorOnJS.throwErrorOnJS)(e);}finally{const internal=frame;internal.decrementRefCount();isAsyncContextBusy.value=false;}}\",\n    location: \"/app/frontend/node_modules/react-native-vision-camera/lib/commonjs/frame-processors/runAsync.js\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reactNativeVisionCamera_runAsyncJs1\\\",\\\"frame\\\",\\\"func\\\",\\\"_throwErrorOnJS\\\",\\\"isAsyncContextBusy\\\",\\\"__closure\\\",\\\"e\\\",\\\"throwErrorOnJS\\\",\\\"internal\\\",\\\"decrementRefCount\\\",\\\"value\\\"],\\\"sources\\\":[\\\"/app/frontend/node_modules/react-native-vision-camera/lib/commonjs/frame-processors/runAsync.js\\\"],\\\"mappings\\\":\\\"AAqBkD,QAAC,CAAAA,mCAAgBA,CAAAC,KAAA,CAAAC,IAAA,QAAAC,eAAA,CAAAC,kBAAA,OAAAC,SAAA,CAG/D,GAAI,CAEFH,IAAI,CAAC,CAAC,CACR,CAAE,MAAOI,CAAC,CAAE,CAEV,CAAC,CAAC,CAAEH,eAAe,CAACI,cAAc,EAAED,CAAC,CAAC,CACxC,CAAC,OAAS,CAER,KAAM,CAAAE,QAAQ,CAAGP,KAAK,CACtBO,QAAQ,CAACC,iBAAiB,CAAC,CAAC,CAG5BL,kBAAkB,CAACM,KAAK,CAAG,KAAK,CAClC,CACF\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  try {\n    const Worklets = _WorkletsProxy.WorkletsProxy.Worklets;\n    isAsyncContextBusy = Worklets.createSharedValue(false);\n    const asyncContext = Worklets.createContext('VisionCamera.async');\n    runOnAsyncContext = asyncContext.createRunAsync(function () {\n      const _e = [new global.Error(), -3, -27];\n      const reactNativeVisionCamera_runAsyncJs1 = function (frame, func) {\n        try {\n          // Call long-running function\n          func();\n        } catch (e) {\n          // Re-throw error on JS Thread\n          (0, _throwErrorOnJS.throwErrorOnJS)(e);\n        } finally {\n          // Potentially delete Frame if we were the last ref\n          const internal = frame;\n          internal.decrementRefCount();\n\n          // free up async context again, new calls can be made\n          isAsyncContextBusy.value = false;\n        }\n      };\n      reactNativeVisionCamera_runAsyncJs1.__closure = {\n        _throwErrorOnJS,\n        isAsyncContextBusy\n      };\n      reactNativeVisionCamera_runAsyncJs1.__workletHash = 14389502829438;\n      reactNativeVisionCamera_runAsyncJs1.__initData = _worklet_14389502829438_init_data;\n      reactNativeVisionCamera_runAsyncJs1.__stackDetails = _e;\n      return reactNativeVisionCamera_runAsyncJs1;\n    }());\n  } catch (e) {\n    // react-native-worklets-core is not installed!\n    // Just use dummy implementations that will throw when the user tries to use Frame Processors.\n    isAsyncContextBusy = {\n      value: false\n    };\n    runOnAsyncContext = () => {\n      throw new _FrameProcessorsUnavailableError.FrameProcessorsUnavailableError(e);\n    };\n  }\n\n  /**\n   * Runs the given {@linkcode func} asynchronously on a separate thread,\n   * allowing the Frame Processor to continue executing without dropping a Frame.\n   *\n   * Only one {@linkcode runAsync} call will execute at the same time,\n   * so {@linkcode runAsync} is **not parallel**, **but asynchronous**.\n   *\n   *\n   * For example, if your Camera is running at 60 FPS (16ms per frame), and a\n   * heavy ML face detection Frame Processor Plugin takes 500ms to execute,\n   * you have two options:\n   * - Run the plugin normally (synchronously in `useFrameProcessor`)\n   * but drop a lot of Frames, as we can only run at 2 FPS (500ms per frame)\n   * - Call the plugin inside {@linkcode runAsync} to allow the Camera to still\n   * run at 60 FPS, but offload the heavy ML face detection plugin to the\n   * asynchronous context, where it will run at 2 FPS.\n   *\n   * @note {@linkcode runAsync} cannot be used to draw to a Frame in a Skia Frame Processor.\n   * @param frame The current Frame of the Frame Processor.\n   * @param func The function to execute.\n   * @worklet\n   * @example\n   *\n   * ```ts\n   * const frameProcessor = useFrameProcessor((frame) => {\n   *   'worklet'\n   *   console.log('New Frame arrived!')\n   *\n   *   runAsync(frame, () => {\n   *     'worklet'\n   *     const faces = detectFaces(frame)\n   *     const face = faces[0]\n   *     console.log(`Detected a new face: ${face}`)\n   *   })\n   * })\n   * ```\n   */\n  const _worklet_13768994699248_init_data = {\n    code: \"function runAsync_reactNativeVisionCamera_runAsyncJs2(frame,func){const{isAsyncContextBusy,runOnAsyncContext}=this.__closure;if(isAsyncContextBusy.value){return;}const internal=frame;internal.incrementRefCount();isAsyncContextBusy.value=true;runOnAsyncContext(frame,func);}\",\n    location: \"/app/frontend/node_modules/react-native-vision-camera/lib/commonjs/frame-processors/runAsync.js\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"runAsync_reactNativeVisionCamera_runAsyncJs2\\\",\\\"frame\\\",\\\"func\\\",\\\"isAsyncContextBusy\\\",\\\"runOnAsyncContext\\\",\\\"__closure\\\",\\\"value\\\",\\\"internal\\\",\\\"incrementRefCount\\\"],\\\"sources\\\":[\\\"/app/frontend/node_modules/react-native-vision-camera/lib/commonjs/frame-processors/runAsync.js\\\"],\\\"mappings\\\":\\\"AAkDA,SAAAA,6CAAAC,KAAA,CAAAC,IAAA,QAAAC,kBAAA,CAAAC,iBAAA,OAAAC,SAAA,IAAAF,kBAAA,CAAAG,KAAA,EAGA,OACA,CAGA,MAAAC,QAAA,CAAAN,KAAA,CACAM,QAAA,CAAAC,iBAAA,GACAL,kBAAA,CAAAG,KAAA,MAGAF,iBAAA,CAAAH,KAAA,CAAAC,IAAA,EACA\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  const runAsync = function () {\n    const _e = [new global.Error(), -3, -27];\n    const runAsync = function (frame, func) {\n      if (isAsyncContextBusy.value) {\n        // async context is currently busy, we cannot schedule new work in time.\n        // drop this frame/runAsync call.\n        return;\n      }\n\n      // Increment ref count by one\n      const internal = frame;\n      internal.incrementRefCount();\n      isAsyncContextBusy.value = true;\n\n      // Call in separate background context\n      runOnAsyncContext(frame, func);\n    };\n    runAsync.__closure = {\n      isAsyncContextBusy,\n      runOnAsyncContext\n    };\n    runAsync.__workletHash = 13768994699248;\n    runAsync.__initData = _worklet_13768994699248_init_data;\n    runAsync.__stackDetails = _e;\n    return runAsync;\n  }();\n});","lineCount":136,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"runAsync"],[7,18,6,16],[7,21,6,19,"runAsync"],[7,29,6,27],[8,2,7,0],[8,6,7,4,"_WorkletsProxy"],[8,20,7,18],[8,23,7,21,"require"],[8,30,7,28],[8,31,7,28,"_dependencyMap"],[8,45,7,28],[8,81,7,60],[8,82,7,61],[9,2,8,0],[9,6,8,4,"_FrameProcessorsUnavailableError"],[9,38,8,36],[9,41,8,39,"require"],[9,48,8,46],[9,49,8,46,"_dependencyMap"],[9,63,8,46],[9,103,8,82],[9,104,8,83],[10,2,9,0],[10,6,9,4,"_throwErrorOnJS"],[10,21,9,19],[10,24,9,22,"require"],[10,31,9,29],[10,32,9,29,"_dependencyMap"],[10,46,9,29],[10,69,9,48],[10,70,9,49],[11,2,10,0],[12,0,11,0],[13,0,12,0],[14,2,13,0],[14,6,13,4,"isAsyncContextBusy"],[14,24,13,22],[15,2,14,0],[16,0,15,0],[17,0,16,0],[18,2,17,0],[18,6,17,4,"runOnAsyncContext"],[18,23,17,21],[19,2,17,22],[19,8,17,22,"_worklet_14389502829438_init_data"],[19,41,17,22],[20,4,17,22,"code"],[20,8,17,22],[21,4,17,22,"location"],[21,12,17,22],[22,4,17,22,"sourceMap"],[22,13,17,22],[23,4,17,22,"version"],[23,11,17,22],[24,2,17,22],[25,2,18,0],[25,6,18,4],[26,4,19,2],[26,10,19,8,"Worklets"],[26,18,19,16],[26,21,19,19,"_WorkletsProxy"],[26,35,19,33],[26,36,19,34,"WorkletsProxy"],[26,49,19,47],[26,50,19,48,"Worklets"],[26,58,19,56],[27,4,20,2,"isAsyncContextBusy"],[27,22,20,20],[27,25,20,23,"Worklets"],[27,33,20,31],[27,34,20,32,"createSharedValue"],[27,51,20,49],[27,52,20,50],[27,57,20,55],[27,58,20,56],[28,4,21,2],[28,10,21,8,"asyncContext"],[28,22,21,20],[28,25,21,23,"Worklets"],[28,33,21,31],[28,34,21,32,"createContext"],[28,47,21,45],[28,48,21,46],[28,68,21,66],[28,69,21,67],[29,4,22,2,"runOnAsyncContext"],[29,21,22,19],[29,24,22,22,"asyncContext"],[29,36,22,34],[29,37,22,35,"createRunAsync"],[29,51,22,49],[29,52,22,50],[30,6,22,50],[30,12,22,50,"_e"],[30,14,22,50],[30,22,22,50,"global"],[30,28,22,50],[30,29,22,50,"Error"],[30,34,22,50],[31,6,22,50],[31,12,22,50,"reactNativeVisionCamera_runAsyncJs1"],[31,47,22,50],[31,59,22,50,"reactNativeVisionCamera_runAsyncJs1"],[31,60,22,51,"frame"],[31,65,22,56],[31,67,22,58,"func"],[31,71,22,62],[31,73,22,67],[32,8,25,4],[32,12,25,8],[33,10,26,6],[34,10,27,6,"func"],[34,14,27,10],[34,15,27,11],[34,16,27,12],[35,8,28,4],[35,9,28,5],[35,10,28,6],[35,17,28,13,"e"],[35,18,28,14],[35,20,28,16],[36,10,29,6],[37,10,30,6],[37,11,30,7],[37,12,30,8],[37,14,30,10,"_throwErrorOnJS"],[37,29,30,25],[37,30,30,26,"throwErrorOnJS"],[37,44,30,40],[37,46,30,42,"e"],[37,47,30,43],[37,48,30,44],[38,8,31,4],[38,9,31,5],[38,18,31,14],[39,10,32,6],[40,10,33,6],[40,16,33,12,"internal"],[40,24,33,20],[40,27,33,23,"frame"],[40,32,33,28],[41,10,34,6,"internal"],[41,18,34,14],[41,19,34,15,"decrementRefCount"],[41,36,34,32],[41,37,34,33],[41,38,34,34],[43,10,36,6],[44,10,37,6,"isAsyncContextBusy"],[44,28,37,24],[44,29,37,25,"value"],[44,34,37,30],[44,37,37,33],[44,42,37,38],[45,8,38,4],[46,6,39,2],[46,7,39,3],[47,6,39,3,"reactNativeVisionCamera_runAsyncJs1"],[47,41,39,3],[47,42,39,3,"__closure"],[47,51,39,3],[48,8,39,3,"_throwErrorOnJS"],[48,23,39,3],[49,8,39,3,"isAsyncContextBusy"],[50,6,39,3],[51,6,39,3,"reactNativeVisionCamera_runAsyncJs1"],[51,41,39,3],[51,42,39,3,"__workletHash"],[51,55,39,3],[52,6,39,3,"reactNativeVisionCamera_runAsyncJs1"],[52,41,39,3],[52,42,39,3,"__initData"],[52,52,39,3],[52,55,39,3,"_worklet_14389502829438_init_data"],[52,88,39,3],[53,6,39,3,"reactNativeVisionCamera_runAsyncJs1"],[53,41,39,3],[53,42,39,3,"__stackDetails"],[53,56,39,3],[53,59,39,3,"_e"],[53,61,39,3],[54,6,39,3],[54,13,39,3,"reactNativeVisionCamera_runAsyncJs1"],[54,48,39,3],[55,4,39,3],[55,5,22,50],[55,7,39,3],[55,8,39,4],[56,2,40,0],[56,3,40,1],[56,4,40,2],[56,11,40,9,"e"],[56,12,40,10],[56,14,40,12],[57,4,41,2],[58,4,42,2],[59,4,43,2,"isAsyncContextBusy"],[59,22,43,20],[59,25,43,23],[60,6,44,4,"value"],[60,11,44,9],[60,13,44,11],[61,4,45,2],[61,5,45,3],[62,4,46,2,"runOnAsyncContext"],[62,21,46,19],[62,24,46,22,"runOnAsyncContext"],[62,25,46,22],[62,30,46,28],[63,6,47,4],[63,12,47,10],[63,16,47,14,"_FrameProcessorsUnavailableError"],[63,48,47,46],[63,49,47,47,"FrameProcessorsUnavailableError"],[63,80,47,78],[63,81,47,79,"e"],[63,82,47,80],[63,83,47,81],[64,4,48,2],[64,5,48,3],[65,2,49,0],[67,2,51,0],[68,0,52,0],[69,0,53,0],[70,0,54,0],[71,0,55,0],[72,0,56,0],[73,0,57,0],[74,0,58,0],[75,0,59,0],[76,0,60,0],[77,0,61,0],[78,0,62,0],[79,0,63,0],[80,0,64,0],[81,0,65,0],[82,0,66,0],[83,0,67,0],[84,0,68,0],[85,0,69,0],[86,0,70,0],[87,0,71,0],[88,0,72,0],[89,0,73,0],[90,0,74,0],[91,0,75,0],[92,0,76,0],[93,0,77,0],[94,0,78,0],[95,0,79,0],[96,0,80,0],[97,0,81,0],[98,0,82,0],[99,0,83,0],[100,0,84,0],[101,0,85,0],[102,0,86,0],[103,0,87,0],[104,2,51,0],[104,8,51,0,"_worklet_13768994699248_init_data"],[104,41,51,0],[105,4,51,0,"code"],[105,8,51,0],[106,4,51,0,"location"],[106,12,51,0],[107,4,51,0,"sourceMap"],[107,13,51,0],[108,4,51,0,"version"],[108,11,51,0],[109,2,51,0],[110,2,51,0],[110,8,51,0,"runAsync"],[110,16,51,0],[110,19,88,0],[111,4,88,0],[111,10,88,0,"_e"],[111,12,88,0],[111,20,88,0,"global"],[111,26,88,0],[111,27,88,0,"Error"],[111,32,88,0],[112,4,88,0],[112,10,88,0,"runAsync"],[112,18,88,0],[112,30,88,0,"runAsync"],[112,31,88,18,"frame"],[112,36,88,23],[112,38,88,25,"func"],[112,42,88,29],[112,44,88,31],[113,6,91,2],[113,10,91,6,"isAsyncContextBusy"],[113,28,91,24],[113,29,91,25,"value"],[113,34,91,30],[113,36,91,32],[114,8,92,4],[115,8,93,4],[116,8,94,4],[117,6,95,2],[119,6,97,2],[120,6,98,2],[120,12,98,8,"internal"],[120,20,98,16],[120,23,98,19,"frame"],[120,28,98,24],[121,6,99,2,"internal"],[121,14,99,10],[121,15,99,11,"incrementRefCount"],[121,32,99,28],[121,33,99,29],[121,34,99,30],[122,6,100,2,"isAsyncContextBusy"],[122,24,100,20],[122,25,100,21,"value"],[122,30,100,26],[122,33,100,29],[122,37,100,33],[124,6,102,2],[125,6,103,2,"runOnAsyncContext"],[125,23,103,19],[125,24,103,20,"frame"],[125,29,103,25],[125,31,103,27,"func"],[125,35,103,31],[125,36,103,32],[126,4,104,0],[126,5,104,1],[127,4,104,1,"runAsync"],[127,12,104,1],[127,13,104,1,"__closure"],[127,22,104,1],[128,6,104,1,"isAsyncContextBusy"],[128,24,104,1],[129,6,104,1,"runOnAsyncContext"],[130,4,104,1],[131,4,104,1,"runAsync"],[131,12,104,1],[131,13,104,1,"__workletHash"],[131,26,104,1],[132,4,104,1,"runAsync"],[132,12,104,1],[132,13,104,1,"__initData"],[132,23,104,1],[132,26,104,1,"_worklet_13768994699248_init_data"],[132,59,104,1],[133,4,104,1,"runAsync"],[133,12,104,1],[133,13,104,1,"__stackDetails"],[133,27,104,1],[133,30,104,1,"_e"],[133,32,104,1],[134,4,104,1],[134,11,104,1,"runAsync"],[134,19,104,1],[135,2,104,1],[135,3,88,0],[136,0,88,0],[136,3]],"functionMap":{"names":["<global>","asyncContext.createRunAsync$argument_0","runOnAsyncContext","runAsync"],"mappings":"AAA;kDCqB;GDiB;sBEO;GFE;AGwC;CHgB"},"hasCjsExports":true},"type":"js/module"}]}