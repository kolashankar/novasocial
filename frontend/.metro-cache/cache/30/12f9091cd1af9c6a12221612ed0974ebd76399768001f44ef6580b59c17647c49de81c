{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"VelocityTracker\", {\n    enumerable: true,\n    get: function () {\n      return VelocityTracker;\n    }\n  });\n  var _babelRuntimeHelpersClassCallCheck = require(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n  var _classCallCheck = _interopDefault(_babelRuntimeHelpersClassCallCheck);\n  var _babelRuntimeHelpersCreateClass = require(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n  var _createClass = _interopDefault(_babelRuntimeHelpersCreateClass);\n  /**\n   * Tracks and calculates velocity for scroll/drag movements\n   * Used to determine momentum scrolling behavior\n   */\n  var VelocityTracker = /*#__PURE__*/function () {\n    function VelocityTracker() {\n      (0, _classCallCheck.default)(this, VelocityTracker);\n      /** Timestamp of the last velocity update */\n      this.lastUpdateTime = Date.now();\n      /** Current velocity vector with x and y components */\n      this.velocity = {\n        x: 0,\n        y: 0\n      };\n      /** Reference to the momentum end timeout */\n      this.timeoutId = null;\n    }\n    /**\n     * Calculates velocity based on position change over time\n     * @param newOffset Current position value\n     * @param oldOffset Previous position value\n     * @param isHorizontal Whether movement is horizontal (true) or vertical (false)\n     * @param isRTL Whether layout direction is right-to-left\n     * @param callback Function to call with velocity updates and momentum end signal\n     */\n    return (0, _createClass.default)(VelocityTracker, [{\n      key: \"computeVelocity\",\n      value: function computeVelocity(newOffset, oldOffset, isHorizontal, callback) {\n        // Clear any pending momentum end timeout\n        this.cleanUp();\n        // Calculate time since last update\n        var currentTime = Date.now();\n        var timeSinceLastUpdate = Math.max(1, currentTime - this.lastUpdateTime);\n        // Calculate velocity as distance/time\n        var newVelocity = (newOffset - oldOffset) / timeSinceLastUpdate;\n        // console.log(\n        //   \"newVelocity\",\n        //   newOffset,\n        //   oldOffset,\n        //   currentTime,\n        //   this.lastUpdateTime,\n        //   timeSinceLastUpdate,\n        //   newVelocity\n        // );\n        this.lastUpdateTime = currentTime;\n        // Apply velocity to the correct axis\n        this.velocity.x = isHorizontal ? newVelocity : 0;\n        this.velocity.y = isHorizontal ? 0 : newVelocity;\n        // Trigger callback with current velocity\n        callback(this.velocity, false);\n        // Set timeout to signal momentum end after 100ms of no updates\n        this.timeoutId = setTimeout(() => {\n          this.cleanUp();\n          this.lastUpdateTime = Date.now();\n          this.velocity.x = 0;\n          this.velocity.y = 0;\n          callback(this.velocity, true);\n        }, 100);\n      }\n      /**\n       * Cleans up resources by clearing any pending timeout\n       */\n    }, {\n      key: \"cleanUp\",\n      value: function cleanUp() {\n        if (this.timeoutId !== null) {\n          clearTimeout(this.timeoutId);\n          this.timeoutId = null;\n        }\n      }\n    }]);\n  }();\n});","lineCount":94,"map":[[12,2,5,0,"Object"],[12,8,5,0],[12,9,5,0,"defineProperty"],[12,23,5,0],[12,24,5,0,"exports"],[12,31,5,0],[13,4,5,0,"enumerable"],[13,14,5,0],[14,4,5,0,"get"],[14,7,5,0],[14,18,5,0,"get"],[14,19,5,0],[15,6,5,0],[15,13,5,0,"VelocityTracker"],[15,28,5,0],[16,4,5,0],[17,2,5,0],[18,2,63,1],[18,6,63,1,"_babelRuntimeHelpersClassCallCheck"],[18,40,63,1],[18,43,63,1,"require"],[18,50,63,1],[18,51,63,1,"_dependencyMap"],[18,65,63,1],[19,2,63,1],[19,6,63,1,"_classCallCheck"],[19,21,63,1],[19,24,63,1,"_interopDefault"],[19,39,63,1],[19,40,63,1,"_babelRuntimeHelpersClassCallCheck"],[19,74,63,1],[20,2,63,1],[20,6,63,1,"_babelRuntimeHelpersCreateClass"],[20,37,63,1],[20,40,63,1,"require"],[20,47,63,1],[20,48,63,1,"_dependencyMap"],[20,62,63,1],[21,2,63,1],[21,6,63,1,"_createClass"],[21,18,63,1],[21,21,63,1,"_interopDefault"],[21,36,63,1],[21,37,63,1,"_babelRuntimeHelpersCreateClass"],[21,68,63,1],[22,2,1,0],[23,0,2,0],[24,0,3,0],[25,0,4,0],[26,2,1,0],[26,6,5,13,"VelocityTracker"],[26,21,5,28],[27,4,6,4],[27,13,6,4,"VelocityTracker"],[27,29,6,4],[27,31,6,18],[28,6,6,18],[28,10,6,18,"_classCallCheck"],[28,25,6,18],[28,26,6,18,"default"],[28,33,6,18],[28,41,6,18,"VelocityTracker"],[28,56,6,18],[29,6,7,8],[30,6,8,8],[30,10,8,12],[30,11,8,13,"lastUpdateTime"],[30,25,8,27],[30,28,8,30,"Date"],[30,32,8,34],[30,33,8,35,"now"],[30,36,8,38],[30,37,8,39],[30,38,8,40],[31,6,9,8],[32,6,10,8],[32,10,10,12],[32,11,10,13,"velocity"],[32,19,10,21],[32,22,10,24],[33,8,10,26,"x"],[33,9,10,27],[33,11,10,29],[33,12,10,30],[34,8,10,32,"y"],[34,9,10,33],[34,11,10,35],[35,6,10,37],[35,7,10,38],[36,6,11,8],[37,6,12,8],[37,10,12,12],[37,11,12,13,"timeoutId"],[37,20,12,22],[37,23,12,25],[37,27,12,29],[38,4,13,4],[39,4,14,4],[40,0,15,0],[41,0,16,0],[42,0,17,0],[43,0,18,0],[44,0,19,0],[45,0,20,0],[46,0,21,0],[47,4,14,4],[47,15,14,4,"_createClass"],[47,27,14,4],[47,28,14,4,"default"],[47,35,14,4],[47,37,14,4,"VelocityTracker"],[47,52,14,4],[48,6,14,4,"key"],[48,9,14,4],[49,6,14,4,"value"],[49,11,14,4],[49,13,22,4],[49,22,22,4,"computeVelocity"],[49,37,22,19,"computeVelocity"],[49,38,22,20,"newOffset"],[49,47,22,29],[49,49,22,31,"oldOffset"],[49,58,22,40],[49,60,22,42,"isHorizontal"],[49,72,22,54],[49,74,22,56,"callback"],[49,82,22,64],[49,84,22,66],[50,8,23,8],[51,8,24,8],[51,12,24,12],[51,13,24,13,"cleanUp"],[51,20,24,20],[51,21,24,21],[51,22,24,22],[52,8,25,8],[53,8,26,8],[53,12,26,14,"currentTime"],[53,23,26,25],[53,26,26,28,"Date"],[53,30,26,32],[53,31,26,33,"now"],[53,34,26,36],[53,35,26,37],[53,36,26,38],[54,8,27,8],[54,12,27,14,"timeSinceLastUpdate"],[54,31,27,33],[54,34,27,36,"Math"],[54,38,27,40],[54,39,27,41,"max"],[54,42,27,44],[54,43,27,45],[54,44,27,46],[54,46,27,48,"currentTime"],[54,57,27,59],[54,60,27,62],[54,64,27,66],[54,65,27,67,"lastUpdateTime"],[54,79,27,81],[54,80,27,82],[55,8,28,8],[56,8,29,8],[56,12,29,14,"newVelocity"],[56,23,29,25],[56,26,29,28],[56,27,29,29,"newOffset"],[56,36,29,38],[56,39,29,41,"oldOffset"],[56,48,29,50],[56,52,29,54,"timeSinceLastUpdate"],[56,71,29,73],[57,8,30,8],[58,8,31,8],[59,8,32,8],[60,8,33,8],[61,8,34,8],[62,8,35,8],[63,8,36,8],[64,8,37,8],[65,8,38,8],[66,8,39,8],[66,12,39,12],[66,13,39,13,"lastUpdateTime"],[66,27,39,27],[66,30,39,30,"currentTime"],[66,41,39,41],[67,8,40,8],[68,8,41,8],[68,12,41,12],[68,13,41,13,"velocity"],[68,21,41,21],[68,22,41,22,"x"],[68,23,41,23],[68,26,41,26,"isHorizontal"],[68,38,41,38],[68,41,41,41,"newVelocity"],[68,52,41,52],[68,55,41,55],[68,56,41,56],[69,8,42,8],[69,12,42,12],[69,13,42,13,"velocity"],[69,21,42,21],[69,22,42,22,"y"],[69,23,42,23],[69,26,42,26,"isHorizontal"],[69,38,42,38],[69,41,42,41],[69,42,42,42],[69,45,42,45,"newVelocity"],[69,56,42,56],[70,8,43,8],[71,8,44,8,"callback"],[71,16,44,16],[71,17,44,17],[71,21,44,21],[71,22,44,22,"velocity"],[71,30,44,30],[71,32,44,32],[71,37,44,37],[71,38,44,38],[72,8,45,8],[73,8,46,8],[73,12,46,12],[73,13,46,13,"timeoutId"],[73,22,46,22],[73,25,46,25,"setTimeout"],[73,35,46,35],[73,36,46,36],[73,42,46,42],[74,10,47,12],[74,14,47,16],[74,15,47,17,"cleanUp"],[74,22,47,24],[74,23,47,25],[74,24,47,26],[75,10,48,12],[75,14,48,16],[75,15,48,17,"lastUpdateTime"],[75,29,48,31],[75,32,48,34,"Date"],[75,36,48,38],[75,37,48,39,"now"],[75,40,48,42],[75,41,48,43],[75,42,48,44],[76,10,49,12],[76,14,49,16],[76,15,49,17,"velocity"],[76,23,49,25],[76,24,49,26,"x"],[76,25,49,27],[76,28,49,30],[76,29,49,31],[77,10,50,12],[77,14,50,16],[77,15,50,17,"velocity"],[77,23,50,25],[77,24,50,26,"y"],[77,25,50,27],[77,28,50,30],[77,29,50,31],[78,10,51,12,"callback"],[78,18,51,20],[78,19,51,21],[78,23,51,25],[78,24,51,26,"velocity"],[78,32,51,34],[78,34,51,36],[78,38,51,40],[78,39,51,41],[79,8,52,8],[79,9,52,9],[79,11,52,11],[79,14,52,14],[79,15,52,15],[80,6,53,4],[81,6,54,4],[82,0,55,0],[83,0,56,0],[84,4,54,4],[85,6,54,4,"key"],[85,9,54,4],[86,6,54,4,"value"],[86,11,54,4],[86,13,57,4],[86,22,57,4,"cleanUp"],[86,29,57,11,"cleanUp"],[86,30,57,11],[86,32,57,14],[87,8,58,8],[87,12,58,12],[87,16,58,16],[87,17,58,17,"timeoutId"],[87,26,58,26],[87,31,58,31],[87,35,58,35],[87,37,58,37],[88,10,59,12,"clearTimeout"],[88,22,59,24],[88,23,59,25],[88,27,59,29],[88,28,59,30,"timeoutId"],[88,37,59,39],[88,38,59,40],[89,10,60,12],[89,14,60,16],[89,15,60,17,"timeoutId"],[89,24,60,26],[89,27,60,29],[89,31,60,33],[90,8,61,8],[91,6,62,4],[92,4,62,5],[93,2,62,5],[94,0,62,5],[94,3]],"functionMap":{"names":["<global>","VelocityTracker","constructor","computeVelocity","setTimeout$argument_0","cleanUp"],"mappings":"AAA;OCI;ICC;KDO;IES;oCCwB;SDM;KFC;III;KJK;CDC"},"hasCjsExports":false},"type":"js/module"}]}