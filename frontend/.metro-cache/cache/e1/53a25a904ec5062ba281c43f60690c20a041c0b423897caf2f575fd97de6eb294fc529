{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":277},"end":{"line":2,"column":26,"index":303}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/findNodeHandle","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"2RP7Dp//wHy/IL2D3/pkDbKjgUI=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/StyleSheet","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"MK7+k1V+KnvCVW7Kj2k/ydtjmVU=","exportNames":["*"],"imports":1}},{"name":"./CameraError","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":363},"end":{"line":4,"column":96,"index":459}}],"key":"Dpfpb7R92eCDZninNQbV2M8Hi5o=","exportNames":["*"],"imports":1}},{"name":"./NativeCameraModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":460},"end":{"line":5,"column":52,"index":512}}],"key":"mnWlrnJ/y4roIUOriP6eaGms+uk=","exportNames":["*"],"imports":1}},{"name":"./frame-processors/VisionCameraProxy","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":513},"end":{"line":6,"column":73,"index":586}}],"key":"TBlYVjY8oKML5Hs7wuv03pes/Fs=","exportNames":["*"],"imports":1}},{"name":"./CameraDevices","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":587},"end":{"line":7,"column":48,"index":635}}],"key":"HartyYT1gygKVDjhTUG0eUs5ty0=","exportNames":["*"],"imports":1}},{"name":"./skia/SkiaCameraCanvas","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":636},"end":{"line":8,"column":59,"index":695}}],"key":"16diobccwJitfmMSrvdCjz4YRzg=","exportNames":["*"],"imports":1}},{"name":"./FpsGraph","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":696},"end":{"line":9,"column":48,"index":744}}],"key":"gtvKdojMdHcDrY/5QVeMFcvcgHM=","exportNames":["*"],"imports":1}},{"name":"./NativeCameraView","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":745},"end":{"line":10,"column":54,"index":799}}],"key":"H4X1s0vX2VMjZWycAZps1noSm9g=","exportNames":["*"],"imports":1}},{"name":"./RotationHelper","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":800},"end":{"line":11,"column":50,"index":850}}],"key":"D1LT5AsKRf+SzC40Zx5MN0hYWXA=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"Camera\", {\n    enumerable: true,\n    get: function () {\n      return Camera;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsFindNodeHandle = require(_dependencyMap[1], \"react-native-web/dist/exports/findNodeHandle\");\n  var findNodeHandle = _interopDefault(_reactNativeWebDistExportsFindNodeHandle);\n  var _reactNativeWebDistExportsStyleSheet = require(_dependencyMap[2], \"react-native-web/dist/exports/StyleSheet\");\n  var StyleSheet = _interopDefault(_reactNativeWebDistExportsStyleSheet);\n  var _CameraError = require(_dependencyMap[3], \"./CameraError\");\n  var _NativeCameraModule = require(_dependencyMap[4], \"./NativeCameraModule\");\n  var _frameProcessorsVisionCameraProxy = require(_dependencyMap[5], \"./frame-processors/VisionCameraProxy\");\n  var _CameraDevices = require(_dependencyMap[6], \"./CameraDevices\");\n  var _skiaSkiaCameraCanvas = require(_dependencyMap[7], \"./skia/SkiaCameraCanvas\");\n  var _FpsGraph = require(_dependencyMap[8], \"./FpsGraph\");\n  var _NativeCameraView = require(_dependencyMap[9], \"./NativeCameraView\");\n  var _RotationHelper = require(_dependencyMap[10], \"./RotationHelper\");\n  function _extends() {\n    return _extends = Object.assign ? Object.assign.bind() : function (n) {\n      for (var e = 1; e < arguments.length; e++) {\n        var t = arguments[e];\n        for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n      }\n      return n;\n    }, _extends.apply(null, arguments);\n  }\n  //#region Types\n\n  //#endregion\n\n  function isSkiaFrameProcessor(frameProcessor) {\n    return frameProcessor?.type === 'drawable-skia';\n  }\n\n  //#region Camera Component\n  /**\n   * ### A powerful `<Camera>` component.\n   *\n   * Read the [VisionCamera documentation](https://react-native-vision-camera.com/) for more information.\n   *\n   * The `<Camera>` component's most important properties are:\n   *\n   * * {@linkcode CameraProps.device | device}: Specifies the {@linkcode CameraDevice} to use. Get a {@linkcode CameraDevice} by using\n   * the {@linkcode useCameraDevice | useCameraDevice(..)} hook, or manually by using\n   * the {@linkcode CameraDevices.getAvailableCameraDevices | CameraDevices.getAvailableCameraDevices()} function.\n   * * {@linkcode CameraProps.isActive | isActive}: A boolean value that specifies whether the Camera should\n   * actively stream video frames or not. This can be compared to a Video component, where `isActive` specifies whether the video\n   * is paused or not. If you fully unmount the `<Camera>` component instead of using `isActive={false}`, the Camera will take a bit longer to start again.\n   *\n   * @example\n   * ```tsx\n   * function App() {\n   *   const device = useCameraDevice('back')\n   *\n   *   if (device == null) return <NoCameraErrorView />\n   *   return (\n   *     <Camera\n   *       style={StyleSheet.absoluteFill}\n   *       device={device}\n   *       isActive={true}\n   *     />\n   *   )\n   * }\n   * ```\n   *\n   * @component\n   */\n  class Camera extends React.default.PureComponent {\n    /** @internal */\n    static displayName = 'Camera';\n    /** @internal */\n    displayName = Camera.displayName;\n    isNativeViewMounted = false;\n    lastUIRotation = undefined;\n    rotationHelper = new _RotationHelper.RotationHelper();\n    /** @internal */\n    constructor(props) {\n      super(props);\n      this.onViewReady = this.onViewReady.bind(this);\n      this.onAverageFpsChanged = this.onAverageFpsChanged.bind(this);\n      this.onInitialized = this.onInitialized.bind(this);\n      this.onStarted = this.onStarted.bind(this);\n      this.onStopped = this.onStopped.bind(this);\n      this.onPreviewStarted = this.onPreviewStarted.bind(this);\n      this.onPreviewStopped = this.onPreviewStopped.bind(this);\n      this.onShutter = this.onShutter.bind(this);\n      this.onOutputOrientationChanged = this.onOutputOrientationChanged.bind(this);\n      this.onPreviewOrientationChanged = this.onPreviewOrientationChanged.bind(this);\n      this.onError = this.onError.bind(this);\n      this.onCodeScanned = this.onCodeScanned.bind(this);\n      this.ref = /*#__PURE__*/React.default.createRef();\n      this.lastFrameProcessor = undefined;\n      this.state = {\n        isRecordingWithFlash: false,\n        averageFpsSamples: []\n      };\n    }\n    get handle() {\n      const nodeHandle = (0, findNodeHandle.default)(this.ref.current);\n      if (nodeHandle == null || nodeHandle === -1) {\n        throw new _CameraError.CameraRuntimeError('system/view-not-found', \"Could not get the Camera's native view tag! Does the Camera View exist in the native view-tree?\");\n      }\n      return nodeHandle;\n    }\n\n    //#region View-specific functions (UIViewManager)\n    /**\n     * Take a single photo and write it's content to a temporary file.\n     *\n     * @throws {@linkcode CameraCaptureError} When any kind of error occured while capturing the photo.\n     * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error\n     * @example\n     * ```ts\n     * const photo = await camera.current.takePhoto({\n     *   flash: 'on',\n     *   enableAutoRedEyeReduction: true\n     * })\n     * ```\n     */\n    async takePhoto(options) {\n      try {\n        return await _NativeCameraModule.CameraModule.takePhoto(this.handle, options ?? {});\n      } catch (e) {\n        throw (0, _CameraError.tryParseNativeCameraError)(e);\n      }\n    }\n\n    /**\n     * Captures a snapshot of the Camera view and write it's content to a temporary file.\n     *\n     * - On iOS, `takeSnapshot` waits for a Frame from the video pipeline and therefore requires `video` to be enabled.\n     * - On Android, `takeSnapshot` performs a GPU view screenshot from the preview view.\n     *\n     * @throws {@linkcode CameraCaptureError} When any kind of error occured while capturing the photo.\n     * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error\n     * @example\n     * ```ts\n     * const snapshot = await camera.current.takeSnapshot({\n     *   quality: 100\n     * })\n     * ```\n     */\n    async takeSnapshot(options) {\n      try {\n        return await _NativeCameraModule.CameraModule.takeSnapshot(this.handle, options ?? {});\n      } catch (e) {\n        throw (0, _CameraError.tryParseNativeCameraError)(e);\n      }\n    }\n    getBitRateMultiplier(bitRate) {\n      if (typeof bitRate === 'number' || bitRate == null) return 1;\n      switch (bitRate) {\n        case 'extra-low':\n          return 0.6;\n        case 'low':\n          return 0.8;\n        case 'normal':\n          return 1;\n        case 'high':\n          return 1.2;\n        case 'extra-high':\n          return 1.4;\n      }\n    }\n\n    /**\n     * Start a new video recording.\n     *\n     * @throws {@linkcode CameraCaptureError} When any kind of error occured while starting the video recording.\n     * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error\n     *\n     * @example\n     * ```ts\n     * camera.current.startRecording({\n     *   onRecordingFinished: (video) => console.log(video),\n     *   onRecordingError: (error) => console.error(error),\n     * })\n     * setTimeout(() => {\n     *   camera.current.stopRecording()\n     * }, 5000)\n     * ```\n     */\n    startRecording(options) {\n      const {\n        onRecordingError,\n        onRecordingFinished,\n        ...passThruOptions\n      } = options;\n      if (typeof onRecordingError !== 'function' || typeof onRecordingFinished !== 'function') throw new _CameraError.CameraRuntimeError('parameter/invalid-parameter', 'The onRecordingError or onRecordingFinished functions were not set!');\n      if (options.flash === 'on') {\n        // Enable torch for video recording\n        this.setState({\n          isRecordingWithFlash: true\n        });\n      }\n      const onRecordCallback = (video, error) => {\n        if (this.state.isRecordingWithFlash) {\n          // disable torch again if it was enabled\n          this.setState({\n            isRecordingWithFlash: false\n          });\n        }\n        if (error != null) return onRecordingError(error);\n        if (video != null) return onRecordingFinished(video);\n      };\n      const nativeRecordVideoOptions = passThruOptions;\n      try {\n        // TODO: Use TurboModules to make this awaitable.\n        _NativeCameraModule.CameraModule.startRecording(this.handle, nativeRecordVideoOptions, onRecordCallback);\n      } catch (e) {\n        throw (0, _CameraError.tryParseNativeCameraError)(e);\n      }\n    }\n\n    /**\n     * Pauses the current video recording.\n     *\n     * @throws {@linkcode CameraCaptureError} When any kind of error occured while pausing the video recording.\n     * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error\n     *\n     * @example\n     * ```ts\n     * // Start\n     * await camera.current.startRecording({\n     *   onRecordingFinished: (video) => console.log(video),\n     *   onRecordingError: (error) => console.error(error),\n     * })\n     * await timeout(1000)\n     * // Pause\n     * await camera.current.pauseRecording()\n     * await timeout(500)\n     * // Resume\n     * await camera.current.resumeRecording()\n     * await timeout(2000)\n     * // Stop\n     * await camera.current.stopRecording()\n     * ```\n     */\n    async pauseRecording() {\n      try {\n        return await _NativeCameraModule.CameraModule.pauseRecording(this.handle);\n      } catch (e) {\n        throw (0, _CameraError.tryParseNativeCameraError)(e);\n      }\n    }\n\n    /**\n     * Resumes a currently paused video recording.\n     *\n     * @throws {@linkcode CameraCaptureError} When any kind of error occured while resuming the video recording.\n     * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error\n     *\n     * @example\n     * ```ts\n     * // Start\n     * await camera.current.startRecording({\n     *   onRecordingFinished: (video) => console.log(video),\n     *   onRecordingError: (error) => console.error(error),\n     * })\n     * await timeout(1000)\n     * // Pause\n     * await camera.current.pauseRecording()\n     * await timeout(500)\n     * // Resume\n     * await camera.current.resumeRecording()\n     * await timeout(2000)\n     * // Stop\n     * await camera.current.stopRecording()\n     * ```\n     */\n    async resumeRecording() {\n      try {\n        return await _NativeCameraModule.CameraModule.resumeRecording(this.handle);\n      } catch (e) {\n        throw (0, _CameraError.tryParseNativeCameraError)(e);\n      }\n    }\n\n    /**\n     * Stop the current video recording.\n     *\n     * @throws {@linkcode CameraCaptureError} When any kind of error occured while stopping the video recording.\n     * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error\n     *\n     * @example\n     * ```ts\n     * await camera.current.startRecording({\n     *   onRecordingFinished: (video) => console.log(video),\n     *   onRecordingError: (error) => console.error(error),\n     * })\n     * setTimeout(async () => {\n     *   await camera.current.stopRecording()\n     * }, 5000)\n     * ```\n     */\n    async stopRecording() {\n      try {\n        return await _NativeCameraModule.CameraModule.stopRecording(this.handle);\n      } catch (e) {\n        throw (0, _CameraError.tryParseNativeCameraError)(e);\n      }\n    }\n\n    /**\n     * Cancel the current video recording. The temporary video file will be deleted,\n     * and the `startRecording`'s `onRecordingError` callback will be invoked with a `capture/recording-canceled` error.\n     *\n     * @throws {@linkcode CameraCaptureError} When any kind of error occured while canceling the video recording.\n     * Use the {@linkcode CameraCaptureError.code | code} property to get the actual error\n     *\n     * @example\n     * ```ts\n     * await camera.current.startRecording({\n     *   onRecordingFinished: (video) => console.log(video),\n     *   onRecordingError: (error) => {\n     *     if (error.code === 'capture/recording-canceled') {\n     *       // recording was canceled.\n     *     } else {\n     *       console.error(error)\n     *     }\n     *   },\n     * })\n     * setTimeout(async () => {\n     *   await camera.current.cancelRecording()\n     * }, 5000)\n     * ```\n     */\n    async cancelRecording() {\n      try {\n        return await _NativeCameraModule.CameraModule.cancelRecording(this.handle);\n      } catch (e) {\n        throw (0, _CameraError.tryParseNativeCameraError)(e);\n      }\n    }\n\n    /**\n     * Focus the camera to a specific point in the coordinate system.\n     * @param {Point} point The point to focus to. This should be relative\n     * to the Camera view's coordinate system and is expressed in points.\n     *  * `(0, 0)` means **top left**.\n     *  * `(CameraView.width, CameraView.height)` means **bottom right**.\n     *\n     * Make sure the value doesn't exceed the CameraView's dimensions.\n     *\n     * @throws {@linkcode CameraRuntimeError} When any kind of error occured while focussing.\n     * Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error\n     * @example\n     * ```ts\n     * await camera.current.focus({\n     *   x: tapEvent.x,\n     *   y: tapEvent.y\n     * })\n     * ```\n     */\n    async focus(point) {\n      try {\n        return await _NativeCameraModule.CameraModule.focus(this.handle, point);\n      } catch (e) {\n        throw (0, _CameraError.tryParseNativeCameraError)(e);\n      }\n    }\n    //#endregion\n\n    //#region Static Functions (NativeModule)\n    /**\n     * Get a list of all available camera devices on the current phone.\n     *\n     * If you use Hooks, use the `useCameraDevices(..)` hook instead.\n     *\n     * * For Camera Devices attached to the phone, it is safe to assume that this will never change.\n     * * For external Camera Devices (USB cameras, Mac continuity cameras, etc.) the available Camera Devices\n     * could change over time when the external Camera device gets plugged in or plugged out, so\n     * use {@link addCameraDevicesChangedListener | addCameraDevicesChangedListener(...)} to listen for such changes.\n     *\n     * @example\n     * ```ts\n     * const devices = Camera.getAvailableCameraDevices()\n     * const backCameras = devices.filter((d) => d.position === \"back\")\n     * const frontCameras = devices.filter((d) => d.position === \"front\")\n     * ```\n     */\n    static getAvailableCameraDevices() {\n      return _CameraDevices.CameraDevices.getAvailableCameraDevices();\n    }\n    /**\n     * Adds a listener that gets called everytime the Camera Devices change, for example\n     * when an external Camera Device (USB or continuity Camera) gets plugged in or plugged out.\n     *\n     * If you use Hooks, use the `useCameraDevices()` hook instead.\n     */\n    static addCameraDevicesChangedListener(listener) {\n      return _CameraDevices.CameraDevices.addCameraDevicesChangedListener(listener);\n    }\n    /**\n     * Gets the current Camera Permission Status. Check this before mounting the Camera to ensure\n     * the user has permitted the app to use the camera.\n     *\n     * To actually prompt the user for camera permission, use {@linkcode Camera.requestCameraPermission | requestCameraPermission()}.\n     */\n    static getCameraPermissionStatus() {\n      return _NativeCameraModule.CameraModule.getCameraPermissionStatus();\n    }\n    /**\n     * Gets the current Microphone-Recording Permission Status.\n     * Check this before enabling the `audio={...}` property to make sure the\n     * user has permitted the app to use the microphone.\n     *\n     * To actually prompt the user for microphone permission, use {@linkcode Camera.requestMicrophonePermission | requestMicrophonePermission()}.\n     */\n    static getMicrophonePermissionStatus() {\n      return _NativeCameraModule.CameraModule.getMicrophonePermissionStatus();\n    }\n    /**\n     * Gets the current Location Permission Status.\n     * Check this before enabling the `location={...}` property to make sure the\n     * the user has permitted the app to use the location.\n     *\n     * To actually prompt the user for location permission, use {@linkcode Camera.requestLocationPermission | requestLocationPermission()}.\n     *\n     * Note: This method will throw a `system/location-not-enabled` error if the Location APIs are not enabled at build-time.\n     * See [the \"GPS Location Tags\" documentation](https://react-native-vision-camera.com/docs/guides/location) for more information.\n     */\n    static getLocationPermissionStatus() {\n      return _NativeCameraModule.CameraModule.getLocationPermissionStatus();\n    }\n    /**\n     * Shows a \"request permission\" alert to the user, and resolves with the new camera permission status.\n     *\n     * If the user has previously blocked the app from using the camera, the alert will not be shown\n     * and `\"denied\"` will be returned.\n     *\n     * @throws {@linkcode CameraRuntimeError} When any kind of error occured while requesting permission.\n     * Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error\n     */\n    static async requestCameraPermission() {\n      try {\n        return await _NativeCameraModule.CameraModule.requestCameraPermission();\n      } catch (e) {\n        throw (0, _CameraError.tryParseNativeCameraError)(e);\n      }\n    }\n    /**\n     * Shows a \"request permission\" alert to the user, and resolves with the new microphone permission status.\n     *\n     * If the user has previously blocked the app from using the microphone, the alert will not be shown\n     * and `\"denied\"` will be returned.\n     *\n     * @throws {@linkcode CameraRuntimeError} When any kind of error occured while requesting permission.\n     * Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error\n     */\n    static async requestMicrophonePermission() {\n      try {\n        return await _NativeCameraModule.CameraModule.requestMicrophonePermission();\n      } catch (e) {\n        throw (0, _CameraError.tryParseNativeCameraError)(e);\n      }\n    }\n    /**\n     * Shows a \"request permission\" alert to the user, and resolves with the new location permission status.\n     *\n     * If the user has previously blocked the app from using the location, the alert will not be shown\n     * and `\"denied\"` will be returned.\n     *\n     * @throws {@linkcode CameraRuntimeError} When any kind of error occured while requesting permission.\n     * Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error\n     */\n    static async requestLocationPermission() {\n      try {\n        return await _NativeCameraModule.CameraModule.requestLocationPermission();\n      } catch (e) {\n        throw (0, _CameraError.tryParseNativeCameraError)(e);\n      }\n    }\n    //#endregion\n\n    //#region Events (Wrapped to maintain reference equality)\n    onError(event) {\n      const error = event.nativeEvent;\n      const cause = (0, _CameraError.isErrorWithCause)(error.cause) ? error.cause : undefined;\n      // @ts-expect-error We're casting from unknown bridge types to TS unions, I expect it to hopefully work\n      const cameraError = new _CameraError.CameraRuntimeError(error.code, error.message, cause);\n      if (this.props.onError != null) {\n        this.props.onError(cameraError);\n      } else {\n        // User didn't pass an `onError` handler, so just log it to console\n        console.error(cameraError);\n      }\n    }\n    onInitialized() {\n      this.props.onInitialized?.();\n    }\n    onStarted() {\n      this.props.onStarted?.();\n    }\n    onStopped() {\n      this.props.onStopped?.();\n    }\n    onPreviewStarted() {\n      this.props.onPreviewStarted?.();\n    }\n    onPreviewStopped() {\n      this.props.onPreviewStopped?.();\n    }\n    onShutter(event) {\n      this.props.onShutter?.(event.nativeEvent);\n    }\n    onOutputOrientationChanged({\n      nativeEvent: {\n        outputOrientation\n      }\n    }) {\n      this.rotationHelper.outputOrientation = outputOrientation;\n      this.props.onOutputOrientationChanged?.(outputOrientation);\n      this.maybeUpdateUIRotation();\n    }\n    onPreviewOrientationChanged({\n      nativeEvent: {\n        previewOrientation\n      }\n    }) {\n      this.rotationHelper.previewOrientation = previewOrientation;\n      this.props.onPreviewOrientationChanged?.(previewOrientation);\n      this.maybeUpdateUIRotation();\n      if (isSkiaFrameProcessor(this.props.frameProcessor)) {\n        // If we have a Skia Frame Processor, we need to update it's orientation so it knows how to render.\n        this.props.frameProcessor.previewOrientation.value = previewOrientation;\n      }\n    }\n    maybeUpdateUIRotation() {\n      const uiRotation = this.rotationHelper.uiRotation;\n      if (uiRotation !== this.lastUIRotation) {\n        this.props.onUIRotationChanged?.(uiRotation);\n        this.lastUIRotation = uiRotation;\n      }\n    }\n    //#endregion\n\n    onCodeScanned(event) {\n      const codeScanner = this.props.codeScanner;\n      if (codeScanner == null) return;\n      codeScanner.onCodeScanned(event.nativeEvent.codes, event.nativeEvent.frame);\n    }\n\n    //#region Lifecycle\n    setFrameProcessor(frameProcessor) {\n      _frameProcessorsVisionCameraProxy.VisionCameraProxy.setFrameProcessor(this.handle, frameProcessor);\n    }\n    unsetFrameProcessor() {\n      _frameProcessorsVisionCameraProxy.VisionCameraProxy.removeFrameProcessor(this.handle);\n    }\n    onViewReady() {\n      this.isNativeViewMounted = true;\n      if (this.props.frameProcessor != null) {\n        // user passed a `frameProcessor` but we didn't set it yet because the native view was not mounted yet. set it now.\n        this.setFrameProcessor(this.props.frameProcessor.frameProcessor);\n        this.lastFrameProcessor = this.props.frameProcessor.frameProcessor;\n      }\n    }\n    onAverageFpsChanged({\n      nativeEvent: {\n        averageFps\n      }\n    }) {\n      this.setState(state => {\n        const averageFpsSamples = [...state.averageFpsSamples, averageFps];\n        while (averageFpsSamples.length >= _FpsGraph.MAX_BARS + 1) {\n          // we keep a maximum of 30 FPS samples in our history\n          averageFpsSamples.shift();\n        }\n        return {\n          ...state,\n          averageFpsSamples: averageFpsSamples\n        };\n      });\n    }\n\n    /** @internal */\n    componentDidUpdate() {\n      if (!this.isNativeViewMounted) return;\n      const frameProcessor = this.props.frameProcessor;\n      if (frameProcessor?.frameProcessor !== this.lastFrameProcessor) {\n        // frameProcessor argument identity changed. Update native to reflect the change.\n        if (frameProcessor != null) this.setFrameProcessor(frameProcessor.frameProcessor);else this.unsetFrameProcessor();\n        this.lastFrameProcessor = frameProcessor?.frameProcessor;\n      }\n    }\n    //#endregion\n\n    /** @internal */\n    render() {\n      // We remove the big `device` object from the props because we only need to pass `cameraId` to native.\n      const {\n        device,\n        frameProcessor,\n        codeScanner,\n        enableFpsGraph,\n        fps,\n        videoBitRate,\n        ...props\n      } = this.props;\n\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (device == null) {\n        throw new _CameraError.CameraRuntimeError('device/no-device', 'Camera: `device` is null! Select a valid Camera device. See: https://mrousavy.com/react-native-vision-camera/docs/guides/devices');\n      }\n      const shouldEnableBufferCompression = props.video === true && frameProcessor == null;\n      const torch = this.state.isRecordingWithFlash ? 'on' : props.torch;\n      const isRenderingWithSkia = isSkiaFrameProcessor(frameProcessor);\n      const shouldBeMirrored = device.position === 'front';\n\n      // minFps/maxFps is either the fixed `fps` value, or a value from the [min, max] tuple\n      const minFps = fps == null ? undefined : typeof fps === 'number' ? fps : fps[0];\n      const maxFps = fps == null ? undefined : typeof fps === 'number' ? fps : fps[1];\n\n      // bitrate is number (override) or string (multiplier)\n      let bitRateMultiplier;\n      let bitRateOverride;\n      if (typeof videoBitRate === 'number') {\n        // If the user passed an absolute number as a bit-rate, we just use this as a full override.\n        bitRateOverride = videoBitRate;\n      } else if (typeof videoBitRate === 'string' && videoBitRate !== 'normal') {\n        // If the user passed 'low'/'normal'/'high', we need to apply this as a multiplier to the native bitrate instead of absolutely setting it\n        bitRateMultiplier = this.getBitRateMultiplier(videoBitRate);\n      }\n      return /*#__PURE__*/React.default.createElement(_NativeCameraView.NativeCameraView, _extends({}, props, {\n        cameraId: device.id,\n        ref: this.ref,\n        torch: torch,\n        minFps: minFps,\n        maxFps: maxFps,\n        isMirrored: props.isMirrored ?? shouldBeMirrored,\n        onViewReady: this.onViewReady,\n        onAverageFpsChanged: enableFpsGraph ? this.onAverageFpsChanged : undefined,\n        onInitialized: this.onInitialized,\n        onCodeScanned: this.onCodeScanned,\n        onStarted: this.onStarted,\n        onStopped: this.onStopped,\n        onPreviewStarted: this.onPreviewStarted,\n        onPreviewStopped: this.onPreviewStopped,\n        onShutter: this.onShutter,\n        videoBitRateMultiplier: bitRateMultiplier,\n        videoBitRateOverride: bitRateOverride,\n        onOutputOrientationChanged: this.onOutputOrientationChanged,\n        onPreviewOrientationChanged: this.onPreviewOrientationChanged,\n        onError: this.onError,\n        codeScannerOptions: codeScanner,\n        enableFrameProcessor: frameProcessor != null,\n        enableBufferCompression: props.enableBufferCompression ?? shouldEnableBufferCompression,\n        preview: isRenderingWithSkia ? false : props.preview ?? true\n      }), isRenderingWithSkia && /*#__PURE__*/React.default.createElement(_skiaSkiaCameraCanvas.SkiaCameraCanvas, {\n        style: styles.customPreviewView,\n        offscreenTextures: frameProcessor.offscreenTextures,\n        resizeMode: props.resizeMode\n      }), enableFpsGraph && /*#__PURE__*/React.default.createElement(_FpsGraph.FpsGraph, {\n        style: styles.fpsGraph,\n        averageFpsSamples: this.state.averageFpsSamples,\n        targetMaxFps: props.format?.maxFps ?? 60\n      }));\n    }\n  }\n  //#endregion\n\n  const styles = StyleSheet.default.create({\n    customPreviewView: {\n      flex: 1\n    },\n    fpsGraph: {\n      elevation: 1,\n      position: 'absolute',\n      left: 15,\n      top: 30\n    }\n  });\n});","lineCount":688,"map":[[12,2,54,0,"Object"],[12,8,54,0],[12,9,54,0,"defineProperty"],[12,23,54,0],[12,24,54,0,"exports"],[12,31,54,0],[13,4,54,0,"enumerable"],[13,14,54,0],[14,4,54,0,"get"],[14,7,54,0],[14,18,54,0,"get"],[14,19,54,0],[15,6,54,0],[15,13,54,0,"Camera"],[15,19,54,0],[16,4,54,0],[17,2,54,0],[18,2,2,0],[18,6,2,0,"_react"],[18,12,2,0],[18,15,2,0,"require"],[18,22,2,0],[18,23,2,0,"_dependencyMap"],[18,37,2,0],[19,2,2,0],[19,6,2,0,"React"],[19,11,2,0],[19,14,2,0,"_interopDefault"],[19,29,2,0],[19,30,2,0,"_react"],[19,36,2,0],[20,2,2,26],[20,6,2,26,"_reactNativeWebDistExportsFindNodeHandle"],[20,46,2,26],[20,49,2,26,"require"],[20,56,2,26],[20,57,2,26,"_dependencyMap"],[20,71,2,26],[21,2,2,26],[21,6,2,26,"findNodeHandle"],[21,20,2,26],[21,23,2,26,"_interopDefault"],[21,38,2,26],[21,39,2,26,"_reactNativeWebDistExportsFindNodeHandle"],[21,79,2,26],[22,2,2,26],[22,6,2,26,"_reactNativeWebDistExportsStyleSheet"],[22,42,2,26],[22,45,2,26,"require"],[22,52,2,26],[22,53,2,26,"_dependencyMap"],[22,67,2,26],[23,2,2,26],[23,6,2,26,"StyleSheet"],[23,16,2,26],[23,19,2,26,"_interopDefault"],[23,34,2,26],[23,35,2,26,"_reactNativeWebDistExportsStyleSheet"],[23,71,2,26],[24,2,4,0],[24,6,4,0,"_CameraError"],[24,18,4,0],[24,21,4,0,"require"],[24,28,4,0],[24,29,4,0,"_dependencyMap"],[24,43,4,0],[25,2,5,0],[25,6,5,0,"_NativeCameraModule"],[25,25,5,0],[25,28,5,0,"require"],[25,35,5,0],[25,36,5,0,"_dependencyMap"],[25,50,5,0],[26,2,6,0],[26,6,6,0,"_frameProcessorsVisionCameraProxy"],[26,39,6,0],[26,42,6,0,"require"],[26,49,6,0],[26,50,6,0,"_dependencyMap"],[26,64,6,0],[27,2,7,0],[27,6,7,0,"_CameraDevices"],[27,20,7,0],[27,23,7,0,"require"],[27,30,7,0],[27,31,7,0,"_dependencyMap"],[27,45,7,0],[28,2,8,0],[28,6,8,0,"_skiaSkiaCameraCanvas"],[28,27,8,0],[28,30,8,0,"require"],[28,37,8,0],[28,38,8,0,"_dependencyMap"],[28,52,8,0],[29,2,9,0],[29,6,9,0,"_FpsGraph"],[29,15,9,0],[29,18,9,0,"require"],[29,25,9,0],[29,26,9,0,"_dependencyMap"],[29,40,9,0],[30,2,10,0],[30,6,10,0,"_NativeCameraView"],[30,23,10,0],[30,26,10,0,"require"],[30,33,10,0],[30,34,10,0,"_dependencyMap"],[30,48,10,0],[31,2,11,0],[31,6,11,0,"_RotationHelper"],[31,21,11,0],[31,24,11,0,"require"],[31,31,11,0],[31,32,11,0,"_dependencyMap"],[31,46,11,0],[32,2,1,0],[32,11,1,9,"_extends"],[32,19,1,17,"_extends"],[32,20,1,17],[32,22,1,20],[33,4,1,22],[33,11,1,29,"_extends"],[33,19,1,37],[33,22,1,40,"Object"],[33,28,1,46],[33,29,1,47,"assign"],[33,35,1,53],[33,38,1,56,"Object"],[33,44,1,62],[33,45,1,63,"assign"],[33,51,1,69],[33,52,1,70,"bind"],[33,56,1,74],[33,57,1,75],[33,58,1,76],[33,61,1,79],[33,71,1,89,"n"],[33,72,1,90],[33,74,1,92],[34,6,1,94],[34,11,1,99],[34,15,1,103,"e"],[34,16,1,104],[34,19,1,107],[34,20,1,108],[34,22,1,110,"e"],[34,23,1,111],[34,26,1,114,"arguments"],[34,35,1,123],[34,36,1,124,"length"],[34,42,1,130],[34,44,1,132,"e"],[34,45,1,133],[34,47,1,135],[34,49,1,137],[35,8,1,139],[35,12,1,143,"t"],[35,13,1,144],[35,16,1,147,"arguments"],[35,25,1,156],[35,26,1,157,"e"],[35,27,1,158],[35,28,1,159],[36,8,1,161],[36,13,1,166],[36,17,1,170,"r"],[36,18,1,171],[36,22,1,175,"t"],[36,23,1,176],[36,25,1,178],[36,26,1,179],[36,27,1,180],[36,28,1,181],[36,30,1,183,"hasOwnProperty"],[36,44,1,197],[36,45,1,198,"call"],[36,49,1,202],[36,50,1,203,"t"],[36,51,1,204],[36,53,1,206,"r"],[36,54,1,207],[36,55,1,208],[36,60,1,213,"n"],[36,61,1,214],[36,62,1,215,"r"],[36,63,1,216],[36,64,1,217],[36,67,1,220,"t"],[36,68,1,221],[36,69,1,222,"r"],[36,70,1,223],[36,71,1,224],[36,72,1,225],[37,6,1,227],[38,6,1,229],[38,13,1,236,"n"],[38,14,1,237],[39,4,1,239],[39,5,1,240],[39,7,1,242,"_extends"],[39,15,1,250],[39,16,1,251,"apply"],[39,21,1,256],[39,22,1,257],[39,26,1,261],[39,28,1,263,"arguments"],[39,37,1,272],[39,38,1,273],[40,2,1,275],[41,2,13,0],[43,2,15,0],[45,2,17,0],[45,11,17,9,"isSkiaFrameProcessor"],[45,31,17,29,"isSkiaFrameProcessor"],[45,32,17,30,"frameProcessor"],[45,46,17,44],[45,48,17,46],[46,4,18,2],[46,11,18,9,"frameProcessor"],[46,25,18,23],[46,27,18,25,"type"],[46,31,18,29],[46,36,18,34],[46,51,18,49],[47,2,19,0],[49,2,21,0],[50,2,22,0],[51,0,23,0],[52,0,24,0],[53,0,25,0],[54,0,26,0],[55,0,27,0],[56,0,28,0],[57,0,29,0],[58,0,30,0],[59,0,31,0],[60,0,32,0],[61,0,33,0],[62,0,34,0],[63,0,35,0],[64,0,36,0],[65,0,37,0],[66,0,38,0],[67,0,39,0],[68,0,40,0],[69,0,41,0],[70,0,42,0],[71,0,43,0],[72,0,44,0],[73,0,45,0],[74,0,46,0],[75,0,47,0],[76,0,48,0],[77,0,49,0],[78,0,50,0],[79,0,51,0],[80,0,52,0],[81,0,53,0],[82,2,54,7],[82,8,54,13,"Camera"],[82,14,54,19],[82,23,54,28,"React"],[82,28,54,33],[82,29,54,33,"default"],[82,36,54,33],[82,37,54,34,"PureComponent"],[82,50,54,47],[82,51,54,48],[83,4,55,2],[84,4,56,2],[84,11,56,9,"displayName"],[84,22,56,20],[84,25,56,23],[84,33,56,31],[85,4,57,2],[86,4,58,2,"displayName"],[86,15,58,13],[86,18,58,16,"Camera"],[86,24,58,22],[86,25,58,23,"displayName"],[86,36,58,34],[87,4,59,2,"isNativeViewMounted"],[87,23,59,21],[87,26,59,24],[87,31,59,29],[88,4,60,2,"lastUIRotation"],[88,18,60,16],[88,21,60,19,"undefined"],[88,30,60,28],[89,4,61,2,"rotationHelper"],[89,18,61,16],[89,21,61,19],[89,25,61,23,"RotationHelper"],[89,40,61,37],[89,41,61,37,"RotationHelper"],[89,55,61,37],[89,56,61,38],[89,57,61,39],[90,4,62,2],[91,4,63,2,"constructor"],[91,15,63,13,"constructor"],[91,16,63,14,"props"],[91,21,63,19],[91,23,63,21],[92,6,64,4],[92,11,64,9],[92,12,64,10,"props"],[92,17,64,15],[92,18,64,16],[93,6,65,4],[93,10,65,8],[93,11,65,9,"onViewReady"],[93,22,65,20],[93,25,65,23],[93,29,65,27],[93,30,65,28,"onViewReady"],[93,41,65,39],[93,42,65,40,"bind"],[93,46,65,44],[93,47,65,45],[93,51,65,49],[93,52,65,50],[94,6,66,4],[94,10,66,8],[94,11,66,9,"onAverageFpsChanged"],[94,30,66,28],[94,33,66,31],[94,37,66,35],[94,38,66,36,"onAverageFpsChanged"],[94,57,66,55],[94,58,66,56,"bind"],[94,62,66,60],[94,63,66,61],[94,67,66,65],[94,68,66,66],[95,6,67,4],[95,10,67,8],[95,11,67,9,"onInitialized"],[95,24,67,22],[95,27,67,25],[95,31,67,29],[95,32,67,30,"onInitialized"],[95,45,67,43],[95,46,67,44,"bind"],[95,50,67,48],[95,51,67,49],[95,55,67,53],[95,56,67,54],[96,6,68,4],[96,10,68,8],[96,11,68,9,"onStarted"],[96,20,68,18],[96,23,68,21],[96,27,68,25],[96,28,68,26,"onStarted"],[96,37,68,35],[96,38,68,36,"bind"],[96,42,68,40],[96,43,68,41],[96,47,68,45],[96,48,68,46],[97,6,69,4],[97,10,69,8],[97,11,69,9,"onStopped"],[97,20,69,18],[97,23,69,21],[97,27,69,25],[97,28,69,26,"onStopped"],[97,37,69,35],[97,38,69,36,"bind"],[97,42,69,40],[97,43,69,41],[97,47,69,45],[97,48,69,46],[98,6,70,4],[98,10,70,8],[98,11,70,9,"onPreviewStarted"],[98,27,70,25],[98,30,70,28],[98,34,70,32],[98,35,70,33,"onPreviewStarted"],[98,51,70,49],[98,52,70,50,"bind"],[98,56,70,54],[98,57,70,55],[98,61,70,59],[98,62,70,60],[99,6,71,4],[99,10,71,8],[99,11,71,9,"onPreviewStopped"],[99,27,71,25],[99,30,71,28],[99,34,71,32],[99,35,71,33,"onPreviewStopped"],[99,51,71,49],[99,52,71,50,"bind"],[99,56,71,54],[99,57,71,55],[99,61,71,59],[99,62,71,60],[100,6,72,4],[100,10,72,8],[100,11,72,9,"onShutter"],[100,20,72,18],[100,23,72,21],[100,27,72,25],[100,28,72,26,"onShutter"],[100,37,72,35],[100,38,72,36,"bind"],[100,42,72,40],[100,43,72,41],[100,47,72,45],[100,48,72,46],[101,6,73,4],[101,10,73,8],[101,11,73,9,"onOutputOrientationChanged"],[101,37,73,35],[101,40,73,38],[101,44,73,42],[101,45,73,43,"onOutputOrientationChanged"],[101,71,73,69],[101,72,73,70,"bind"],[101,76,73,74],[101,77,73,75],[101,81,73,79],[101,82,73,80],[102,6,74,4],[102,10,74,8],[102,11,74,9,"onPreviewOrientationChanged"],[102,38,74,36],[102,41,74,39],[102,45,74,43],[102,46,74,44,"onPreviewOrientationChanged"],[102,73,74,71],[102,74,74,72,"bind"],[102,78,74,76],[102,79,74,77],[102,83,74,81],[102,84,74,82],[103,6,75,4],[103,10,75,8],[103,11,75,9,"onError"],[103,18,75,16],[103,21,75,19],[103,25,75,23],[103,26,75,24,"onError"],[103,33,75,31],[103,34,75,32,"bind"],[103,38,75,36],[103,39,75,37],[103,43,75,41],[103,44,75,42],[104,6,76,4],[104,10,76,8],[104,11,76,9,"onCodeScanned"],[104,24,76,22],[104,27,76,25],[104,31,76,29],[104,32,76,30,"onCodeScanned"],[104,45,76,43],[104,46,76,44,"bind"],[104,50,76,48],[104,51,76,49],[104,55,76,53],[104,56,76,54],[105,6,77,4],[105,10,77,8],[105,11,77,9,"ref"],[105,14,77,12],[105,17,77,15],[105,30,77,28,"React"],[105,35,77,33],[105,36,77,33,"default"],[105,43,77,33],[105,44,77,34,"createRef"],[105,53,77,43],[105,54,77,44],[105,55,77,45],[106,6,78,4],[106,10,78,8],[106,11,78,9,"lastFrameProcessor"],[106,29,78,27],[106,32,78,30,"undefined"],[106,41,78,39],[107,6,79,4],[107,10,79,8],[107,11,79,9,"state"],[107,16,79,14],[107,19,79,17],[108,8,80,6,"isRecordingWithFlash"],[108,28,80,26],[108,30,80,28],[108,35,80,33],[109,8,81,6,"averageFpsSamples"],[109,25,81,23],[109,27,81,25],[110,6,82,4],[110,7,82,5],[111,4,83,2],[112,4,84,2],[112,8,84,6,"handle"],[112,14,84,12,"handle"],[112,15,84,12],[112,17,84,15],[113,6,85,4],[113,12,85,10,"nodeHandle"],[113,22,85,20],[113,25,85,23],[113,29,85,23,"findNodeHandle"],[113,43,85,37],[113,44,85,37,"default"],[113,51,85,37],[113,53,85,38],[113,57,85,42],[113,58,85,43,"ref"],[113,61,85,46],[113,62,85,47,"current"],[113,69,85,54],[113,70,85,55],[114,6,86,4],[114,10,86,8,"nodeHandle"],[114,20,86,18],[114,24,86,22],[114,28,86,26],[114,32,86,30,"nodeHandle"],[114,42,86,40],[114,47,86,45],[114,48,86,46],[114,49,86,47],[114,51,86,49],[115,8,87,6],[115,14,87,12],[115,18,87,16,"CameraRuntimeError"],[115,30,87,34],[115,31,87,34,"CameraRuntimeError"],[115,49,87,34],[115,50,87,35],[115,73,87,58],[115,75,87,60],[115,172,87,157],[115,173,87,158],[116,6,88,4],[117,6,89,4],[117,13,89,11,"nodeHandle"],[117,23,89,21],[118,4,90,2],[120,4,92,2],[121,4,93,2],[122,0,94,0],[123,0,95,0],[124,0,96,0],[125,0,97,0],[126,0,98,0],[127,0,99,0],[128,0,100,0],[129,0,101,0],[130,0,102,0],[131,0,103,0],[132,0,104,0],[133,0,105,0],[134,4,106,2],[134,10,106,8,"takePhoto"],[134,19,106,17,"takePhoto"],[134,20,106,18,"options"],[134,27,106,25],[134,29,106,27],[135,6,107,4],[135,10,107,8],[136,8,108,6],[136,15,108,13],[136,21,108,19,"CameraModule"],[136,40,108,31],[136,41,108,31,"CameraModule"],[136,53,108,31],[136,54,108,32,"takePhoto"],[136,63,108,41],[136,64,108,42],[136,68,108,46],[136,69,108,47,"handle"],[136,75,108,53],[136,77,108,55,"options"],[136,84,108,62],[136,88,108,66],[136,89,108,67],[136,90,108,68],[136,91,108,69],[137,6,109,4],[137,7,109,5],[137,8,109,6],[137,15,109,13,"e"],[137,16,109,14],[137,18,109,16],[138,8,110,6],[138,14,110,12],[138,18,110,12,"tryParseNativeCameraError"],[138,30,110,37],[138,31,110,37,"tryParseNativeCameraError"],[138,56,110,37],[138,58,110,38,"e"],[138,59,110,39],[138,60,110,40],[139,6,111,4],[140,4,112,2],[142,4,114,2],[143,0,115,0],[144,0,116,0],[145,0,117,0],[146,0,118,0],[147,0,119,0],[148,0,120,0],[149,0,121,0],[150,0,122,0],[151,0,123,0],[152,0,124,0],[153,0,125,0],[154,0,126,0],[155,0,127,0],[156,0,128,0],[157,4,129,2],[157,10,129,8,"takeSnapshot"],[157,22,129,20,"takeSnapshot"],[157,23,129,21,"options"],[157,30,129,28],[157,32,129,30],[158,6,130,4],[158,10,130,8],[159,8,131,6],[159,15,131,13],[159,21,131,19,"CameraModule"],[159,40,131,31],[159,41,131,31,"CameraModule"],[159,53,131,31],[159,54,131,32,"takeSnapshot"],[159,66,131,44],[159,67,131,45],[159,71,131,49],[159,72,131,50,"handle"],[159,78,131,56],[159,80,131,58,"options"],[159,87,131,65],[159,91,131,69],[159,92,131,70],[159,93,131,71],[159,94,131,72],[160,6,132,4],[160,7,132,5],[160,8,132,6],[160,15,132,13,"e"],[160,16,132,14],[160,18,132,16],[161,8,133,6],[161,14,133,12],[161,18,133,12,"tryParseNativeCameraError"],[161,30,133,37],[161,31,133,37,"tryParseNativeCameraError"],[161,56,133,37],[161,58,133,38,"e"],[161,59,133,39],[161,60,133,40],[162,6,134,4],[163,4,135,2],[164,4,136,2,"getBitRateMultiplier"],[164,24,136,22,"getBitRateMultiplier"],[164,25,136,23,"bitRate"],[164,32,136,30],[164,34,136,32],[165,6,137,4],[165,10,137,8],[165,17,137,15,"bitRate"],[165,24,137,22],[165,29,137,27],[165,37,137,35],[165,41,137,39,"bitRate"],[165,48,137,46],[165,52,137,50],[165,56,137,54],[165,58,137,56],[165,65,137,63],[165,66,137,64],[166,6,138,4],[166,14,138,12,"bitRate"],[166,21,138,19],[167,8,139,6],[167,13,139,11],[167,24,139,22],[168,10,140,8],[168,17,140,15],[168,20,140,18],[169,8,141,6],[169,13,141,11],[169,18,141,16],[170,10,142,8],[170,17,142,15],[170,20,142,18],[171,8,143,6],[171,13,143,11],[171,21,143,19],[172,10,144,8],[172,17,144,15],[172,18,144,16],[173,8,145,6],[173,13,145,11],[173,19,145,17],[174,10,146,8],[174,17,146,15],[174,20,146,18],[175,8,147,6],[175,13,147,11],[175,25,147,23],[176,10,148,8],[176,17,148,15],[176,20,148,18],[177,6,149,4],[178,4,150,2],[180,4,152,2],[181,0,153,0],[182,0,154,0],[183,0,155,0],[184,0,156,0],[185,0,157,0],[186,0,158,0],[187,0,159,0],[188,0,160,0],[189,0,161,0],[190,0,162,0],[191,0,163,0],[192,0,164,0],[193,0,165,0],[194,0,166,0],[195,0,167,0],[196,0,168,0],[197,4,169,2,"startRecording"],[197,18,169,16,"startRecording"],[197,19,169,17,"options"],[197,26,169,24],[197,28,169,26],[198,6,170,4],[198,12,170,10],[199,8,171,6,"onRecordingError"],[199,24,171,22],[200,8,172,6,"onRecordingFinished"],[200,27,172,25],[201,8,173,6],[201,11,173,9,"passThruOptions"],[202,6,174,4],[202,7,174,5],[202,10,174,8,"options"],[202,17,174,15],[203,6,175,4],[203,10,175,8],[203,17,175,15,"onRecordingError"],[203,33,175,31],[203,38,175,36],[203,48,175,46],[203,52,175,50],[203,59,175,57,"onRecordingFinished"],[203,78,175,76],[203,83,175,81],[203,93,175,91],[203,95,175,93],[203,101,175,99],[203,105,175,103,"CameraRuntimeError"],[203,117,175,121],[203,118,175,121,"CameraRuntimeError"],[203,136,175,121],[203,137,175,122],[203,166,175,151],[203,168,175,153],[203,237,175,222],[203,238,175,223],[204,6,176,4],[204,10,176,8,"options"],[204,17,176,15],[204,18,176,16,"flash"],[204,23,176,21],[204,28,176,26],[204,32,176,30],[204,34,176,32],[205,8,177,6],[206,8,178,6],[206,12,178,10],[206,13,178,11,"setState"],[206,21,178,19],[206,22,178,20],[207,10,179,8,"isRecordingWithFlash"],[207,30,179,28],[207,32,179,30],[208,8,180,6],[208,9,180,7],[208,10,180,8],[209,6,181,4],[210,6,182,4],[210,12,182,10,"onRecordCallback"],[210,28,182,26],[210,31,182,29,"onRecordCallback"],[210,32,182,30,"video"],[210,37,182,35],[210,39,182,37,"error"],[210,44,182,42],[210,49,182,47],[211,8,183,6],[211,12,183,10],[211,16,183,14],[211,17,183,15,"state"],[211,22,183,20],[211,23,183,21,"isRecordingWithFlash"],[211,43,183,41],[211,45,183,43],[212,10,184,8],[213,10,185,8],[213,14,185,12],[213,15,185,13,"setState"],[213,23,185,21],[213,24,185,22],[214,12,186,10,"isRecordingWithFlash"],[214,32,186,30],[214,34,186,32],[215,10,187,8],[215,11,187,9],[215,12,187,10],[216,8,188,6],[217,8,189,6],[217,12,189,10,"error"],[217,17,189,15],[217,21,189,19],[217,25,189,23],[217,27,189,25],[217,34,189,32,"onRecordingError"],[217,50,189,48],[217,51,189,49,"error"],[217,56,189,54],[217,57,189,55],[218,8,190,6],[218,12,190,10,"video"],[218,17,190,15],[218,21,190,19],[218,25,190,23],[218,27,190,25],[218,34,190,32,"onRecordingFinished"],[218,53,190,51],[218,54,190,52,"video"],[218,59,190,57],[218,60,190,58],[219,6,191,4],[219,7,191,5],[220,6,192,4],[220,12,192,10,"nativeRecordVideoOptions"],[220,36,192,34],[220,39,192,37,"passThruOptions"],[220,54,192,52],[221,6,193,4],[221,10,193,8],[222,8,194,6],[223,8,195,6,"CameraModule"],[223,27,195,18],[223,28,195,18,"CameraModule"],[223,40,195,18],[223,41,195,19,"startRecording"],[223,55,195,33],[223,56,195,34],[223,60,195,38],[223,61,195,39,"handle"],[223,67,195,45],[223,69,195,47,"nativeRecordVideoOptions"],[223,93,195,71],[223,95,195,73,"onRecordCallback"],[223,111,195,89],[223,112,195,90],[224,6,196,4],[224,7,196,5],[224,8,196,6],[224,15,196,13,"e"],[224,16,196,14],[224,18,196,16],[225,8,197,6],[225,14,197,12],[225,18,197,12,"tryParseNativeCameraError"],[225,30,197,37],[225,31,197,37,"tryParseNativeCameraError"],[225,56,197,37],[225,58,197,38,"e"],[225,59,197,39],[225,60,197,40],[226,6,198,4],[227,4,199,2],[229,4,201,2],[230,0,202,0],[231,0,203,0],[232,0,204,0],[233,0,205,0],[234,0,206,0],[235,0,207,0],[236,0,208,0],[237,0,209,0],[238,0,210,0],[239,0,211,0],[240,0,212,0],[241,0,213,0],[242,0,214,0],[243,0,215,0],[244,0,216,0],[245,0,217,0],[246,0,218,0],[247,0,219,0],[248,0,220,0],[249,0,221,0],[250,0,222,0],[251,0,223,0],[252,0,224,0],[253,4,225,2],[253,10,225,8,"pauseRecording"],[253,24,225,22,"pauseRecording"],[253,25,225,22],[253,27,225,25],[254,6,226,4],[254,10,226,8],[255,8,227,6],[255,15,227,13],[255,21,227,19,"CameraModule"],[255,40,227,31],[255,41,227,31,"CameraModule"],[255,53,227,31],[255,54,227,32,"pauseRecording"],[255,68,227,46],[255,69,227,47],[255,73,227,51],[255,74,227,52,"handle"],[255,80,227,58],[255,81,227,59],[256,6,228,4],[256,7,228,5],[256,8,228,6],[256,15,228,13,"e"],[256,16,228,14],[256,18,228,16],[257,8,229,6],[257,14,229,12],[257,18,229,12,"tryParseNativeCameraError"],[257,30,229,37],[257,31,229,37,"tryParseNativeCameraError"],[257,56,229,37],[257,58,229,38,"e"],[257,59,229,39],[257,60,229,40],[258,6,230,4],[259,4,231,2],[261,4,233,2],[262,0,234,0],[263,0,235,0],[264,0,236,0],[265,0,237,0],[266,0,238,0],[267,0,239,0],[268,0,240,0],[269,0,241,0],[270,0,242,0],[271,0,243,0],[272,0,244,0],[273,0,245,0],[274,0,246,0],[275,0,247,0],[276,0,248,0],[277,0,249,0],[278,0,250,0],[279,0,251,0],[280,0,252,0],[281,0,253,0],[282,0,254,0],[283,0,255,0],[284,0,256,0],[285,4,257,2],[285,10,257,8,"resumeRecording"],[285,25,257,23,"resumeRecording"],[285,26,257,23],[285,28,257,26],[286,6,258,4],[286,10,258,8],[287,8,259,6],[287,15,259,13],[287,21,259,19,"CameraModule"],[287,40,259,31],[287,41,259,31,"CameraModule"],[287,53,259,31],[287,54,259,32,"resumeRecording"],[287,69,259,47],[287,70,259,48],[287,74,259,52],[287,75,259,53,"handle"],[287,81,259,59],[287,82,259,60],[288,6,260,4],[288,7,260,5],[288,8,260,6],[288,15,260,13,"e"],[288,16,260,14],[288,18,260,16],[289,8,261,6],[289,14,261,12],[289,18,261,12,"tryParseNativeCameraError"],[289,30,261,37],[289,31,261,37,"tryParseNativeCameraError"],[289,56,261,37],[289,58,261,38,"e"],[289,59,261,39],[289,60,261,40],[290,6,262,4],[291,4,263,2],[293,4,265,2],[294,0,266,0],[295,0,267,0],[296,0,268,0],[297,0,269,0],[298,0,270,0],[299,0,271,0],[300,0,272,0],[301,0,273,0],[302,0,274,0],[303,0,275,0],[304,0,276,0],[305,0,277,0],[306,0,278,0],[307,0,279,0],[308,0,280,0],[309,0,281,0],[310,4,282,2],[310,10,282,8,"stopRecording"],[310,23,282,21,"stopRecording"],[310,24,282,21],[310,26,282,24],[311,6,283,4],[311,10,283,8],[312,8,284,6],[312,15,284,13],[312,21,284,19,"CameraModule"],[312,40,284,31],[312,41,284,31,"CameraModule"],[312,53,284,31],[312,54,284,32,"stopRecording"],[312,67,284,45],[312,68,284,46],[312,72,284,50],[312,73,284,51,"handle"],[312,79,284,57],[312,80,284,58],[313,6,285,4],[313,7,285,5],[313,8,285,6],[313,15,285,13,"e"],[313,16,285,14],[313,18,285,16],[314,8,286,6],[314,14,286,12],[314,18,286,12,"tryParseNativeCameraError"],[314,30,286,37],[314,31,286,37,"tryParseNativeCameraError"],[314,56,286,37],[314,58,286,38,"e"],[314,59,286,39],[314,60,286,40],[315,6,287,4],[316,4,288,2],[318,4,290,2],[319,0,291,0],[320,0,292,0],[321,0,293,0],[322,0,294,0],[323,0,295,0],[324,0,296,0],[325,0,297,0],[326,0,298,0],[327,0,299,0],[328,0,300,0],[329,0,301,0],[330,0,302,0],[331,0,303,0],[332,0,304,0],[333,0,305,0],[334,0,306,0],[335,0,307,0],[336,0,308,0],[337,0,309,0],[338,0,310,0],[339,0,311,0],[340,0,312,0],[341,0,313,0],[342,4,314,2],[342,10,314,8,"cancelRecording"],[342,25,314,23,"cancelRecording"],[342,26,314,23],[342,28,314,26],[343,6,315,4],[343,10,315,8],[344,8,316,6],[344,15,316,13],[344,21,316,19,"CameraModule"],[344,40,316,31],[344,41,316,31,"CameraModule"],[344,53,316,31],[344,54,316,32,"cancelRecording"],[344,69,316,47],[344,70,316,48],[344,74,316,52],[344,75,316,53,"handle"],[344,81,316,59],[344,82,316,60],[345,6,317,4],[345,7,317,5],[345,8,317,6],[345,15,317,13,"e"],[345,16,317,14],[345,18,317,16],[346,8,318,6],[346,14,318,12],[346,18,318,12,"tryParseNativeCameraError"],[346,30,318,37],[346,31,318,37,"tryParseNativeCameraError"],[346,56,318,37],[346,58,318,38,"e"],[346,59,318,39],[346,60,318,40],[347,6,319,4],[348,4,320,2],[350,4,322,2],[351,0,323,0],[352,0,324,0],[353,0,325,0],[354,0,326,0],[355,0,327,0],[356,0,328,0],[357,0,329,0],[358,0,330,0],[359,0,331,0],[360,0,332,0],[361,0,333,0],[362,0,334,0],[363,0,335,0],[364,0,336,0],[365,0,337,0],[366,0,338,0],[367,0,339,0],[368,0,340,0],[369,4,341,2],[369,10,341,8,"focus"],[369,15,341,13,"focus"],[369,16,341,14,"point"],[369,21,341,19],[369,23,341,21],[370,6,342,4],[370,10,342,8],[371,8,343,6],[371,15,343,13],[371,21,343,19,"CameraModule"],[371,40,343,31],[371,41,343,31,"CameraModule"],[371,53,343,31],[371,54,343,32,"focus"],[371,59,343,37],[371,60,343,38],[371,64,343,42],[371,65,343,43,"handle"],[371,71,343,49],[371,73,343,51,"point"],[371,78,343,56],[371,79,343,57],[372,6,344,4],[372,7,344,5],[372,8,344,6],[372,15,344,13,"e"],[372,16,344,14],[372,18,344,16],[373,8,345,6],[373,14,345,12],[373,18,345,12,"tryParseNativeCameraError"],[373,30,345,37],[373,31,345,37,"tryParseNativeCameraError"],[373,56,345,37],[373,58,345,38,"e"],[373,59,345,39],[373,60,345,40],[374,6,346,4],[375,4,347,2],[376,4,348,2],[378,4,350,2],[379,4,351,2],[380,0,352,0],[381,0,353,0],[382,0,354,0],[383,0,355,0],[384,0,356,0],[385,0,357,0],[386,0,358,0],[387,0,359,0],[388,0,360,0],[389,0,361,0],[390,0,362,0],[391,0,363,0],[392,0,364,0],[393,0,365,0],[394,0,366,0],[395,0,367,0],[396,4,368,2],[396,11,368,9,"getAvailableCameraDevices"],[396,36,368,34,"getAvailableCameraDevices"],[396,37,368,34],[396,39,368,37],[397,6,369,4],[397,13,369,11,"CameraDevices"],[397,27,369,24],[397,28,369,24,"CameraDevices"],[397,41,369,24],[397,42,369,25,"getAvailableCameraDevices"],[397,67,369,50],[397,68,369,51],[397,69,369,52],[398,4,370,2],[399,4,371,2],[400,0,372,0],[401,0,373,0],[402,0,374,0],[403,0,375,0],[404,0,376,0],[405,4,377,2],[405,11,377,9,"addCameraDevicesChangedListener"],[405,42,377,40,"addCameraDevicesChangedListener"],[405,43,377,41,"listener"],[405,51,377,49],[405,53,377,51],[406,6,378,4],[406,13,378,11,"CameraDevices"],[406,27,378,24],[406,28,378,24,"CameraDevices"],[406,41,378,24],[406,42,378,25,"addCameraDevicesChangedListener"],[406,73,378,56],[406,74,378,57,"listener"],[406,82,378,65],[406,83,378,66],[407,4,379,2],[408,4,380,2],[409,0,381,0],[410,0,382,0],[411,0,383,0],[412,0,384,0],[413,0,385,0],[414,4,386,2],[414,11,386,9,"getCameraPermissionStatus"],[414,36,386,34,"getCameraPermissionStatus"],[414,37,386,34],[414,39,386,37],[415,6,387,4],[415,13,387,11,"CameraModule"],[415,32,387,23],[415,33,387,23,"CameraModule"],[415,45,387,23],[415,46,387,24,"getCameraPermissionStatus"],[415,71,387,49],[415,72,387,50],[415,73,387,51],[416,4,388,2],[417,4,389,2],[418,0,390,0],[419,0,391,0],[420,0,392,0],[421,0,393,0],[422,0,394,0],[423,0,395,0],[424,4,396,2],[424,11,396,9,"getMicrophonePermissionStatus"],[424,40,396,38,"getMicrophonePermissionStatus"],[424,41,396,38],[424,43,396,41],[425,6,397,4],[425,13,397,11,"CameraModule"],[425,32,397,23],[425,33,397,23,"CameraModule"],[425,45,397,23],[425,46,397,24,"getMicrophonePermissionStatus"],[425,75,397,53],[425,76,397,54],[425,77,397,55],[426,4,398,2],[427,4,399,2],[428,0,400,0],[429,0,401,0],[430,0,402,0],[431,0,403,0],[432,0,404,0],[433,0,405,0],[434,0,406,0],[435,0,407,0],[436,0,408,0],[437,4,409,2],[437,11,409,9,"getLocationPermissionStatus"],[437,38,409,36,"getLocationPermissionStatus"],[437,39,409,36],[437,41,409,39],[438,6,410,4],[438,13,410,11,"CameraModule"],[438,32,410,23],[438,33,410,23,"CameraModule"],[438,45,410,23],[438,46,410,24,"getLocationPermissionStatus"],[438,73,410,51],[438,74,410,52],[438,75,410,53],[439,4,411,2],[440,4,412,2],[441,0,413,0],[442,0,414,0],[443,0,415,0],[444,0,416,0],[445,0,417,0],[446,0,418,0],[447,0,419,0],[448,0,420,0],[449,4,421,2],[449,17,421,15,"requestCameraPermission"],[449,40,421,38,"requestCameraPermission"],[449,41,421,38],[449,43,421,41],[450,6,422,4],[450,10,422,8],[451,8,423,6],[451,15,423,13],[451,21,423,19,"CameraModule"],[451,40,423,31],[451,41,423,31,"CameraModule"],[451,53,423,31],[451,54,423,32,"requestCameraPermission"],[451,77,423,55],[451,78,423,56],[451,79,423,57],[452,6,424,4],[452,7,424,5],[452,8,424,6],[452,15,424,13,"e"],[452,16,424,14],[452,18,424,16],[453,8,425,6],[453,14,425,12],[453,18,425,12,"tryParseNativeCameraError"],[453,30,425,37],[453,31,425,37,"tryParseNativeCameraError"],[453,56,425,37],[453,58,425,38,"e"],[453,59,425,39],[453,60,425,40],[454,6,426,4],[455,4,427,2],[456,4,428,2],[457,0,429,0],[458,0,430,0],[459,0,431,0],[460,0,432,0],[461,0,433,0],[462,0,434,0],[463,0,435,0],[464,0,436,0],[465,4,437,2],[465,17,437,15,"requestMicrophonePermission"],[465,44,437,42,"requestMicrophonePermission"],[465,45,437,42],[465,47,437,45],[466,6,438,4],[466,10,438,8],[467,8,439,6],[467,15,439,13],[467,21,439,19,"CameraModule"],[467,40,439,31],[467,41,439,31,"CameraModule"],[467,53,439,31],[467,54,439,32,"requestMicrophonePermission"],[467,81,439,59],[467,82,439,60],[467,83,439,61],[468,6,440,4],[468,7,440,5],[468,8,440,6],[468,15,440,13,"e"],[468,16,440,14],[468,18,440,16],[469,8,441,6],[469,14,441,12],[469,18,441,12,"tryParseNativeCameraError"],[469,30,441,37],[469,31,441,37,"tryParseNativeCameraError"],[469,56,441,37],[469,58,441,38,"e"],[469,59,441,39],[469,60,441,40],[470,6,442,4],[471,4,443,2],[472,4,444,2],[473,0,445,0],[474,0,446,0],[475,0,447,0],[476,0,448,0],[477,0,449,0],[478,0,450,0],[479,0,451,0],[480,0,452,0],[481,4,453,2],[481,17,453,15,"requestLocationPermission"],[481,42,453,40,"requestLocationPermission"],[481,43,453,40],[481,45,453,43],[482,6,454,4],[482,10,454,8],[483,8,455,6],[483,15,455,13],[483,21,455,19,"CameraModule"],[483,40,455,31],[483,41,455,31,"CameraModule"],[483,53,455,31],[483,54,455,32,"requestLocationPermission"],[483,79,455,57],[483,80,455,58],[483,81,455,59],[484,6,456,4],[484,7,456,5],[484,8,456,6],[484,15,456,13,"e"],[484,16,456,14],[484,18,456,16],[485,8,457,6],[485,14,457,12],[485,18,457,12,"tryParseNativeCameraError"],[485,30,457,37],[485,31,457,37,"tryParseNativeCameraError"],[485,56,457,37],[485,58,457,38,"e"],[485,59,457,39],[485,60,457,40],[486,6,458,4],[487,4,459,2],[488,4,460,2],[490,4,462,2],[491,4,463,2,"onError"],[491,11,463,9,"onError"],[491,12,463,10,"event"],[491,17,463,15],[491,19,463,17],[492,6,464,4],[492,12,464,10,"error"],[492,17,464,15],[492,20,464,18,"event"],[492,25,464,23],[492,26,464,24,"nativeEvent"],[492,37,464,35],[493,6,465,4],[493,12,465,10,"cause"],[493,17,465,15],[493,20,465,18],[493,24,465,18,"isErrorWithCause"],[493,36,465,34],[493,37,465,34,"isErrorWithCause"],[493,53,465,34],[493,55,465,35,"error"],[493,60,465,40],[493,61,465,41,"cause"],[493,66,465,46],[493,67,465,47],[493,70,465,50,"error"],[493,75,465,55],[493,76,465,56,"cause"],[493,81,465,61],[493,84,465,64,"undefined"],[493,93,465,73],[494,6,466,4],[495,6,467,4],[495,12,467,10,"cameraError"],[495,23,467,21],[495,26,467,24],[495,30,467,28,"CameraRuntimeError"],[495,42,467,46],[495,43,467,46,"CameraRuntimeError"],[495,61,467,46],[495,62,467,47,"error"],[495,67,467,52],[495,68,467,53,"code"],[495,72,467,57],[495,74,467,59,"error"],[495,79,467,64],[495,80,467,65,"message"],[495,87,467,72],[495,89,467,74,"cause"],[495,94,467,79],[495,95,467,80],[496,6,468,4],[496,10,468,8],[496,14,468,12],[496,15,468,13,"props"],[496,20,468,18],[496,21,468,19,"onError"],[496,28,468,26],[496,32,468,30],[496,36,468,34],[496,38,468,36],[497,8,469,6],[497,12,469,10],[497,13,469,11,"props"],[497,18,469,16],[497,19,469,17,"onError"],[497,26,469,24],[497,27,469,25,"cameraError"],[497,38,469,36],[497,39,469,37],[498,6,470,4],[498,7,470,5],[498,13,470,11],[499,8,471,6],[500,8,472,6,"console"],[500,15,472,13],[500,16,472,14,"error"],[500,21,472,19],[500,22,472,20,"cameraError"],[500,33,472,31],[500,34,472,32],[501,6,473,4],[502,4,474,2],[503,4,475,2,"onInitialized"],[503,17,475,15,"onInitialized"],[503,18,475,15],[503,20,475,18],[504,6,476,4],[504,10,476,8],[504,11,476,9,"props"],[504,16,476,14],[504,17,476,15,"onInitialized"],[504,30,476,28],[504,33,476,31],[504,34,476,32],[505,4,477,2],[506,4,478,2,"onStarted"],[506,13,478,11,"onStarted"],[506,14,478,11],[506,16,478,14],[507,6,479,4],[507,10,479,8],[507,11,479,9,"props"],[507,16,479,14],[507,17,479,15,"onStarted"],[507,26,479,24],[507,29,479,27],[507,30,479,28],[508,4,480,2],[509,4,481,2,"onStopped"],[509,13,481,11,"onStopped"],[509,14,481,11],[509,16,481,14],[510,6,482,4],[510,10,482,8],[510,11,482,9,"props"],[510,16,482,14],[510,17,482,15,"onStopped"],[510,26,482,24],[510,29,482,27],[510,30,482,28],[511,4,483,2],[512,4,484,2,"onPreviewStarted"],[512,20,484,18,"onPreviewStarted"],[512,21,484,18],[512,23,484,21],[513,6,485,4],[513,10,485,8],[513,11,485,9,"props"],[513,16,485,14],[513,17,485,15,"onPreviewStarted"],[513,33,485,31],[513,36,485,34],[513,37,485,35],[514,4,486,2],[515,4,487,2,"onPreviewStopped"],[515,20,487,18,"onPreviewStopped"],[515,21,487,18],[515,23,487,21],[516,6,488,4],[516,10,488,8],[516,11,488,9,"props"],[516,16,488,14],[516,17,488,15,"onPreviewStopped"],[516,33,488,31],[516,36,488,34],[516,37,488,35],[517,4,489,2],[518,4,490,2,"onShutter"],[518,13,490,11,"onShutter"],[518,14,490,12,"event"],[518,19,490,17],[518,21,490,19],[519,6,491,4],[519,10,491,8],[519,11,491,9,"props"],[519,16,491,14],[519,17,491,15,"onShutter"],[519,26,491,24],[519,29,491,27,"event"],[519,34,491,32],[519,35,491,33,"nativeEvent"],[519,46,491,44],[519,47,491,45],[520,4,492,2],[521,4,493,2,"onOutputOrientationChanged"],[521,30,493,28,"onOutputOrientationChanged"],[521,31,493,29],[522,6,494,4,"nativeEvent"],[522,17,494,15],[522,19,494,17],[523,8,495,6,"outputOrientation"],[524,6,496,4],[525,4,497,2],[525,5,497,3],[525,7,497,5],[526,6,498,4],[526,10,498,8],[526,11,498,9,"rotationHelper"],[526,25,498,23],[526,26,498,24,"outputOrientation"],[526,43,498,41],[526,46,498,44,"outputOrientation"],[526,63,498,61],[527,6,499,4],[527,10,499,8],[527,11,499,9,"props"],[527,16,499,14],[527,17,499,15,"onOutputOrientationChanged"],[527,43,499,41],[527,46,499,44,"outputOrientation"],[527,63,499,61],[527,64,499,62],[528,6,500,4],[528,10,500,8],[528,11,500,9,"maybeUpdateUIRotation"],[528,32,500,30],[528,33,500,31],[528,34,500,32],[529,4,501,2],[530,4,502,2,"onPreviewOrientationChanged"],[530,31,502,29,"onPreviewOrientationChanged"],[530,32,502,30],[531,6,503,4,"nativeEvent"],[531,17,503,15],[531,19,503,17],[532,8,504,6,"previewOrientation"],[533,6,505,4],[534,4,506,2],[534,5,506,3],[534,7,506,5],[535,6,507,4],[535,10,507,8],[535,11,507,9,"rotationHelper"],[535,25,507,23],[535,26,507,24,"previewOrientation"],[535,44,507,42],[535,47,507,45,"previewOrientation"],[535,65,507,63],[536,6,508,4],[536,10,508,8],[536,11,508,9,"props"],[536,16,508,14],[536,17,508,15,"onPreviewOrientationChanged"],[536,44,508,42],[536,47,508,45,"previewOrientation"],[536,65,508,63],[536,66,508,64],[537,6,509,4],[537,10,509,8],[537,11,509,9,"maybeUpdateUIRotation"],[537,32,509,30],[537,33,509,31],[537,34,509,32],[538,6,510,4],[538,10,510,8,"isSkiaFrameProcessor"],[538,30,510,28],[538,31,510,29],[538,35,510,33],[538,36,510,34,"props"],[538,41,510,39],[538,42,510,40,"frameProcessor"],[538,56,510,54],[538,57,510,55],[538,59,510,57],[539,8,511,6],[540,8,512,6],[540,12,512,10],[540,13,512,11,"props"],[540,18,512,16],[540,19,512,17,"frameProcessor"],[540,33,512,31],[540,34,512,32,"previewOrientation"],[540,52,512,50],[540,53,512,51,"value"],[540,58,512,56],[540,61,512,59,"previewOrientation"],[540,79,512,77],[541,6,513,4],[542,4,514,2],[543,4,515,2,"maybeUpdateUIRotation"],[543,25,515,23,"maybeUpdateUIRotation"],[543,26,515,23],[543,28,515,26],[544,6,516,4],[544,12,516,10,"uiRotation"],[544,22,516,20],[544,25,516,23],[544,29,516,27],[544,30,516,28,"rotationHelper"],[544,44,516,42],[544,45,516,43,"uiRotation"],[544,55,516,53],[545,6,517,4],[545,10,517,8,"uiRotation"],[545,20,517,18],[545,25,517,23],[545,29,517,27],[545,30,517,28,"lastUIRotation"],[545,44,517,42],[545,46,517,44],[546,8,518,6],[546,12,518,10],[546,13,518,11,"props"],[546,18,518,16],[546,19,518,17,"onUIRotationChanged"],[546,38,518,36],[546,41,518,39,"uiRotation"],[546,51,518,49],[546,52,518,50],[547,8,519,6],[547,12,519,10],[547,13,519,11,"lastUIRotation"],[547,27,519,25],[547,30,519,28,"uiRotation"],[547,40,519,38],[548,6,520,4],[549,4,521,2],[550,4,522,2],[552,4,524,2,"onCodeScanned"],[552,17,524,15,"onCodeScanned"],[552,18,524,16,"event"],[552,23,524,21],[552,25,524,23],[553,6,525,4],[553,12,525,10,"codeScanner"],[553,23,525,21],[553,26,525,24],[553,30,525,28],[553,31,525,29,"props"],[553,36,525,34],[553,37,525,35,"codeScanner"],[553,48,525,46],[554,6,526,4],[554,10,526,8,"codeScanner"],[554,21,526,19],[554,25,526,23],[554,29,526,27],[554,31,526,29],[555,6,527,4,"codeScanner"],[555,17,527,15],[555,18,527,16,"onCodeScanned"],[555,31,527,29],[555,32,527,30,"event"],[555,37,527,35],[555,38,527,36,"nativeEvent"],[555,49,527,47],[555,50,527,48,"codes"],[555,55,527,53],[555,57,527,55,"event"],[555,62,527,60],[555,63,527,61,"nativeEvent"],[555,74,527,72],[555,75,527,73,"frame"],[555,80,527,78],[555,81,527,79],[556,4,528,2],[558,4,530,2],[559,4,531,2,"setFrameProcessor"],[559,21,531,19,"setFrameProcessor"],[559,22,531,20,"frameProcessor"],[559,36,531,34],[559,38,531,36],[560,6,532,4,"VisionCameraProxy"],[560,39,532,21],[560,40,532,21,"VisionCameraProxy"],[560,57,532,21],[560,58,532,22,"setFrameProcessor"],[560,75,532,39],[560,76,532,40],[560,80,532,44],[560,81,532,45,"handle"],[560,87,532,51],[560,89,532,53,"frameProcessor"],[560,103,532,67],[560,104,532,68],[561,4,533,2],[562,4,534,2,"unsetFrameProcessor"],[562,23,534,21,"unsetFrameProcessor"],[562,24,534,21],[562,26,534,24],[563,6,535,4,"VisionCameraProxy"],[563,39,535,21],[563,40,535,21,"VisionCameraProxy"],[563,57,535,21],[563,58,535,22,"removeFrameProcessor"],[563,78,535,42],[563,79,535,43],[563,83,535,47],[563,84,535,48,"handle"],[563,90,535,54],[563,91,535,55],[564,4,536,2],[565,4,537,2,"onViewReady"],[565,15,537,13,"onViewReady"],[565,16,537,13],[565,18,537,16],[566,6,538,4],[566,10,538,8],[566,11,538,9,"isNativeViewMounted"],[566,30,538,28],[566,33,538,31],[566,37,538,35],[567,6,539,4],[567,10,539,8],[567,14,539,12],[567,15,539,13,"props"],[567,20,539,18],[567,21,539,19,"frameProcessor"],[567,35,539,33],[567,39,539,37],[567,43,539,41],[567,45,539,43],[568,8,540,6],[569,8,541,6],[569,12,541,10],[569,13,541,11,"setFrameProcessor"],[569,30,541,28],[569,31,541,29],[569,35,541,33],[569,36,541,34,"props"],[569,41,541,39],[569,42,541,40,"frameProcessor"],[569,56,541,54],[569,57,541,55,"frameProcessor"],[569,71,541,69],[569,72,541,70],[570,8,542,6],[570,12,542,10],[570,13,542,11,"lastFrameProcessor"],[570,31,542,29],[570,34,542,32],[570,38,542,36],[570,39,542,37,"props"],[570,44,542,42],[570,45,542,43,"frameProcessor"],[570,59,542,57],[570,60,542,58,"frameProcessor"],[570,74,542,72],[571,6,543,4],[572,4,544,2],[573,4,545,2,"onAverageFpsChanged"],[573,23,545,21,"onAverageFpsChanged"],[573,24,545,22],[574,6,546,4,"nativeEvent"],[574,17,546,15],[574,19,546,17],[575,8,547,6,"averageFps"],[576,6,548,4],[577,4,549,2],[577,5,549,3],[577,7,549,5],[578,6,550,4],[578,10,550,8],[578,11,550,9,"setState"],[578,19,550,17],[578,20,550,18,"state"],[578,25,550,23],[578,29,550,27],[579,8,551,6],[579,14,551,12,"averageFpsSamples"],[579,31,551,29],[579,34,551,32],[579,35,551,33],[579,38,551,36,"state"],[579,43,551,41],[579,44,551,42,"averageFpsSamples"],[579,61,551,59],[579,63,551,61,"averageFps"],[579,73,551,71],[579,74,551,72],[580,8,552,6],[580,15,552,13,"averageFpsSamples"],[580,32,552,30],[580,33,552,31,"length"],[580,39,552,37],[580,43,552,41,"MAX_BARS"],[580,52,552,49],[580,53,552,49,"MAX_BARS"],[580,61,552,49],[580,64,552,52],[580,65,552,53],[580,67,552,55],[581,10,553,8],[582,10,554,8,"averageFpsSamples"],[582,27,554,25],[582,28,554,26,"shift"],[582,33,554,31],[582,34,554,32],[582,35,554,33],[583,8,555,6],[584,8,556,6],[584,15,556,13],[585,10,557,8],[585,13,557,11,"state"],[585,18,557,16],[586,10,558,8,"averageFpsSamples"],[586,27,558,25],[586,29,558,27,"averageFpsSamples"],[587,8,559,6],[587,9,559,7],[588,6,560,4],[588,7,560,5],[588,8,560,6],[589,4,561,2],[591,4,563,2],[592,4,564,2,"componentDidUpdate"],[592,22,564,20,"componentDidUpdate"],[592,23,564,20],[592,25,564,23],[593,6,565,4],[593,10,565,8],[593,11,565,9],[593,15,565,13],[593,16,565,14,"isNativeViewMounted"],[593,35,565,33],[593,37,565,35],[594,6,566,4],[594,12,566,10,"frameProcessor"],[594,26,566,24],[594,29,566,27],[594,33,566,31],[594,34,566,32,"props"],[594,39,566,37],[594,40,566,38,"frameProcessor"],[594,54,566,52],[595,6,567,4],[595,10,567,8,"frameProcessor"],[595,24,567,22],[595,26,567,24,"frameProcessor"],[595,40,567,38],[595,45,567,43],[595,49,567,47],[595,50,567,48,"lastFrameProcessor"],[595,68,567,66],[595,70,567,68],[596,8,568,6],[597,8,569,6],[597,12,569,10,"frameProcessor"],[597,26,569,24],[597,30,569,28],[597,34,569,32],[597,36,569,34],[597,40,569,38],[597,41,569,39,"setFrameProcessor"],[597,58,569,56],[597,59,569,57,"frameProcessor"],[597,73,569,71],[597,74,569,72,"frameProcessor"],[597,88,569,86],[597,89,569,87],[597,90,569,88],[597,95,569,93],[597,99,569,97],[597,100,569,98,"unsetFrameProcessor"],[597,119,569,117],[597,120,569,118],[597,121,569,119],[598,8,570,6],[598,12,570,10],[598,13,570,11,"lastFrameProcessor"],[598,31,570,29],[598,34,570,32,"frameProcessor"],[598,48,570,46],[598,50,570,48,"frameProcessor"],[598,64,570,62],[599,6,571,4],[600,4,572,2],[601,4,573,2],[603,4,575,2],[604,4,576,2,"render"],[604,10,576,8,"render"],[604,11,576,8],[604,13,576,11],[605,6,577,4],[606,6,578,4],[606,12,578,10],[607,8,579,6,"device"],[607,14,579,12],[608,8,580,6,"frameProcessor"],[608,22,580,20],[609,8,581,6,"codeScanner"],[609,19,581,17],[610,8,582,6,"enableFpsGraph"],[610,22,582,20],[611,8,583,6,"fps"],[611,11,583,9],[612,8,584,6,"videoBitRate"],[612,20,584,18],[613,8,585,6],[613,11,585,9,"props"],[614,6,586,4],[614,7,586,5],[614,10,586,8],[614,14,586,12],[614,15,586,13,"props"],[614,20,586,18],[616,6,588,4],[617,6,589,4],[617,10,589,8,"device"],[617,16,589,14],[617,20,589,18],[617,24,589,22],[617,26,589,24],[618,8,590,6],[618,14,590,12],[618,18,590,16,"CameraRuntimeError"],[618,30,590,34],[618,31,590,34,"CameraRuntimeError"],[618,49,590,34],[618,50,590,35],[618,68,590,53],[618,70,590,55],[618,200,590,185],[618,201,590,186],[619,6,591,4],[620,6,592,4],[620,12,592,10,"shouldEnableBufferCompression"],[620,41,592,39],[620,44,592,42,"props"],[620,49,592,47],[620,50,592,48,"video"],[620,55,592,53],[620,60,592,58],[620,64,592,62],[620,68,592,66,"frameProcessor"],[620,82,592,80],[620,86,592,84],[620,90,592,88],[621,6,593,4],[621,12,593,10,"torch"],[621,17,593,15],[621,20,593,18],[621,24,593,22],[621,25,593,23,"state"],[621,30,593,28],[621,31,593,29,"isRecordingWithFlash"],[621,51,593,49],[621,54,593,52],[621,58,593,56],[621,61,593,59,"props"],[621,66,593,64],[621,67,593,65,"torch"],[621,72,593,70],[622,6,594,4],[622,12,594,10,"isRenderingWithSkia"],[622,31,594,29],[622,34,594,32,"isSkiaFrameProcessor"],[622,54,594,52],[622,55,594,53,"frameProcessor"],[622,69,594,67],[622,70,594,68],[623,6,595,4],[623,12,595,10,"shouldBeMirrored"],[623,28,595,26],[623,31,595,29,"device"],[623,37,595,35],[623,38,595,36,"position"],[623,46,595,44],[623,51,595,49],[623,58,595,56],[625,6,597,4],[626,6,598,4],[626,12,598,10,"minFps"],[626,18,598,16],[626,21,598,19,"fps"],[626,24,598,22],[626,28,598,26],[626,32,598,30],[626,35,598,33,"undefined"],[626,44,598,42],[626,47,598,45],[626,54,598,52,"fps"],[626,57,598,55],[626,62,598,60],[626,70,598,68],[626,73,598,71,"fps"],[626,76,598,74],[626,79,598,77,"fps"],[626,82,598,80],[626,83,598,81],[626,84,598,82],[626,85,598,83],[627,6,599,4],[627,12,599,10,"maxFps"],[627,18,599,16],[627,21,599,19,"fps"],[627,24,599,22],[627,28,599,26],[627,32,599,30],[627,35,599,33,"undefined"],[627,44,599,42],[627,47,599,45],[627,54,599,52,"fps"],[627,57,599,55],[627,62,599,60],[627,70,599,68],[627,73,599,71,"fps"],[627,76,599,74],[627,79,599,77,"fps"],[627,82,599,80],[627,83,599,81],[627,84,599,82],[627,85,599,83],[629,6,601,4],[630,6,602,4],[630,10,602,8,"bitRateMultiplier"],[630,27,602,25],[631,6,603,4],[631,10,603,8,"bitRateOverride"],[631,25,603,23],[632,6,604,4],[632,10,604,8],[632,17,604,15,"videoBitRate"],[632,29,604,27],[632,34,604,32],[632,42,604,40],[632,44,604,42],[633,8,605,6],[634,8,606,6,"bitRateOverride"],[634,23,606,21],[634,26,606,24,"videoBitRate"],[634,38,606,36],[635,6,607,4],[635,7,607,5],[635,13,607,11],[635,17,607,15],[635,24,607,22,"videoBitRate"],[635,36,607,34],[635,41,607,39],[635,49,607,47],[635,53,607,51,"videoBitRate"],[635,65,607,63],[635,70,607,68],[635,78,607,76],[635,80,607,78],[636,8,608,6],[637,8,609,6,"bitRateMultiplier"],[637,25,609,23],[637,28,609,26],[637,32,609,30],[637,33,609,31,"getBitRateMultiplier"],[637,53,609,51],[637,54,609,52,"videoBitRate"],[637,66,609,64],[637,67,609,65],[638,6,610,4],[639,6,611,4],[639,13,611,11],[639,26,611,24,"React"],[639,31,611,29],[639,32,611,29,"default"],[639,39,611,29],[639,40,611,30,"createElement"],[639,53,611,43],[639,54,611,44,"NativeCameraView"],[639,71,611,60],[639,72,611,60,"NativeCameraView"],[639,88,611,60],[639,90,611,62,"_extends"],[639,98,611,70],[639,99,611,71],[639,100,611,72],[639,101,611,73],[639,103,611,75,"props"],[639,108,611,80],[639,110,611,82],[640,8,612,6,"cameraId"],[640,16,612,14],[640,18,612,16,"device"],[640,24,612,22],[640,25,612,23,"id"],[640,27,612,25],[641,8,613,6,"ref"],[641,11,613,9],[641,13,613,11],[641,17,613,15],[641,18,613,16,"ref"],[641,21,613,19],[642,8,614,6,"torch"],[642,13,614,11],[642,15,614,13,"torch"],[642,20,614,18],[643,8,615,6,"minFps"],[643,14,615,12],[643,16,615,14,"minFps"],[643,22,615,20],[644,8,616,6,"maxFps"],[644,14,616,12],[644,16,616,14,"maxFps"],[644,22,616,20],[645,8,617,6,"isMirrored"],[645,18,617,16],[645,20,617,18,"props"],[645,25,617,23],[645,26,617,24,"isMirrored"],[645,36,617,34],[645,40,617,38,"shouldBeMirrored"],[645,56,617,54],[646,8,618,6,"onViewReady"],[646,19,618,17],[646,21,618,19],[646,25,618,23],[646,26,618,24,"onViewReady"],[646,37,618,35],[647,8,619,6,"onAverageFpsChanged"],[647,27,619,25],[647,29,619,27,"enableFpsGraph"],[647,43,619,41],[647,46,619,44],[647,50,619,48],[647,51,619,49,"onAverageFpsChanged"],[647,70,619,68],[647,73,619,71,"undefined"],[647,82,619,80],[648,8,620,6,"onInitialized"],[648,21,620,19],[648,23,620,21],[648,27,620,25],[648,28,620,26,"onInitialized"],[648,41,620,39],[649,8,621,6,"onCodeScanned"],[649,21,621,19],[649,23,621,21],[649,27,621,25],[649,28,621,26,"onCodeScanned"],[649,41,621,39],[650,8,622,6,"onStarted"],[650,17,622,15],[650,19,622,17],[650,23,622,21],[650,24,622,22,"onStarted"],[650,33,622,31],[651,8,623,6,"onStopped"],[651,17,623,15],[651,19,623,17],[651,23,623,21],[651,24,623,22,"onStopped"],[651,33,623,31],[652,8,624,6,"onPreviewStarted"],[652,24,624,22],[652,26,624,24],[652,30,624,28],[652,31,624,29,"onPreviewStarted"],[652,47,624,45],[653,8,625,6,"onPreviewStopped"],[653,24,625,22],[653,26,625,24],[653,30,625,28],[653,31,625,29,"onPreviewStopped"],[653,47,625,45],[654,8,626,6,"onShutter"],[654,17,626,15],[654,19,626,17],[654,23,626,21],[654,24,626,22,"onShutter"],[654,33,626,31],[655,8,627,6,"videoBitRateMultiplier"],[655,30,627,28],[655,32,627,30,"bitRateMultiplier"],[655,49,627,47],[656,8,628,6,"videoBitRateOverride"],[656,28,628,26],[656,30,628,28,"bitRateOverride"],[656,45,628,43],[657,8,629,6,"onOutputOrientationChanged"],[657,34,629,32],[657,36,629,34],[657,40,629,38],[657,41,629,39,"onOutputOrientationChanged"],[657,67,629,65],[658,8,630,6,"onPreviewOrientationChanged"],[658,35,630,33],[658,37,630,35],[658,41,630,39],[658,42,630,40,"onPreviewOrientationChanged"],[658,69,630,67],[659,8,631,6,"onError"],[659,15,631,13],[659,17,631,15],[659,21,631,19],[659,22,631,20,"onError"],[659,29,631,27],[660,8,632,6,"codeScannerOptions"],[660,26,632,24],[660,28,632,26,"codeScanner"],[660,39,632,37],[661,8,633,6,"enableFrameProcessor"],[661,28,633,26],[661,30,633,28,"frameProcessor"],[661,44,633,42],[661,48,633,46],[661,52,633,50],[662,8,634,6,"enableBufferCompression"],[662,31,634,29],[662,33,634,31,"props"],[662,38,634,36],[662,39,634,37,"enableBufferCompression"],[662,62,634,60],[662,66,634,64,"shouldEnableBufferCompression"],[662,95,634,93],[663,8,635,6,"preview"],[663,15,635,13],[663,17,635,15,"isRenderingWithSkia"],[663,36,635,34],[663,39,635,37],[663,44,635,42],[663,47,635,45,"props"],[663,52,635,50],[663,53,635,51,"preview"],[663,60,635,58],[663,64,635,62],[664,6,636,4],[664,7,636,5],[664,8,636,6],[664,10,636,8,"isRenderingWithSkia"],[664,29,636,27],[664,33,636,31],[664,46,636,44,"React"],[664,51,636,49],[664,52,636,49,"default"],[664,59,636,49],[664,60,636,50,"createElement"],[664,73,636,63],[664,74,636,64,"SkiaCameraCanvas"],[664,95,636,80],[664,96,636,80,"SkiaCameraCanvas"],[664,112,636,80],[664,114,636,82],[665,8,637,6,"style"],[665,13,637,11],[665,15,637,13,"styles"],[665,21,637,19],[665,22,637,20,"customPreviewView"],[665,39,637,37],[666,8,638,6,"offscreenTextures"],[666,25,638,23],[666,27,638,25,"frameProcessor"],[666,41,638,39],[666,42,638,40,"offscreenTextures"],[666,59,638,57],[667,8,639,6,"resizeMode"],[667,18,639,16],[667,20,639,18,"props"],[667,25,639,23],[667,26,639,24,"resizeMode"],[668,6,640,4],[668,7,640,5],[668,8,640,6],[668,10,640,8,"enableFpsGraph"],[668,24,640,22],[668,28,640,26],[668,41,640,39,"React"],[668,46,640,44],[668,47,640,44,"default"],[668,54,640,44],[668,55,640,45,"createElement"],[668,68,640,58],[668,69,640,59,"FpsGraph"],[668,78,640,67],[668,79,640,67,"FpsGraph"],[668,87,640,67],[668,89,640,69],[669,8,641,6,"style"],[669,13,641,11],[669,15,641,13,"styles"],[669,21,641,19],[669,22,641,20,"fpsGraph"],[669,30,641,28],[670,8,642,6,"averageFpsSamples"],[670,25,642,23],[670,27,642,25],[670,31,642,29],[670,32,642,30,"state"],[670,37,642,35],[670,38,642,36,"averageFpsSamples"],[670,55,642,53],[671,8,643,6,"targetMaxFps"],[671,20,643,18],[671,22,643,20,"props"],[671,27,643,25],[671,28,643,26,"format"],[671,34,643,32],[671,36,643,34,"maxFps"],[671,42,643,40],[671,46,643,44],[672,6,644,4],[672,7,644,5],[672,8,644,6],[672,9,644,7],[673,4,645,2],[674,2,646,0],[675,2,647,0],[677,2,649,0],[677,8,649,6,"styles"],[677,14,649,12],[677,17,649,15,"StyleSheet"],[677,27,649,25],[677,28,649,25,"default"],[677,35,649,25],[677,36,649,26,"create"],[677,42,649,32],[677,43,649,33],[678,4,650,2,"customPreviewView"],[678,21,650,19],[678,23,650,21],[679,6,651,4,"flex"],[679,10,651,8],[679,12,651,10],[680,4,652,2],[680,5,652,3],[681,4,653,2,"fpsGraph"],[681,12,653,10],[681,14,653,12],[682,6,654,4,"elevation"],[682,15,654,13],[682,17,654,15],[682,18,654,16],[683,6,655,4,"position"],[683,14,655,12],[683,16,655,14],[683,26,655,24],[684,6,656,4,"left"],[684,10,656,8],[684,12,656,10],[684,14,656,12],[685,6,657,4,"top"],[685,9,657,7],[685,11,657,9],[686,4,658,2],[687,2,659,0],[687,3,659,1],[687,4,659,2],[688,0,659,3],[688,3]],"functionMap":{"names":["_extends","<anonymous>","<global>","isSkiaFrameProcessor","Camera","constructor","get__handle","takePhoto","takeSnapshot","getBitRateMultiplier","startRecording","onRecordCallback","pauseRecording","resumeRecording","stopRecording","cancelRecording","focus","getAvailableCameraDevices","addCameraDevicesChangedListener","getCameraPermissionStatus","getMicrophonePermissionStatus","getLocationPermissionStatus","requestCameraPermission","requestMicrophonePermission","requestLocationPermission","onError","onInitialized","onStarted","onStopped","onPreviewStarted","onPreviewStopped","onShutter","onOutputOrientationChanged","onPreviewOrientationChanged","maybeUpdateUIRotation","onCodeScanned","setFrameProcessor","unsetFrameProcessor","onViewReady","onAverageFpsChanged","setState$argument_0","componentDidUpdate","render"],"mappings":"AAA,+EC,iKD,oCE;ACgB;CDE;OEmC;ECS;GDoB;EEC;GFM;EGgB;GHM;EIiB;GJM;EKC;GLc;EMmB;6BCa;KDS;GNQ;EQ0B;GRM;ES0B;GTM;EUmB;GVM;EW0B;GXM;EYqB;GZM;EaqB;GbE;EcO;GdE;EeO;GfE;EgBQ;GhBE;EiBW;GjBE;EkBU;GlBM;EmBU;GnBM;EoBU;GpBM;EqBI;GrBW;EsBC;GtBE;EuBC;GvBE;EwBC;GxBE;EyBC;GzBE;E0BC;G1BE;E2BC;G3BE;E4BC;G5BQ;E6BC;G7BY;E8BC;G9BM;E+BG;G/BI;EgCG;GhCE;EiCC;GjCE;EkCC;GlCO;EmCC;kBCK;KDU;GnCC;EqCG;GrCQ;EsCI;GtCqE;CFC"},"hasCjsExports":false},"type":"js/module"}]}