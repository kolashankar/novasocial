{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":13,"index":136},"end":{"line":7,"column":29,"index":152}}],"key":"XN65eZP/QkNMzaBAXbG/zPyidpY=","exportNames":["*"],"imports":1}},{"name":"../devices/getCameraFormat","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":23,"index":177},"end":{"line":8,"column":60,"index":214}}],"key":"U1oQnBqUmd1GfcBPTwpu14EqLkQ=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useCameraFormat = useCameraFormat;\n  var _react = require(_dependencyMap[0], \"react\");\n  var _getCameraFormat = require(_dependencyMap[1], \"../devices/getCameraFormat\");\n  /**\n   * Get the best matching Camera format for the given device that satisfies your requirements using a sorting filter. By default, formats are sorted by highest to lowest resolution.\n   *\n   * The {@linkcode filters | filters} are ranked by priority, from highest to lowest.\n   * This means the first item you pass will have a higher priority than the second, and so on.\n   *\n   * @param device The Camera Device you're currently using\n   * @param filters The filters you want to use. The format that matches your filter the closest will be returned\n   * @returns The format that matches your filter the closest.\n   * @example\n   * ```ts\n   * const device = useCameraDevice(...)\n   * const format = useCameraFormat(device, [\n   *   { videoResolution: { width: 3048, height: 2160 } },\n   *   { fps: 60 }\n   * ])\n   * ```\n   */\n  function useCameraFormat(device, filters) {\n    const format = (0, _react.useMemo)(() => {\n      if (device == null) return undefined;\n      return (0, _getCameraFormat.getCameraFormat)(device, filters);\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [device, JSON.stringify(filters)]);\n    return format;\n  }\n});","lineCount":36,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"useCameraFormat"],[7,25,6,23],[7,28,6,26,"useCameraFormat"],[7,43,6,41],[8,2,7,0],[8,6,7,4,"_react"],[8,12,7,10],[8,15,7,13,"require"],[8,22,7,20],[8,23,7,20,"_dependencyMap"],[8,37,7,20],[8,49,7,28],[8,50,7,29],[9,2,8,0],[9,6,8,4,"_getCameraFormat"],[9,22,8,20],[9,25,8,23,"require"],[9,32,8,30],[9,33,8,30,"_dependencyMap"],[9,47,8,30],[9,80,8,59],[9,81,8,60],[10,2,9,0],[11,0,10,0],[12,0,11,0],[13,0,12,0],[14,0,13,0],[15,0,14,0],[16,0,15,0],[17,0,16,0],[18,0,17,0],[19,0,18,0],[20,0,19,0],[21,0,20,0],[22,0,21,0],[23,0,22,0],[24,0,23,0],[25,0,24,0],[26,0,25,0],[27,0,26,0],[28,2,27,0],[28,11,27,9,"useCameraFormat"],[28,26,27,24,"useCameraFormat"],[28,27,27,25,"device"],[28,33,27,31],[28,35,27,33,"filters"],[28,42,27,40],[28,44,27,42],[29,4,28,2],[29,10,28,8,"format"],[29,16,28,14],[29,19,28,17],[29,20,28,18],[29,21,28,19],[29,23,28,21,"_react"],[29,29,28,27],[29,30,28,28,"useMemo"],[29,37,28,35],[29,39,28,37],[29,45,28,43],[30,6,29,4],[30,10,29,8,"device"],[30,16,29,14],[30,20,29,18],[30,24,29,22],[30,26,29,24],[30,33,29,31,"undefined"],[30,42,29,40],[31,6,30,4],[31,13,30,11],[31,14,30,12],[31,15,30,13],[31,17,30,15,"_getCameraFormat"],[31,33,30,31],[31,34,30,32,"getCameraFormat"],[31,49,30,47],[31,51,30,49,"device"],[31,57,30,55],[31,59,30,57,"filters"],[31,66,30,64],[31,67,30,65],[32,6,31,4],[33,4,32,2],[33,5,32,3],[33,7,32,5],[33,8,32,6,"device"],[33,14,32,12],[33,16,32,14,"JSON"],[33,20,32,18],[33,21,32,19,"stringify"],[33,30,32,28],[33,31,32,29,"filters"],[33,38,32,36],[33,39,32,37],[33,40,32,38],[33,41,32,39],[34,4,33,2],[34,11,33,9,"format"],[34,17,33,15],[35,2,34,0],[36,0,34,1],[36,3]],"functionMap":{"names":["<global>","useCameraFormat","<anonymous>"],"mappings":"AAA;AC0B;qCCC;GDI;CDE"},"hasCjsExports":true},"type":"js/module"}]}