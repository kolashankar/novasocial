{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":64,"index":64}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"./useUnmountAwareCallbacks","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":65},"end":{"line":2,"column":75,"index":140}}],"key":"3BUUYvw+CD+nwK2jZFzshln47Y4=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.useBoundDetection = useBoundDetection;\n  var _react = require(_dependencyMap[0], \"react\");\n  var _useUnmountAwareCallbacks = require(_dependencyMap[1], \"./useUnmountAwareCallbacks\");\n  /**\n   * Hook to detect when the scroll position reaches near the start or end of the list\n   * and trigger the appropriate callbacks. This hook is responsible for:\n   * 1. Detecting when the user scrolls near the end of the list (onEndReached)\n   * 2. Detecting when the user scrolls near the start of the list (onStartReached)\n   * 3. Managing auto-scrolling to bottom when new content is added\n   *\n   * @param recyclerViewManager - The RecyclerViewManager instance that handles the list's core functionality\n   * @param props - The RecyclerViewProps containing configuration and callbacks\n   * @param scrollViewRef - Reference to the scrollable container component\n   */\n  function useBoundDetection(recyclerViewManager, scrollViewRef) {\n    // Track whether we've already triggered the end reached callback to prevent duplicate calls\n    var pendingEndReached = (0, _react.useRef)(false);\n    // Track whether we've already triggered the start reached callback to prevent duplicate calls\n    var pendingStartReached = (0, _react.useRef)(false);\n    // Track whether we should auto-scroll to bottom when new content is added\n    var pendingAutoscrollToBottom = (0, _react.useRef)(false);\n    var lastCheckBoundsTime = (0, _react.useRef)(Date.now());\n    var data = recyclerViewManager.props.data;\n    var _useUnmountAwareAnima = (0, _useUnmountAwareCallbacks.useUnmountAwareAnimationFrame)(),\n      requestAnimationFrame = _useUnmountAwareAnima.requestAnimationFrame;\n    var windowHeight = recyclerViewManager.hasLayout() ? recyclerViewManager.getWindowSize().height : 0;\n    var contentHeight = recyclerViewManager.hasLayout() ? recyclerViewManager.getChildContainerDimensions().height : 0;\n    var windowWidth = recyclerViewManager.hasLayout() ? recyclerViewManager.getWindowSize().width : 0;\n    var contentWidth = recyclerViewManager.hasLayout() ? recyclerViewManager.getChildContainerDimensions().width : 0;\n    /**\n     * Checks if the scroll position is near the start or end of the list\n     * and triggers appropriate callbacks if configured.\n     */\n    var checkBounds = (0, _react.useCallback)(() => {\n      var _a;\n      lastCheckBoundsTime.current = Date.now();\n      var _recyclerViewManager$ = recyclerViewManager.props,\n        onEndReached = _recyclerViewManager$.onEndReached,\n        onStartReached = _recyclerViewManager$.onStartReached,\n        maintainVisibleContentPosition = _recyclerViewManager$.maintainVisibleContentPosition,\n        horizontal = _recyclerViewManager$.horizontal,\n        onEndReachedThresholdProp = _recyclerViewManager$.onEndReachedThreshold,\n        onStartReachedThresholdProp = _recyclerViewManager$.onStartReachedThreshold;\n      // Skip all calculations if neither callback is provided and autoscroll is disabled\n      var autoscrollToBottomThreshold = (_a = maintainVisibleContentPosition === null || maintainVisibleContentPosition === void 0 ? void 0 : maintainVisibleContentPosition.autoscrollToBottomThreshold) !== null && _a !== void 0 ? _a : -1;\n      if (!onEndReached && !onStartReached && autoscrollToBottomThreshold < 0) {\n        return;\n      }\n      if (recyclerViewManager.getIsFirstLayoutComplete()) {\n        var lastScrollOffset = recyclerViewManager.getAbsoluteLastScrollOffset();\n        var contentSize = recyclerViewManager.getChildContainerDimensions();\n        var windowSize = recyclerViewManager.getWindowSize();\n        var isHorizontal = horizontal === true;\n        // Calculate dimensions based on scroll direction\n        var visibleLength = isHorizontal ? windowSize.width : windowSize.height;\n        var contentLength = (isHorizontal ? contentSize.width : contentSize.height) + recyclerViewManager.firstItemOffset;\n        // Check if we're near the end of the list\n        if (onEndReached) {\n          var onEndReachedThreshold = onEndReachedThresholdProp !== null && onEndReachedThresholdProp !== void 0 ? onEndReachedThresholdProp : 0.5;\n          var endThresholdDistance = onEndReachedThreshold * visibleLength;\n          var isNearEnd = Math.ceil(lastScrollOffset + visibleLength) >= contentLength - endThresholdDistance;\n          if (isNearEnd && !pendingEndReached.current) {\n            pendingEndReached.current = true;\n            onEndReached();\n          }\n          pendingEndReached.current = isNearEnd;\n        }\n        // Check if we're near the start of the list\n        if (onStartReached) {\n          var onStartReachedThreshold = onStartReachedThresholdProp !== null && onStartReachedThresholdProp !== void 0 ? onStartReachedThresholdProp : 0.2;\n          var startThresholdDistance = onStartReachedThreshold * visibleLength;\n          var isNearStart = lastScrollOffset <= startThresholdDistance;\n          if (isNearStart && !pendingStartReached.current) {\n            pendingStartReached.current = true;\n            onStartReached();\n          }\n          pendingStartReached.current = isNearStart;\n        }\n        // Handle auto-scrolling to bottom for vertical lists\n        if (!isHorizontal && autoscrollToBottomThreshold >= 0) {\n          var autoscrollToBottomThresholdDistance = autoscrollToBottomThreshold * visibleLength;\n          var isNearBottom = Math.ceil(lastScrollOffset + visibleLength) >= contentLength - autoscrollToBottomThresholdDistance;\n          if (isNearBottom) {\n            pendingAutoscrollToBottom.current = true;\n          } else {\n            pendingAutoscrollToBottom.current = false;\n          }\n        }\n      }\n    }, [recyclerViewManager]);\n    var runAutoScrollToBottomCheck = (0, _react.useCallback)(() => {\n      if (pendingAutoscrollToBottom.current) {\n        pendingAutoscrollToBottom.current = false;\n        requestAnimationFrame(() => {\n          var _a, _b, _c;\n          var shouldAnimate = (_b = (_a = recyclerViewManager.props.maintainVisibleContentPosition) === null || _a === void 0 ? void 0 : _a.animateAutoScrollToBottom) !== null && _b !== void 0 ? _b : true;\n          (_c = scrollViewRef.current) === null || _c === void 0 ? void 0 : _c.scrollToEnd({\n            animated: shouldAnimate\n          });\n        });\n      }\n    }, [requestAnimationFrame, scrollViewRef, recyclerViewManager]);\n    // Reset end reached state when data changes\n    (0, _react.useMemo)(() => {\n      pendingEndReached.current = false;\n      // needs to run only when data changes\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [data]);\n    // Auto-scroll to bottom when new content is added and we're near the bottom\n    (0, _react.useEffect)(() => {\n      runAutoScrollToBottomCheck();\n    }, [data, runAutoScrollToBottomCheck, windowHeight, windowWidth]);\n    // Since content changes frequently, we try and avoid doing the auto scroll during active scrolls\n    (0, _react.useEffect)(() => {\n      if (Date.now() - lastCheckBoundsTime.current >= 100) {\n        runAutoScrollToBottomCheck();\n      }\n    }, [contentHeight, contentWidth, recyclerViewManager.firstItemOffset, runAutoScrollToBottomCheck]);\n    return {\n      checkBounds\n    };\n  }\n});","lineCount":129,"map":[[7,2,14,0,"exports"],[7,9,14,0],[7,10,14,0,"useBoundDetection"],[7,27,14,0],[7,30,14,0,"useBoundDetection"],[7,47,14,0],[8,2,1,0],[8,6,1,0,"_react"],[8,12,1,0],[8,15,1,0,"require"],[8,22,1,0],[8,23,1,0,"_dependencyMap"],[8,37,1,0],[9,2,2,0],[9,6,2,0,"_useUnmountAwareCallbacks"],[9,31,2,0],[9,34,2,0,"require"],[9,41,2,0],[9,42,2,0,"_dependencyMap"],[9,56,2,0],[10,2,3,0],[11,0,4,0],[12,0,5,0],[13,0,6,0],[14,0,7,0],[15,0,8,0],[16,0,9,0],[17,0,10,0],[18,0,11,0],[19,0,12,0],[20,0,13,0],[21,2,14,7],[21,11,14,16,"useBoundDetection"],[21,28,14,33,"useBoundDetection"],[21,29,14,34,"recyclerViewManager"],[21,48,14,53],[21,50,14,55,"scrollViewRef"],[21,63,14,68],[21,65,14,70],[22,4,15,4],[23,4,16,4],[23,8,16,10,"pendingEndReached"],[23,25,16,27],[23,28,16,30],[23,32,16,30,"useRef"],[23,38,16,36],[23,39,16,36,"useRef"],[23,45,16,36],[23,47,16,37],[23,52,16,42],[23,53,16,43],[24,4,17,4],[25,4,18,4],[25,8,18,10,"pendingStartReached"],[25,27,18,29],[25,30,18,32],[25,34,18,32,"useRef"],[25,40,18,38],[25,41,18,38,"useRef"],[25,47,18,38],[25,49,18,39],[25,54,18,44],[25,55,18,45],[26,4,19,4],[27,4,20,4],[27,8,20,10,"pendingAutoscrollToBottom"],[27,33,20,35],[27,36,20,38],[27,40,20,38,"useRef"],[27,46,20,44],[27,47,20,44,"useRef"],[27,53,20,44],[27,55,20,45],[27,60,20,50],[27,61,20,51],[28,4,21,4],[28,8,21,10,"lastCheckBoundsTime"],[28,27,21,29],[28,30,21,32],[28,34,21,32,"useRef"],[28,40,21,38],[28,41,21,38,"useRef"],[28,47,21,38],[28,49,21,39,"Date"],[28,53,21,43],[28,54,21,44,"now"],[28,57,21,47],[28,58,21,48],[28,59,21,49],[28,60,21,50],[29,4,22,4],[29,8,22,12,"data"],[29,12,22,16],[29,15,22,21,"recyclerViewManager"],[29,34,22,40],[29,35,22,41,"props"],[29,40,22,46],[29,41,22,12,"data"],[29,45,22,16],[30,4,23,4],[30,8,23,4,"_useUnmountAwareAnima"],[30,29,23,4],[30,32,23,38],[30,36,23,38,"useUnmountAwareAnimationFrame"],[30,61,23,67],[30,62,23,67,"useUnmountAwareAnimationFrame"],[30,91,23,67],[30,93,23,68],[30,94,23,69],[31,6,23,12,"requestAnimationFrame"],[31,27,23,33],[31,30,23,33,"_useUnmountAwareAnima"],[31,51,23,33],[31,52,23,12,"requestAnimationFrame"],[31,73,23,33],[32,4,24,4],[32,8,24,10,"windowHeight"],[32,20,24,22],[32,23,24,25,"recyclerViewManager"],[32,42,24,44],[32,43,24,45,"hasLayout"],[32,52,24,54],[32,53,24,55],[32,54,24,56],[32,57,25,10,"recyclerViewManager"],[32,76,25,29],[32,77,25,30,"getWindowSize"],[32,90,25,43],[32,91,25,44],[32,92,25,45],[32,93,25,46,"height"],[32,99,25,52],[32,102,26,10],[32,103,26,11],[33,4,27,4],[33,8,27,10,"contentHeight"],[33,21,27,23],[33,24,27,26,"recyclerViewManager"],[33,43,27,45],[33,44,27,46,"hasLayout"],[33,53,27,55],[33,54,27,56],[33,55,27,57],[33,58,28,10,"recyclerViewManager"],[33,77,28,29],[33,78,28,30,"getChildContainerDimensions"],[33,105,28,57],[33,106,28,58],[33,107,28,59],[33,108,28,60,"height"],[33,114,28,66],[33,117,29,10],[33,118,29,11],[34,4,30,4],[34,8,30,10,"windowWidth"],[34,19,30,21],[34,22,30,24,"recyclerViewManager"],[34,41,30,43],[34,42,30,44,"hasLayout"],[34,51,30,53],[34,52,30,54],[34,53,30,55],[34,56,31,10,"recyclerViewManager"],[34,75,31,29],[34,76,31,30,"getWindowSize"],[34,89,31,43],[34,90,31,44],[34,91,31,45],[34,92,31,46,"width"],[34,97,31,51],[34,100,32,10],[34,101,32,11],[35,4,33,4],[35,8,33,10,"contentWidth"],[35,20,33,22],[35,23,33,25,"recyclerViewManager"],[35,42,33,44],[35,43,33,45,"hasLayout"],[35,52,33,54],[35,53,33,55],[35,54,33,56],[35,57,34,10,"recyclerViewManager"],[35,76,34,29],[35,77,34,30,"getChildContainerDimensions"],[35,104,34,57],[35,105,34,58],[35,106,34,59],[35,107,34,60,"width"],[35,112,34,65],[35,115,35,10],[35,116,35,11],[36,4,36,4],[37,0,37,0],[38,0,38,0],[39,0,39,0],[40,4,40,4],[40,8,40,10,"checkBounds"],[40,19,40,21],[40,22,40,24],[40,26,40,24,"useCallback"],[40,32,40,35],[40,33,40,35,"useCallback"],[40,44,40,35],[40,46,40,36],[40,52,40,42],[41,6,41,8],[41,10,41,12,"_a"],[41,12,41,14],[42,6,42,8,"lastCheckBoundsTime"],[42,25,42,27],[42,26,42,28,"current"],[42,33,42,35],[42,36,42,38,"Date"],[42,40,42,42],[42,41,42,43,"now"],[42,44,42,46],[42,45,42,47],[42,46,42,48],[43,6,43,8],[43,10,43,8,"_recyclerViewManager$"],[43,31,43,8],[43,34,43,198,"recyclerViewManager"],[43,53,43,217],[43,54,43,218,"props"],[43,59,43,223],[44,8,43,16,"onEndReached"],[44,20,43,28],[44,23,43,28,"_recyclerViewManager$"],[44,44,43,28],[44,45,43,16,"onEndReached"],[44,57,43,28],[45,8,43,30,"onStartReached"],[45,22,43,44],[45,25,43,44,"_recyclerViewManager$"],[45,46,43,44],[45,47,43,30,"onStartReached"],[45,61,43,44],[46,8,43,46,"maintainVisibleContentPosition"],[46,38,43,76],[46,41,43,76,"_recyclerViewManager$"],[46,62,43,76],[46,63,43,46,"maintainVisibleContentPosition"],[46,93,43,76],[47,8,43,78,"horizontal"],[47,18,43,88],[47,21,43,88,"_recyclerViewManager$"],[47,42,43,88],[47,43,43,78,"horizontal"],[47,53,43,88],[48,8,43,113,"onEndReachedThresholdProp"],[48,33,43,138],[48,36,43,138,"_recyclerViewManager$"],[48,57,43,138],[48,58,43,90,"onEndReachedThreshold"],[48,79,43,111],[49,8,43,165,"onStartReachedThresholdProp"],[49,35,43,192],[49,38,43,192,"_recyclerViewManager$"],[49,59,43,192],[49,60,43,140,"onStartReachedThreshold"],[49,83,43,163],[50,6,44,8],[51,6,45,8],[51,10,45,14,"autoscrollToBottomThreshold"],[51,37,45,41],[51,40,45,44],[51,41,45,45,"_a"],[51,43,45,47],[51,46,45,50,"maintainVisibleContentPosition"],[51,76,45,80],[51,81,45,85],[51,85,45,89],[51,89,45,93,"maintainVisibleContentPosition"],[51,119,45,123],[51,124,45,128],[51,129,45,133],[51,130,45,134],[51,133,45,137],[51,138,45,142],[51,139,45,143],[51,142,45,146,"maintainVisibleContentPosition"],[51,172,45,176],[51,173,45,177,"autoscrollToBottomThreshold"],[51,200,45,204],[51,206,45,210],[51,210,45,214],[51,214,45,218,"_a"],[51,216,45,220],[51,221,45,225],[51,226,45,230],[51,227,45,231],[51,230,45,234,"_a"],[51,232,45,236],[51,235,45,239],[51,236,45,240],[51,237,45,241],[52,6,46,8],[52,10,46,12],[52,11,46,13,"onEndReached"],[52,23,46,25],[52,27,46,29],[52,28,46,30,"onStartReached"],[52,42,46,44],[52,46,46,48,"autoscrollToBottomThreshold"],[52,73,46,75],[52,76,46,78],[52,77,46,79],[52,79,46,81],[53,8,47,12],[54,6,48,8],[55,6,49,8],[55,10,49,12,"recyclerViewManager"],[55,29,49,31],[55,30,49,32,"getIsFirstLayoutComplete"],[55,54,49,56],[55,55,49,57],[55,56,49,58],[55,58,49,60],[56,8,50,12],[56,12,50,18,"lastScrollOffset"],[56,28,50,34],[56,31,50,37,"recyclerViewManager"],[56,50,50,56],[56,51,50,57,"getAbsoluteLastScrollOffset"],[56,78,50,84],[56,79,50,85],[56,80,50,86],[57,8,51,12],[57,12,51,18,"contentSize"],[57,23,51,29],[57,26,51,32,"recyclerViewManager"],[57,45,51,51],[57,46,51,52,"getChildContainerDimensions"],[57,73,51,79],[57,74,51,80],[57,75,51,81],[58,8,52,12],[58,12,52,18,"windowSize"],[58,22,52,28],[58,25,52,31,"recyclerViewManager"],[58,44,52,50],[58,45,52,51,"getWindowSize"],[58,58,52,64],[58,59,52,65],[58,60,52,66],[59,8,53,12],[59,12,53,18,"isHorizontal"],[59,24,53,30],[59,27,53,33,"horizontal"],[59,37,53,43],[59,42,53,48],[59,46,53,52],[60,8,54,12],[61,8,55,12],[61,12,55,18,"visibleLength"],[61,25,55,31],[61,28,55,34,"isHorizontal"],[61,40,55,46],[61,43,55,49,"windowSize"],[61,53,55,59],[61,54,55,60,"width"],[61,59,55,65],[61,62,55,68,"windowSize"],[61,72,55,78],[61,73,55,79,"height"],[61,79,55,85],[62,8,56,12],[62,12,56,18,"contentLength"],[62,25,56,31],[62,28,56,34],[62,29,56,35,"isHorizontal"],[62,41,56,47],[62,44,56,50,"contentSize"],[62,55,56,61],[62,56,56,62,"width"],[62,61,56,67],[62,64,56,70,"contentSize"],[62,75,56,81],[62,76,56,82,"height"],[62,82,56,88],[62,86,57,16,"recyclerViewManager"],[62,105,57,35],[62,106,57,36,"firstItemOffset"],[62,121,57,51],[63,8,58,12],[64,8,59,12],[64,12,59,16,"onEndReached"],[64,24,59,28],[64,26,59,30],[65,10,60,16],[65,14,60,22,"onEndReachedThreshold"],[65,35,60,43],[65,38,60,46,"onEndReachedThresholdProp"],[65,63,60,71],[65,68,60,76],[65,72,60,80],[65,76,60,84,"onEndReachedThresholdProp"],[65,101,60,109],[65,106,60,114],[65,111,60,119],[65,112,60,120],[65,115,60,123,"onEndReachedThresholdProp"],[65,140,60,148],[65,143,60,151],[65,146,60,154],[66,10,61,16],[66,14,61,22,"endThresholdDistance"],[66,34,61,42],[66,37,61,45,"onEndReachedThreshold"],[66,58,61,66],[66,61,61,69,"visibleLength"],[66,74,61,82],[67,10,62,16],[67,14,62,22,"isNearEnd"],[67,23,62,31],[67,26,62,34,"Math"],[67,30,62,38],[67,31,62,39,"ceil"],[67,35,62,43],[67,36,62,44,"lastScrollOffset"],[67,52,62,60],[67,55,62,63,"visibleLength"],[67,68,62,76],[67,69,62,77],[67,73,63,20,"contentLength"],[67,86,63,33],[67,89,63,36,"endThresholdDistance"],[67,109,63,56],[68,10,64,16],[68,14,64,20,"isNearEnd"],[68,23,64,29],[68,27,64,33],[68,28,64,34,"pendingEndReached"],[68,45,64,51],[68,46,64,52,"current"],[68,53,64,59],[68,55,64,61],[69,12,65,20,"pendingEndReached"],[69,29,65,37],[69,30,65,38,"current"],[69,37,65,45],[69,40,65,48],[69,44,65,52],[70,12,66,20,"onEndReached"],[70,24,66,32],[70,25,66,33],[70,26,66,34],[71,10,67,16],[72,10,68,16,"pendingEndReached"],[72,27,68,33],[72,28,68,34,"current"],[72,35,68,41],[72,38,68,44,"isNearEnd"],[72,47,68,53],[73,8,69,12],[74,8,70,12],[75,8,71,12],[75,12,71,16,"onStartReached"],[75,26,71,30],[75,28,71,32],[76,10,72,16],[76,14,72,22,"onStartReachedThreshold"],[76,37,72,45],[76,40,72,48,"onStartReachedThresholdProp"],[76,67,72,75],[76,72,72,80],[76,76,72,84],[76,80,72,88,"onStartReachedThresholdProp"],[76,107,72,115],[76,112,72,120],[76,117,72,125],[76,118,72,126],[76,121,72,129,"onStartReachedThresholdProp"],[76,148,72,156],[76,151,72,159],[76,154,72,162],[77,10,73,16],[77,14,73,22,"startThresholdDistance"],[77,36,73,44],[77,39,73,47,"onStartReachedThreshold"],[77,62,73,70],[77,65,73,73,"visibleLength"],[77,78,73,86],[78,10,74,16],[78,14,74,22,"isNearStart"],[78,25,74,33],[78,28,74,36,"lastScrollOffset"],[78,44,74,52],[78,48,74,56,"startThresholdDistance"],[78,70,74,78],[79,10,75,16],[79,14,75,20,"isNearStart"],[79,25,75,31],[79,29,75,35],[79,30,75,36,"pendingStartReached"],[79,49,75,55],[79,50,75,56,"current"],[79,57,75,63],[79,59,75,65],[80,12,76,20,"pendingStartReached"],[80,31,76,39],[80,32,76,40,"current"],[80,39,76,47],[80,42,76,50],[80,46,76,54],[81,12,77,20,"onStartReached"],[81,26,77,34],[81,27,77,35],[81,28,77,36],[82,10,78,16],[83,10,79,16,"pendingStartReached"],[83,29,79,35],[83,30,79,36,"current"],[83,37,79,43],[83,40,79,46,"isNearStart"],[83,51,79,57],[84,8,80,12],[85,8,81,12],[86,8,82,12],[86,12,82,16],[86,13,82,17,"isHorizontal"],[86,25,82,29],[86,29,82,33,"autoscrollToBottomThreshold"],[86,56,82,60],[86,60,82,64],[86,61,82,65],[86,63,82,67],[87,10,83,16],[87,14,83,22,"autoscrollToBottomThresholdDistance"],[87,49,83,57],[87,52,83,60,"autoscrollToBottomThreshold"],[87,79,83,87],[87,82,83,90,"visibleLength"],[87,95,83,103],[88,10,84,16],[88,14,84,22,"isNearBottom"],[88,26,84,34],[88,29,84,37,"Math"],[88,33,84,41],[88,34,84,42,"ceil"],[88,38,84,46],[88,39,84,47,"lastScrollOffset"],[88,55,84,63],[88,58,84,66,"visibleLength"],[88,71,84,79],[88,72,84,80],[88,76,85,20,"contentLength"],[88,89,85,33],[88,92,85,36,"autoscrollToBottomThresholdDistance"],[88,127,85,71],[89,10,86,16],[89,14,86,20,"isNearBottom"],[89,26,86,32],[89,28,86,34],[90,12,87,20,"pendingAutoscrollToBottom"],[90,37,87,45],[90,38,87,46,"current"],[90,45,87,53],[90,48,87,56],[90,52,87,60],[91,10,88,16],[91,11,88,17],[91,17,89,21],[92,12,90,20,"pendingAutoscrollToBottom"],[92,37,90,45],[92,38,90,46,"current"],[92,45,90,53],[92,48,90,56],[92,53,90,61],[93,10,91,16],[94,8,92,12],[95,6,93,8],[96,4,94,4],[96,5,94,5],[96,7,94,7],[96,8,94,8,"recyclerViewManager"],[96,27,94,27],[96,28,94,28],[96,29,94,29],[97,4,95,4],[97,8,95,10,"runAutoScrollToBottomCheck"],[97,34,95,36],[97,37,95,39],[97,41,95,39,"useCallback"],[97,47,95,50],[97,48,95,50,"useCallback"],[97,59,95,50],[97,61,95,51],[97,67,95,57],[98,6,96,8],[98,10,96,12,"pendingAutoscrollToBottom"],[98,35,96,37],[98,36,96,38,"current"],[98,43,96,45],[98,45,96,47],[99,8,97,12,"pendingAutoscrollToBottom"],[99,33,97,37],[99,34,97,38,"current"],[99,41,97,45],[99,44,97,48],[99,49,97,53],[100,8,98,12,"requestAnimationFrame"],[100,29,98,33],[100,30,98,34],[100,36,98,40],[101,10,99,16],[101,14,99,20,"_a"],[101,16,99,22],[101,18,99,24,"_b"],[101,20,99,26],[101,22,99,28,"_c"],[101,24,99,30],[102,10,100,16],[102,14,100,22,"shouldAnimate"],[102,27,100,35],[102,30,100,38],[102,31,100,39,"_b"],[102,33,100,41],[102,36,100,44],[102,37,100,45,"_a"],[102,39,100,47],[102,42,100,50,"recyclerViewManager"],[102,61,100,69],[102,62,100,70,"props"],[102,67,100,75],[102,68,100,76,"maintainVisibleContentPosition"],[102,98,100,106],[102,104,100,112],[102,108,100,116],[102,112,100,120,"_a"],[102,114,100,122],[102,119,100,127],[102,124,100,132],[102,125,100,133],[102,128,100,136],[102,133,100,141],[102,134,100,142],[102,137,100,145,"_a"],[102,139,100,147],[102,140,100,148,"animateAutoScrollToBottom"],[102,165,100,173],[102,171,100,179],[102,175,100,183],[102,179,100,187,"_b"],[102,181,100,189],[102,186,100,194],[102,191,100,199],[102,192,100,200],[102,195,100,203,"_b"],[102,197,100,205],[102,200,100,208],[102,204,100,212],[103,10,101,16],[103,11,101,17,"_c"],[103,13,101,19],[103,16,101,22,"scrollViewRef"],[103,29,101,35],[103,30,101,36,"current"],[103,37,101,43],[103,43,101,49],[103,47,101,53],[103,51,101,57,"_c"],[103,53,101,59],[103,58,101,64],[103,63,101,69],[103,64,101,70],[103,67,101,73],[103,72,101,78],[103,73,101,79],[103,76,101,82,"_c"],[103,78,101,84],[103,79,101,85,"scrollToEnd"],[103,90,101,96],[103,91,101,97],[104,12,102,20,"animated"],[104,20,102,28],[104,22,102,30,"shouldAnimate"],[105,10,103,16],[105,11,103,17],[105,12,103,18],[106,8,104,12],[106,9,104,13],[106,10,104,14],[107,6,105,8],[108,4,106,4],[108,5,106,5],[108,7,106,7],[108,8,106,8,"requestAnimationFrame"],[108,29,106,29],[108,31,106,31,"scrollViewRef"],[108,44,106,44],[108,46,106,46,"recyclerViewManager"],[108,65,106,65],[108,66,106,66],[108,67,106,67],[109,4,107,4],[110,4,108,4],[110,8,108,4,"useMemo"],[110,14,108,11],[110,15,108,11,"useMemo"],[110,22,108,11],[110,24,108,12],[110,30,108,18],[111,6,109,8,"pendingEndReached"],[111,23,109,25],[111,24,109,26,"current"],[111,31,109,33],[111,34,109,36],[111,39,109,41],[112,6,110,8],[113,6,111,8],[114,4,112,4],[114,5,112,5],[114,7,112,7],[114,8,112,8,"data"],[114,12,112,12],[114,13,112,13],[114,14,112,14],[115,4,113,4],[116,4,114,4],[116,8,114,4,"useEffect"],[116,14,114,13],[116,15,114,13,"useEffect"],[116,24,114,13],[116,26,114,14],[116,32,114,20],[117,6,115,8,"runAutoScrollToBottomCheck"],[117,32,115,34],[117,33,115,35],[117,34,115,36],[118,4,116,4],[118,5,116,5],[118,7,116,7],[118,8,116,8,"data"],[118,12,116,12],[118,14,116,14,"runAutoScrollToBottomCheck"],[118,40,116,40],[118,42,116,42,"windowHeight"],[118,54,116,54],[118,56,116,56,"windowWidth"],[118,67,116,67],[118,68,116,68],[118,69,116,69],[119,4,117,4],[120,4,118,4],[120,8,118,4,"useEffect"],[120,14,118,13],[120,15,118,13,"useEffect"],[120,24,118,13],[120,26,118,14],[120,32,118,20],[121,6,119,8],[121,10,119,12,"Date"],[121,14,119,16],[121,15,119,17,"now"],[121,18,119,20],[121,19,119,21],[121,20,119,22],[121,23,119,25,"lastCheckBoundsTime"],[121,42,119,44],[121,43,119,45,"current"],[121,50,119,52],[121,54,119,56],[121,57,119,59],[121,59,119,61],[122,8,120,12,"runAutoScrollToBottomCheck"],[122,34,120,38],[122,35,120,39],[122,36,120,40],[123,6,121,8],[124,4,122,4],[124,5,122,5],[124,7,122,7],[124,8,123,8,"contentHeight"],[124,21,123,21],[124,23,124,8,"contentWidth"],[124,35,124,20],[124,37,125,8,"recyclerViewManager"],[124,56,125,27],[124,57,125,28,"firstItemOffset"],[124,72,125,43],[124,74,126,8,"runAutoScrollToBottomCheck"],[124,100,126,34],[124,101,127,5],[124,102,127,6],[125,4,128,4],[125,11,128,11],[126,6,129,8,"checkBounds"],[127,4,130,4],[127,5,130,5],[128,2,131,0],[129,0,131,1],[129,3]],"functionMap":{"names":["<global>","useBoundDetection","checkBounds","runAutoScrollToBottomCheck","requestAnimationFrame$argument_0","useMemo$argument_0","useEffect$argument_0"],"mappings":"AAA;OCa;oCC0B;KDsD;mDEC;kCCG;aDM;KFE;YIE;KJI;cKE;KLE;cKE;KLI;CDS"},"hasCjsExports":false},"type":"js/module"}]}