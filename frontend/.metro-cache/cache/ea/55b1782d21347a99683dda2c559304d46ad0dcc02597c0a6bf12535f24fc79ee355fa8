{"dependencies":[{"name":"../../../services/api","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":44,"index":44}}],"key":"3VKnEXkMY1ZNEkZ7qYjanQrdF3Y=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"chatApi\", {\n    enumerable: true,\n    get: function () {\n      return chatApi;\n    }\n  });\n  var _servicesApi = require(_dependencyMap[0], \"../../../services/api\");\n  class ChatApiService {\n    async getConversations(skip = 0, limit = 50) {\n      const response = await _servicesApi.api.get(`/conversations?skip=${skip}&limit=${limit}`);\n      return response.data;\n    }\n    async createConversation(data) {\n      const response = await _servicesApi.api.post('/conversations', data);\n      return response.data;\n    }\n    async getMessages(conversationId, skip = 0, limit = 50) {\n      const response = await _servicesApi.api.get(`/conversations/${conversationId}/messages?skip=${skip}&limit=${limit}`);\n      return response.data;\n    }\n    async sendMessage(conversationId, data) {\n      const messageData = {\n        ...data,\n        conversationId\n      };\n      const response = await _servicesApi.api.post(`/conversations/${conversationId}/messages`, messageData);\n      return response.data;\n    }\n\n    // Helper method to find or create a direct conversation with a user\n    async getOrCreateDirectConversation(otherUserId) {\n      // First, try to find existing conversation\n      const conversations = await this.getConversations();\n      const existing = conversations.find(conv => !conv.isGroup && conv.participants.length === 2 && conv.participants.some(p => p.id === otherUserId));\n      if (existing) {\n        return existing;\n      }\n\n      // Create new conversation\n      return await this.createConversation({\n        participantIds: [otherUserId],\n        isGroup: false\n      });\n    }\n  }\n  const chatApi = new ChatApiService();\n});","lineCount":53,"map":[[7,2,102,0,"Object"],[7,8,102,0],[7,9,102,0,"defineProperty"],[7,23,102,0],[7,24,102,0,"exports"],[7,31,102,0],[8,4,102,0,"enumerable"],[8,14,102,0],[9,4,102,0,"get"],[9,7,102,0],[9,18,102,0,"get"],[9,19,102,0],[10,6,102,0],[10,13,102,0,"chatApi"],[10,20,102,0],[11,4,102,0],[12,2,102,0],[13,2,1,0],[13,6,1,0,"_servicesApi"],[13,18,1,0],[13,21,1,0,"require"],[13,28,1,0],[13,29,1,0,"_dependencyMap"],[13,43,1,0],[14,2,55,0],[14,8,55,6,"ChatApiService"],[14,22,55,20],[14,23,55,21],[15,4,56,2],[15,10,56,8,"getConversations"],[15,26,56,24,"getConversations"],[15,27,56,25,"skip"],[15,31,56,29],[15,34,56,32],[15,35,56,33],[15,37,56,35,"limit"],[15,42,56,40],[15,45,56,43],[15,47,56,45],[15,49,56,72],[16,6,57,4],[16,12,57,10,"response"],[16,20,57,18],[16,23,57,21],[16,29,57,27,"api"],[16,41,57,30],[16,42,57,30,"api"],[16,45,57,30],[16,46,57,31,"get"],[16,49,57,34],[16,50,57,35],[16,73,57,58,"skip"],[16,77,57,62],[16,87,57,72,"limit"],[16,92,57,77],[16,94,57,79],[16,95,57,80],[17,6,58,4],[17,13,58,11,"response"],[17,21,58,19],[17,22,58,20,"data"],[17,26,58,24],[18,4,59,2],[19,4,61,2],[19,10,61,8,"createConversation"],[19,28,61,26,"createConversation"],[19,29,61,27,"data"],[19,33,61,55],[19,35,61,80],[20,6,62,4],[20,12,62,10,"response"],[20,20,62,18],[20,23,62,21],[20,29,62,27,"api"],[20,41,62,30],[20,42,62,30,"api"],[20,45,62,30],[20,46,62,31,"post"],[20,50,62,35],[20,51,62,36],[20,67,62,52],[20,69,62,54,"data"],[20,73,62,58],[20,74,62,59],[21,6,63,4],[21,13,63,11,"response"],[21,21,63,19],[21,22,63,20,"data"],[21,26,63,24],[22,4,64,2],[23,4,66,2],[23,10,66,8,"getMessages"],[23,21,66,19,"getMessages"],[23,22,66,20,"conversationId"],[23,36,66,42],[23,38,66,44,"skip"],[23,42,66,48],[23,45,66,51],[23,46,66,52],[23,48,66,54,"limit"],[23,53,66,59],[23,56,66,62],[23,58,66,64],[23,60,66,86],[24,6,67,4],[24,12,67,10,"response"],[24,20,67,18],[24,23,67,21],[24,29,67,27,"api"],[24,41,67,30],[24,42,67,30,"api"],[24,45,67,30],[24,46,67,31,"get"],[24,49,67,34],[24,50,67,35],[24,68,67,53,"conversationId"],[24,82,67,67],[24,100,67,85,"skip"],[24,104,67,89],[24,114,67,99,"limit"],[24,119,67,104],[24,121,67,106],[24,122,67,107],[25,6,68,4],[25,13,68,11,"response"],[25,21,68,19],[25,22,68,20,"data"],[25,26,68,24],[26,4,69,2],[27,4,71,2],[27,10,71,8,"sendMessage"],[27,21,71,19,"sendMessage"],[27,22,71,20,"conversationId"],[27,36,71,42],[27,38,71,44,"data"],[27,42,71,65],[27,44,71,85],[28,6,72,4],[28,12,72,10,"messageData"],[28,23,72,21],[28,26,72,24],[29,8,73,6],[29,11,73,9,"data"],[29,15,73,13],[30,8,74,6,"conversationId"],[31,6,75,4],[31,7,75,5],[32,6,76,4],[32,12,76,10,"response"],[32,20,76,18],[32,23,76,21],[32,29,76,27,"api"],[32,41,76,30],[32,42,76,30,"api"],[32,45,76,30],[32,46,76,31,"post"],[32,50,76,35],[32,51,76,36],[32,69,76,54,"conversationId"],[32,83,76,68],[32,94,76,79],[32,96,76,81,"messageData"],[32,107,76,92],[32,108,76,93],[33,6,77,4],[33,13,77,11,"response"],[33,21,77,19],[33,22,77,20,"data"],[33,26,77,24],[34,4,78,2],[36,4,80,2],[37,4,81,2],[37,10,81,8,"getOrCreateDirectConversation"],[37,39,81,37,"getOrCreateDirectConversation"],[37,40,81,38,"otherUserId"],[37,51,81,57],[37,53,81,82],[38,6,82,4],[39,6,83,4],[39,12,83,10,"conversations"],[39,25,83,23],[39,28,83,26],[39,34,83,32],[39,38,83,36],[39,39,83,37,"getConversations"],[39,55,83,53],[39,56,83,54],[39,57,83,55],[40,6,84,4],[40,12,84,10,"existing"],[40,20,84,18],[40,23,84,21,"conversations"],[40,36,84,34],[40,37,84,35,"find"],[40,41,84,39],[40,42,84,40,"conv"],[40,46,84,44],[40,50,85,6],[40,51,85,7,"conv"],[40,55,85,11],[40,56,85,12,"isGroup"],[40,63,85,19],[40,67,86,6,"conv"],[40,71,86,10],[40,72,86,11,"participants"],[40,84,86,23],[40,85,86,24,"length"],[40,91,86,30],[40,96,86,35],[40,97,86,36],[40,101,87,6,"conv"],[40,105,87,10],[40,106,87,11,"participants"],[40,118,87,23],[40,119,87,24,"some"],[40,123,87,28],[40,124,87,29,"p"],[40,125,87,30],[40,129,87,34,"p"],[40,130,87,35],[40,131,87,36,"id"],[40,133,87,38],[40,138,87,43,"otherUserId"],[40,149,87,54],[40,150,88,4],[40,151,88,5],[41,6,90,4],[41,10,90,8,"existing"],[41,18,90,16],[41,20,90,18],[42,8,91,6],[42,15,91,13,"existing"],[42,23,91,21],[43,6,92,4],[45,6,94,4],[46,6,95,4],[46,13,95,11],[46,19,95,17],[46,23,95,21],[46,24,95,22,"createConversation"],[46,42,95,40],[46,43,95,41],[47,8,96,6,"participantIds"],[47,22,96,20],[47,24,96,22],[47,25,96,23,"otherUserId"],[47,36,96,34],[47,37,96,35],[48,8,97,6,"isGroup"],[48,15,97,13],[48,17,97,15],[49,6,98,4],[49,7,98,5],[49,8,98,6],[50,4,99,2],[51,2,100,0],[52,2,102,7],[52,8,102,13,"chatApi"],[52,15,102,20],[52,18,102,23],[52,22,102,27,"ChatApiService"],[52,36,102,41],[52,37,102,42],[52,38,102,43],[53,0,102,44],[53,3]],"functionMap":{"names":["<global>","ChatApiService","ChatApiService#getConversations","ChatApiService#createConversation","ChatApiService#getMessages","ChatApiService#sendMessage","ChatApiService#getOrCreateDirectConversation","conversations.find$argument_0","conv.participants.some$argument_0"],"mappings":"AAA;ACsD;ECC;GDG;EEE;GFG;EGE;GHG;EIE;GJO;EKG;wCCG;6BCG,yBD,CD;GLY;CDC"},"hasCjsExports":false},"type":"js/module"}]}