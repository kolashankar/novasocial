{"dependencies":[{"name":"../../../services/api","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":44,"index":44}}],"key":"3VKnEXkMY1ZNEkZ7qYjanQrdF3Y=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"chatApi\", {\n    enumerable: true,\n    get: function () {\n      return chatApi;\n    }\n  });\n  var _servicesApi = require(_dependencyMap[0], \"../../../services/api\");\n  class ChatApiService {\n    async getConversations(skip = 0, limit = 50) {\n      const response = await _servicesApi.api.get(`/conversations?skip=${skip}&limit=${limit}`);\n      return response.data;\n    }\n    async createConversation(data) {\n      const response = await _servicesApi.api.post('/conversations', data);\n      return response.data;\n    }\n    async getMessages(conversationId, skip = 0, limit = 50) {\n      const response = await _servicesApi.api.get(`/conversations/${conversationId}/messages?skip=${skip}&limit=${limit}`);\n      return response.data;\n    }\n    async sendMessage(conversationId, data) {\n      const messageData = {\n        ...data,\n        conversationId\n      };\n      const response = await _servicesApi.api.post(`/conversations/${conversationId}/messages`, messageData);\n      return response.data;\n    }\n\n    // Helper method to find or create a direct conversation with a user\n    async getOrCreateDirectConversation(otherUserId) {\n      // First, try to find existing conversation\n      const conversations = await this.getConversations();\n      const existing = conversations.find(conv => !conv.isGroup && conv.participants.length === 2 && conv.participants.some(p => p.id === otherUserId));\n      if (existing) {\n        return existing;\n      }\n\n      // Create new conversation\n      return await this.createConversation({\n        participantIds: [otherUserId],\n        isGroup: false\n      });\n    }\n\n    // PHASE 14: Enhanced Messaging & Real-time Features\n    async getFilteredConversations(params) {\n      const queryParams = new URLSearchParams({\n        filter_type: params.filterType,\n        skip: String(params.skip || 0),\n        limit: String(params.limit || 50)\n      });\n      if (params.searchQuery) {\n        queryParams.append('search_query', params.searchQuery);\n      }\n      const response = await _servicesApi.api.get(`/conversations/filters?${queryParams.toString()}`);\n      return response.data;\n    }\n    async updateConversationSettings(conversationId, settings) {\n      await _servicesApi.api.put(`/conversations/${conversationId}/settings`, settings);\n    }\n    async sendTypingIndicator(conversationId, isTyping) {\n      await _servicesApi.api.post(`/conversations/${conversationId}/typing`, {\n        conversationId,\n        userId: '',\n        // Will be set by backend from auth\n        isTyping\n      });\n    }\n    async markMessageRead(messageId) {\n      await _servicesApi.api.put(`/messages/${messageId}/read`);\n    }\n    async markAllMessagesRead(conversationId) {\n      await _servicesApi.api.put(`/conversations/${conversationId}/read-all`);\n    }\n    async getUserActivity(userId) {\n      const response = await _servicesApi.api.get(`/users/${userId}/activity`);\n      return response.data;\n    }\n    async updateUserActivity(status) {\n      await _servicesApi.api.put('/user/activity', {\n        status\n      });\n    }\n    async queueOfflineMessage(messageData) {\n      const response = await _servicesApi.api.post('/messages/queue', messageData);\n      return response.data;\n    }\n    async syncOfflineMessages() {\n      const response = await _servicesApi.api.post('/messages/sync');\n      return response.data;\n    }\n  }\n  const chatApi = new ChatApiService();\n});","lineCount":101,"map":[[7,2,175,0,"Object"],[7,8,175,0],[7,9,175,0,"defineProperty"],[7,23,175,0],[7,24,175,0,"exports"],[7,31,175,0],[8,4,175,0,"enumerable"],[8,14,175,0],[9,4,175,0,"get"],[9,7,175,0],[9,18,175,0,"get"],[9,19,175,0],[10,6,175,0],[10,13,175,0,"chatApi"],[10,20,175,0],[11,4,175,0],[12,2,175,0],[13,2,1,0],[13,6,1,0,"_servicesApi"],[13,18,1,0],[13,21,1,0,"require"],[13,28,1,0],[13,29,1,0,"_dependencyMap"],[13,43,1,0],[14,2,55,0],[14,8,55,6,"ChatApiService"],[14,22,55,20],[14,23,55,21],[15,4,56,2],[15,10,56,8,"getConversations"],[15,26,56,24,"getConversations"],[15,27,56,25,"skip"],[15,31,56,29],[15,34,56,32],[15,35,56,33],[15,37,56,35,"limit"],[15,42,56,40],[15,45,56,43],[15,47,56,45],[15,49,56,72],[16,6,57,4],[16,12,57,10,"response"],[16,20,57,18],[16,23,57,21],[16,29,57,27,"api"],[16,41,57,30],[16,42,57,30,"api"],[16,45,57,30],[16,46,57,31,"get"],[16,49,57,34],[16,50,57,35],[16,73,57,58,"skip"],[16,77,57,62],[16,87,57,72,"limit"],[16,92,57,77],[16,94,57,79],[16,95,57,80],[17,6,58,4],[17,13,58,11,"response"],[17,21,58,19],[17,22,58,20,"data"],[17,26,58,24],[18,4,59,2],[19,4,61,2],[19,10,61,8,"createConversation"],[19,28,61,26,"createConversation"],[19,29,61,27,"data"],[19,33,61,55],[19,35,61,80],[20,6,62,4],[20,12,62,10,"response"],[20,20,62,18],[20,23,62,21],[20,29,62,27,"api"],[20,41,62,30],[20,42,62,30,"api"],[20,45,62,30],[20,46,62,31,"post"],[20,50,62,35],[20,51,62,36],[20,67,62,52],[20,69,62,54,"data"],[20,73,62,58],[20,74,62,59],[21,6,63,4],[21,13,63,11,"response"],[21,21,63,19],[21,22,63,20,"data"],[21,26,63,24],[22,4,64,2],[23,4,66,2],[23,10,66,8,"getMessages"],[23,21,66,19,"getMessages"],[23,22,66,20,"conversationId"],[23,36,66,42],[23,38,66,44,"skip"],[23,42,66,48],[23,45,66,51],[23,46,66,52],[23,48,66,54,"limit"],[23,53,66,59],[23,56,66,62],[23,58,66,64],[23,60,66,86],[24,6,67,4],[24,12,67,10,"response"],[24,20,67,18],[24,23,67,21],[24,29,67,27,"api"],[24,41,67,30],[24,42,67,30,"api"],[24,45,67,30],[24,46,67,31,"get"],[24,49,67,34],[24,50,67,35],[24,68,67,53,"conversationId"],[24,82,67,67],[24,100,67,85,"skip"],[24,104,67,89],[24,114,67,99,"limit"],[24,119,67,104],[24,121,67,106],[24,122,67,107],[25,6,68,4],[25,13,68,11,"response"],[25,21,68,19],[25,22,68,20,"data"],[25,26,68,24],[26,4,69,2],[27,4,71,2],[27,10,71,8,"sendMessage"],[27,21,71,19,"sendMessage"],[27,22,71,20,"conversationId"],[27,36,71,42],[27,38,71,44,"data"],[27,42,71,65],[27,44,71,85],[28,6,72,4],[28,12,72,10,"messageData"],[28,23,72,21],[28,26,72,24],[29,8,73,6],[29,11,73,9,"data"],[29,15,73,13],[30,8,74,6,"conversationId"],[31,6,75,4],[31,7,75,5],[32,6,76,4],[32,12,76,10,"response"],[32,20,76,18],[32,23,76,21],[32,29,76,27,"api"],[32,41,76,30],[32,42,76,30,"api"],[32,45,76,30],[32,46,76,31,"post"],[32,50,76,35],[32,51,76,36],[32,69,76,54,"conversationId"],[32,83,76,68],[32,94,76,79],[32,96,76,81,"messageData"],[32,107,76,92],[32,108,76,93],[33,6,77,4],[33,13,77,11,"response"],[33,21,77,19],[33,22,77,20,"data"],[33,26,77,24],[34,4,78,2],[36,4,80,2],[37,4,81,2],[37,10,81,8,"getOrCreateDirectConversation"],[37,39,81,37,"getOrCreateDirectConversation"],[37,40,81,38,"otherUserId"],[37,51,81,57],[37,53,81,82],[38,6,82,4],[39,6,83,4],[39,12,83,10,"conversations"],[39,25,83,23],[39,28,83,26],[39,34,83,32],[39,38,83,36],[39,39,83,37,"getConversations"],[39,55,83,53],[39,56,83,54],[39,57,83,55],[40,6,84,4],[40,12,84,10,"existing"],[40,20,84,18],[40,23,84,21,"conversations"],[40,36,84,34],[40,37,84,35,"find"],[40,41,84,39],[40,42,84,40,"conv"],[40,46,84,44],[40,50,85,6],[40,51,85,7,"conv"],[40,55,85,11],[40,56,85,12,"isGroup"],[40,63,85,19],[40,67,86,6,"conv"],[40,71,86,10],[40,72,86,11,"participants"],[40,84,86,23],[40,85,86,24,"length"],[40,91,86,30],[40,96,86,35],[40,97,86,36],[40,101,87,6,"conv"],[40,105,87,10],[40,106,87,11,"participants"],[40,118,87,23],[40,119,87,24,"some"],[40,123,87,28],[40,124,87,29,"p"],[40,125,87,30],[40,129,87,34,"p"],[40,130,87,35],[40,131,87,36,"id"],[40,133,87,38],[40,138,87,43,"otherUserId"],[40,149,87,54],[40,150,88,4],[40,151,88,5],[41,6,90,4],[41,10,90,8,"existing"],[41,18,90,16],[41,20,90,18],[42,8,91,6],[42,15,91,13,"existing"],[42,23,91,21],[43,6,92,4],[45,6,94,4],[46,6,95,4],[46,13,95,11],[46,19,95,17],[46,23,95,21],[46,24,95,22,"createConversation"],[46,42,95,40],[46,43,95,41],[47,8,96,6,"participantIds"],[47,22,96,20],[47,24,96,22],[47,25,96,23,"otherUserId"],[47,36,96,34],[47,37,96,35],[48,8,97,6,"isGroup"],[48,15,97,13],[48,17,97,15],[49,6,98,4],[49,7,98,5],[49,8,98,6],[50,4,99,2],[52,4,101,2],[53,4,102,2],[53,10,102,8,"getFilteredConversations"],[53,34,102,32,"getFilteredConversations"],[53,35,102,33,"params"],[53,41,107,3],[53,43,107,30],[54,6,108,4],[54,12,108,10,"queryParams"],[54,23,108,21],[54,26,108,24],[54,30,108,28,"URLSearchParams"],[54,45,108,43],[54,46,108,44],[55,8,109,6,"filter_type"],[55,19,109,17],[55,21,109,19,"params"],[55,27,109,25],[55,28,109,26,"filterType"],[55,38,109,36],[56,8,110,6,"skip"],[56,12,110,10],[56,14,110,12,"String"],[56,20,110,18],[56,21,110,19,"params"],[56,27,110,25],[56,28,110,26,"skip"],[56,32,110,30],[56,36,110,34],[56,37,110,35],[56,38,110,36],[57,8,111,6,"limit"],[57,13,111,11],[57,15,111,13,"String"],[57,21,111,19],[57,22,111,20,"params"],[57,28,111,26],[57,29,111,27,"limit"],[57,34,111,32],[57,38,111,36],[57,40,111,38],[58,6,112,4],[58,7,112,5],[58,8,112,6],[59,6,114,4],[59,10,114,8,"params"],[59,16,114,14],[59,17,114,15,"searchQuery"],[59,28,114,26],[59,30,114,28],[60,8,115,6,"queryParams"],[60,19,115,17],[60,20,115,18,"append"],[60,26,115,24],[60,27,115,25],[60,41,115,39],[60,43,115,41,"params"],[60,49,115,47],[60,50,115,48,"searchQuery"],[60,61,115,59],[60,62,115,60],[61,6,116,4],[62,6,118,4],[62,12,118,10,"response"],[62,20,118,18],[62,23,118,21],[62,29,118,27,"api"],[62,41,118,30],[62,42,118,30,"api"],[62,45,118,30],[62,46,118,31,"get"],[62,49,118,34],[62,50,118,35],[62,76,118,61,"queryParams"],[62,87,118,72],[62,88,118,73,"toString"],[62,96,118,81],[62,97,118,82],[62,98,118,83],[62,100,118,85],[62,101,118,86],[63,6,119,4],[63,13,119,11,"response"],[63,21,119,19],[63,22,119,20,"data"],[63,26,119,24],[64,4,120,2],[65,4,122,2],[65,10,122,8,"updateConversationSettings"],[65,36,122,34,"updateConversationSettings"],[65,37,122,35,"conversationId"],[65,51,122,57],[65,53,122,59,"settings"],[65,61,126,3],[65,63,126,20],[66,6,127,4],[66,12,127,10,"api"],[66,24,127,13],[66,25,127,13,"api"],[66,28,127,13],[66,29,127,14,"put"],[66,32,127,17],[66,33,127,18],[66,51,127,36,"conversationId"],[66,65,127,50],[66,76,127,61],[66,78,127,63,"settings"],[66,86,127,71],[66,87,127,72],[67,4,128,2],[68,4,130,2],[68,10,130,8,"sendTypingIndicator"],[68,29,130,27,"sendTypingIndicator"],[68,30,130,28,"conversationId"],[68,44,130,50],[68,46,130,52,"isTyping"],[68,54,130,69],[68,56,130,86],[69,6,131,4],[69,12,131,10,"api"],[69,24,131,13],[69,25,131,13,"api"],[69,28,131,13],[69,29,131,14,"post"],[69,33,131,18],[69,34,131,19],[69,52,131,37,"conversationId"],[69,66,131,51],[69,75,131,60],[69,77,131,62],[70,8,132,6,"conversationId"],[70,22,132,20],[71,8,133,6,"userId"],[71,14,133,12],[71,16,133,14],[71,18,133,16],[72,8,133,18],[73,8,134,6,"isTyping"],[74,6,135,4],[74,7,135,5],[74,8,135,6],[75,4,136,2],[76,4,138,2],[76,10,138,8,"markMessageRead"],[76,25,138,23,"markMessageRead"],[76,26,138,24,"messageId"],[76,35,138,41],[76,37,138,58],[77,6,139,4],[77,12,139,10,"api"],[77,24,139,13],[77,25,139,13,"api"],[77,28,139,13],[77,29,139,14,"put"],[77,32,139,17],[77,33,139,18],[77,46,139,31,"messageId"],[77,55,139,40],[77,62,139,47],[77,63,139,48],[78,4,140,2],[79,4,142,2],[79,10,142,8,"markAllMessagesRead"],[79,29,142,27,"markAllMessagesRead"],[79,30,142,28,"conversationId"],[79,44,142,50],[79,46,142,67],[80,6,143,4],[80,12,143,10,"api"],[80,24,143,13],[80,25,143,13,"api"],[80,28,143,13],[80,29,143,14,"put"],[80,32,143,17],[80,33,143,18],[80,51,143,36,"conversationId"],[80,65,143,50],[80,76,143,61],[80,77,143,62],[81,4,144,2],[82,4,146,2],[82,10,146,8,"getUserActivity"],[82,25,146,23,"getUserActivity"],[82,26,146,24,"userId"],[82,32,146,38],[82,34,151,5],[83,6,152,4],[83,12,152,10,"response"],[83,20,152,18],[83,23,152,21],[83,29,152,27,"api"],[83,41,152,30],[83,42,152,30,"api"],[83,45,152,30],[83,46,152,31,"get"],[83,49,152,34],[83,50,152,35],[83,60,152,45,"userId"],[83,66,152,51],[83,77,152,62],[83,78,152,63],[84,6,153,4],[84,13,153,11,"response"],[84,21,153,19],[84,22,153,20,"data"],[84,26,153,24],[85,4,154,2],[86,4,156,2],[86,10,156,8,"updateUserActivity"],[86,28,156,26,"updateUserActivity"],[86,29,156,27,"status"],[86,35,156,73],[86,37,156,90],[87,6,157,4],[87,12,157,10,"api"],[87,24,157,13],[87,25,157,13,"api"],[87,28,157,13],[87,29,157,14,"put"],[87,32,157,17],[87,33,157,18],[87,49,157,34],[87,51,157,36],[88,8,157,38,"status"],[89,6,157,45],[89,7,157,46],[89,8,157,47],[90,4,158,2],[91,4,160,2],[91,10,160,8,"queueOfflineMessage"],[91,29,160,27,"queueOfflineMessage"],[91,30,160,28,"messageData"],[91,41,160,85],[91,43,160,117],[92,6,161,4],[92,12,161,10,"response"],[92,20,161,18],[92,23,161,21],[92,29,161,27,"api"],[92,41,161,30],[92,42,161,30,"api"],[92,45,161,30],[92,46,161,31,"post"],[92,50,161,35],[92,51,161,36],[92,68,161,53],[92,70,161,55,"messageData"],[92,81,161,66],[92,82,161,67],[93,6,162,4],[93,13,162,11,"response"],[93,21,162,19],[93,22,162,20,"data"],[93,26,162,24],[94,4,163,2],[95,4,165,2],[95,10,165,8,"syncOfflineMessages"],[95,29,165,27,"syncOfflineMessages"],[95,30,165,27],[95,32,169,5],[96,6,170,4],[96,12,170,10,"response"],[96,20,170,18],[96,23,170,21],[96,29,170,27,"api"],[96,41,170,30],[96,42,170,30,"api"],[96,45,170,30],[96,46,170,31,"post"],[96,50,170,35],[96,51,170,36],[96,67,170,52],[96,68,170,53],[97,6,171,4],[97,13,171,11,"response"],[97,21,171,19],[97,22,171,20,"data"],[97,26,171,24],[98,4,172,2],[99,2,173,0],[100,2,175,7],[100,8,175,13,"chatApi"],[100,15,175,20],[100,18,175,23],[100,22,175,27,"ChatApiService"],[100,36,175,41],[100,37,175,42],[100,38,175,43],[101,0,175,44],[101,3]],"functionMap":{"names":["<global>","ChatApiService","ChatApiService#getConversations","ChatApiService#createConversation","ChatApiService#getMessages","ChatApiService#sendMessage","ChatApiService#getOrCreateDirectConversation","conversations.find$argument_0","conv.participants.some$argument_0","ChatApiService#getFilteredConversations","ChatApiService#updateConversationSettings","ChatApiService#sendTypingIndicator","ChatApiService#markMessageRead","ChatApiService#markAllMessagesRead","ChatApiService#getUserActivity","ChatApiService#updateUserActivity","ChatApiService#queueOfflineMessage","ChatApiService#syncOfflineMessages"],"mappings":"AAA;ACsD;ECC;GDG;EEE;GFG;EGE;GHG;EIE;GJO;EKG;wCCG;6BCG,yBD,CD;GLY;EQG;GRkB;ESE;GTM;EUE;GVM;EWE;GXE;EYE;GZE;EaE;GbQ;EcE;GdE;EeE;GfG;EgBE;GhBO;CDC"},"hasCjsExports":false},"type":"js/module"}]}