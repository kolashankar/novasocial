{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.runAtTargetFps = runAtTargetFps;\n  const _worklet_8194825293313_init_data = {\n    code: \"function getLastFrameProcessorCall_reactNativeVisionCamera_runAtTargetFpsJs1(frameProcessorFuncId){var _global$__frameProces,_global$__frameProces2;return(_global$__frameProces=(_global$__frameProces2=global.__frameProcessorRunAtTargetFpsMap)===null||_global$__frameProces2===void 0?void 0:_global$__frameProces2[frameProcessorFuncId])!==null&&_global$__frameProces!==void 0?_global$__frameProces:0;}\",\n    location: \"/app/frontend/node_modules/react-native-vision-camera/lib/commonjs/frame-processors/runAtTargetFps.js\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"getLastFrameProcessorCall_reactNativeVisionCamera_runAtTargetFpsJs1\\\",\\\"frameProcessorFuncId\\\",\\\"_global$__frameProces\\\",\\\"_global$__frameProces2\\\",\\\"global\\\",\\\"__frameProcessorRunAtTargetFpsMap\\\"],\\\"sources\\\":[\\\"/app/frontend/node_modules/react-native-vision-camera/lib/commonjs/frame-processors/runAtTargetFps.js\\\"],\\\"mappings\\\":\\\"AAMA,SAAAA,mEAAyDA,CAAAC,oBAAA,MAAAC,qBAAA,CAAAC,sBAAA,CAGvD,OAAAD,qBAAA,EAAAC,sBAAA,CAAOC,MAAM,CAACC,iCAAiC,UAAAF,sBAAA,iBAAxCA,sBAAA,CAA2CF,oBAAoB,CAAC,UAAAC,qBAAA,UAAAA,qBAAA,CAAI,CAAC,CAC9E\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  const getLastFrameProcessorCall = function () {\n    const _e = [new global.Error(), 1, -27];\n    const getLastFrameProcessorCall = function (frameProcessorFuncId) {\n      return global.__frameProcessorRunAtTargetFpsMap?.[frameProcessorFuncId] ?? 0;\n    };\n    getLastFrameProcessorCall.__closure = {};\n    getLastFrameProcessorCall.__workletHash = 8194825293313;\n    getLastFrameProcessorCall.__initData = _worklet_8194825293313_init_data;\n    getLastFrameProcessorCall.__stackDetails = _e;\n    return getLastFrameProcessorCall;\n  }();\n  const _worklet_4153016578430_init_data = {\n    code: \"function setLastFrameProcessorCall_reactNativeVisionCamera_runAtTargetFpsJs2(frameProcessorFuncId,value){if(global.__frameProcessorRunAtTargetFpsMap==null)global.__frameProcessorRunAtTargetFpsMap={};global.__frameProcessorRunAtTargetFpsMap[frameProcessorFuncId]=value;}\",\n    location: \"/app/frontend/node_modules/react-native-vision-camera/lib/commonjs/frame-processors/runAtTargetFps.js\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"setLastFrameProcessorCall_reactNativeVisionCamera_runAtTargetFpsJs2\\\",\\\"frameProcessorFuncId\\\",\\\"value\\\",\\\"global\\\",\\\"__frameProcessorRunAtTargetFpsMap\\\"],\\\"sources\\\":[\\\"/app/frontend/node_modules/react-native-vision-camera/lib/commonjs/frame-processors/runAtTargetFps.js\\\"],\\\"mappings\\\":\\\"AAWA,SAAAA,mEAAgEA,CAAAC,oBAAA,CAAAC,KAAA,EAG9D,GAAIC,MAAM,CAACC,iCAAiC,EAAI,IAAI,CAAED,MAAM,CAACC,iCAAiC,CAAG,CAAC,CAAC,CACnGD,MAAM,CAACC,iCAAiC,CAACH,oBAAoB,CAAC,CAAGC,KAAK,CACxE\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  const setLastFrameProcessorCall = function () {\n    const _e = [new global.Error(), 1, -27];\n    const setLastFrameProcessorCall = function (frameProcessorFuncId, value) {\n      if (global.__frameProcessorRunAtTargetFpsMap == null) global.__frameProcessorRunAtTargetFpsMap = {};\n      global.__frameProcessorRunAtTargetFpsMap[frameProcessorFuncId] = value;\n    };\n    setLastFrameProcessorCall.__closure = {};\n    setLastFrameProcessorCall.__workletHash = 4153016578430;\n    setLastFrameProcessorCall.__initData = _worklet_4153016578430_init_data;\n    setLastFrameProcessorCall.__stackDetails = _e;\n    return setLastFrameProcessorCall;\n  }();\n  /**\n   * Runs the given {@linkcode func} at the given target {@linkcode fps} rate.\n   *\n   * {@linkcode runAtTargetFps} still executes the given {@linkcode func} synchronously,\n   * so this is only useful for throttling calls to a plugin or logger.\n   *\n   * For example, if you want to scan faces only once per second to avoid excessive\n   * CPU usage, use {@linkcode runAtTargetFps runAtTargetFps(1, ...)}.\n   *\n   * @param fps The target FPS rate at which the given function should be executed\n   * @param func The function to execute.\n   * @returns The result of the function if it was executed, or `undefined` otherwise.\n   * @worklet\n   * @example\n   *\n   * ```ts\n   * const frameProcessor = useFrameProcessor((frame) => {\n   *   'worklet'\n   *   console.log('New Frame')\n   *   runAtTargetFps(5, () => {\n   *     'worklet'\n   *     const faces = detectFaces(frame)\n   *     console.log(`Detected a new face: ${faces[0]}`)\n   *   })\n   * })\n   * ```\n   */\n  const _worklet_12248206927550_init_data = {\n    code: \"function runAtTargetFps_reactNativeVisionCamera_runAtTargetFpsJs3(fps,func){const{getLastFrameProcessorCall,setLastFrameProcessorCall}=this.__closure;var _func$__workletHash;const funcId=(_func$__workletHash=func.__workletHash)!==null&&_func$__workletHash!==void 0?_func$__workletHash:'1';const targetIntervalMs=1000/fps;const now=performance.now();const diffToLastCall=now-getLastFrameProcessorCall(funcId);if(diffToLastCall>=targetIntervalMs){setLastFrameProcessorCall(funcId,now);return func();}return undefined;}\",\n    location: \"/app/frontend/node_modules/react-native-vision-camera/lib/commonjs/frame-processors/runAtTargetFps.js\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"runAtTargetFps_reactNativeVisionCamera_runAtTargetFpsJs3\\\",\\\"fps\\\",\\\"func\\\",\\\"getLastFrameProcessorCall\\\",\\\"setLastFrameProcessorCall\\\",\\\"__closure\\\",\\\"_func$__workletHash\\\",\\\"funcId\\\",\\\"__workletHash\\\",\\\"targetIntervalMs\\\",\\\"now\\\",\\\"performance\\\",\\\"diffToLastCall\\\",\\\"undefined\\\"],\\\"sources\\\":[\\\"/app/frontend/node_modules/react-native-vision-camera/lib/commonjs/frame-processors/runAtTargetFps.js\\\"],\\\"mappings\\\":\\\"AAkBA,SAAAA,yDAAAC,GAAA,CAAAC,IAAA,QAAAC,yBAAA,CAAAC,yBAAA,OAAAC,SAAA,KAAAC,mBAAA,CAGA,MAAAC,MAAA,EAAAD,mBAAA,CAAAJ,IAAA,CAAAM,aAAA,UAAAF,mBAAA,UAAAA,mBAAA,KACA,MAAAG,gBAAA,MAAAR,GAAA,CACA,MAAAS,GAAA,CAAAC,WAAA,CAAAD,GAAA,GACA,MAAAE,cAAA,CAAAF,GAAA,CAAAP,yBAAA,CAAAI,MAAA,EACA,GAAAK,cAAA,EAAAH,gBAAA,EACAL,yBAAA,CAAAG,MAAA,CAAAG,GAAA,EAEA,OAAAR,IAAA,GACA,CACA,OAAAW,SAAA,CACA\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  const runAtTargetFps = function () {\n    const _e = [new global.Error(), -3, -27];\n    const runAtTargetFps = function (fps, func) {\n      // @ts-expect-error\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      const funcId = func.__workletHash ?? '1';\n      const targetIntervalMs = 1000 / fps; // <-- 60 FPS => 16,6667ms interval\n      const now = performance.now();\n      const diffToLastCall = now - getLastFrameProcessorCall(funcId);\n      if (diffToLastCall >= targetIntervalMs) {\n        setLastFrameProcessorCall(funcId, now);\n        // Last Frame Processor call is already so long ago that we want to make a new call\n        return func();\n      }\n      return undefined;\n    };\n    runAtTargetFps.__closure = {\n      getLastFrameProcessorCall,\n      setLastFrameProcessorCall\n    };\n    runAtTargetFps.__workletHash = 12248206927550;\n    runAtTargetFps.__initData = _worklet_12248206927550_init_data;\n    runAtTargetFps.__stackDetails = _e;\n    return runAtTargetFps;\n  }();\n});","lineCount":101,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"runAtTargetFps"],[7,24,6,22],[7,27,6,25,"runAtTargetFps"],[7,41,6,39],[8,2,6,40],[8,8,6,40,"_worklet_8194825293313_init_data"],[8,40,6,40],[9,4,6,40,"code"],[9,8,6,40],[10,4,6,40,"location"],[10,12,6,40],[11,4,6,40,"sourceMap"],[11,13,6,40],[12,4,6,40,"version"],[12,11,6,40],[13,2,6,40],[14,2,6,40],[14,8,6,40,"getLastFrameProcessorCall"],[14,33,6,40],[14,36,7,0],[15,4,7,0],[15,10,7,0,"_e"],[15,12,7,0],[15,20,7,0,"global"],[15,26,7,0],[15,27,7,0,"Error"],[15,32,7,0],[16,4,7,0],[16,10,7,0,"getLastFrameProcessorCall"],[16,35,7,0],[16,47,7,0,"getLastFrameProcessorCall"],[16,48,7,35,"frameProcessorFuncId"],[16,68,7,55],[16,70,7,57],[17,6,10,2],[17,13,10,9,"global"],[17,19,10,15],[17,20,10,16,"__frameProcessorRunAtTargetFpsMap"],[17,53,10,49],[17,56,10,52,"frameProcessorFuncId"],[17,76,10,72],[17,77,10,73],[17,81,10,77],[17,82,10,78],[18,4,11,0],[18,5,11,1],[19,4,11,1,"getLastFrameProcessorCall"],[19,29,11,1],[19,30,11,1,"__closure"],[19,39,11,1],[20,4,11,1,"getLastFrameProcessorCall"],[20,29,11,1],[20,30,11,1,"__workletHash"],[20,43,11,1],[21,4,11,1,"getLastFrameProcessorCall"],[21,29,11,1],[21,30,11,1,"__initData"],[21,40,11,1],[21,43,11,1,"_worklet_8194825293313_init_data"],[21,75,11,1],[22,4,11,1,"getLastFrameProcessorCall"],[22,29,11,1],[22,30,11,1,"__stackDetails"],[22,44,11,1],[22,47,11,1,"_e"],[22,49,11,1],[23,4,11,1],[23,11,11,1,"getLastFrameProcessorCall"],[23,36,11,1],[24,2,11,1],[24,3,7,0],[25,2,7,0],[25,8,7,0,"_worklet_4153016578430_init_data"],[25,40,7,0],[26,4,7,0,"code"],[26,8,7,0],[27,4,7,0,"location"],[27,12,7,0],[28,4,7,0,"sourceMap"],[28,13,7,0],[29,4,7,0,"version"],[29,11,7,0],[30,2,7,0],[31,2,7,0],[31,8,7,0,"setLastFrameProcessorCall"],[31,33,7,0],[31,36,12,0],[32,4,12,0],[32,10,12,0,"_e"],[32,12,12,0],[32,20,12,0,"global"],[32,26,12,0],[32,27,12,0,"Error"],[32,32,12,0],[33,4,12,0],[33,10,12,0,"setLastFrameProcessorCall"],[33,35,12,0],[33,47,12,0,"setLastFrameProcessorCall"],[33,48,12,35,"frameProcessorFuncId"],[33,68,12,55],[33,70,12,57,"value"],[33,75,12,62],[33,77,12,64],[34,6,15,2],[34,10,15,6,"global"],[34,16,15,12],[34,17,15,13,"__frameProcessorRunAtTargetFpsMap"],[34,50,15,46],[34,54,15,50],[34,58,15,54],[34,60,15,56,"global"],[34,66,15,62],[34,67,15,63,"__frameProcessorRunAtTargetFpsMap"],[34,100,15,96],[34,103,15,99],[34,104,15,100],[34,105,15,101],[35,6,16,2,"global"],[35,12,16,8],[35,13,16,9,"__frameProcessorRunAtTargetFpsMap"],[35,46,16,42],[35,47,16,43,"frameProcessorFuncId"],[35,67,16,63],[35,68,16,64],[35,71,16,67,"value"],[35,76,16,72],[36,4,17,0],[36,5,17,1],[37,4,17,1,"setLastFrameProcessorCall"],[37,29,17,1],[37,30,17,1,"__closure"],[37,39,17,1],[38,4,17,1,"setLastFrameProcessorCall"],[38,29,17,1],[38,30,17,1,"__workletHash"],[38,43,17,1],[39,4,17,1,"setLastFrameProcessorCall"],[39,29,17,1],[39,30,17,1,"__initData"],[39,40,17,1],[39,43,17,1,"_worklet_4153016578430_init_data"],[39,75,17,1],[40,4,17,1,"setLastFrameProcessorCall"],[40,29,17,1],[40,30,17,1,"__stackDetails"],[40,44,17,1],[40,47,17,1,"_e"],[40,49,17,1],[41,4,17,1],[41,11,17,1,"setLastFrameProcessorCall"],[41,36,17,1],[42,2,17,1],[42,3,12,0],[43,2,19,0],[44,0,20,0],[45,0,21,0],[46,0,22,0],[47,0,23,0],[48,0,24,0],[49,0,25,0],[50,0,26,0],[51,0,27,0],[52,0,28,0],[53,0,29,0],[54,0,30,0],[55,0,31,0],[56,0,32,0],[57,0,33,0],[58,0,34,0],[59,0,35,0],[60,0,36,0],[61,0,37,0],[62,0,38,0],[63,0,39,0],[64,0,40,0],[65,0,41,0],[66,0,42,0],[67,0,43,0],[68,0,44,0],[69,0,45,0],[70,2,19,0],[70,8,19,0,"_worklet_12248206927550_init_data"],[70,41,19,0],[71,4,19,0,"code"],[71,8,19,0],[72,4,19,0,"location"],[72,12,19,0],[73,4,19,0,"sourceMap"],[73,13,19,0],[74,4,19,0,"version"],[74,11,19,0],[75,2,19,0],[76,2,19,0],[76,8,19,0,"runAtTargetFps"],[76,22,19,0],[76,25,46,0],[77,4,46,0],[77,10,46,0,"_e"],[77,12,46,0],[77,20,46,0,"global"],[77,26,46,0],[77,27,46,0,"Error"],[77,32,46,0],[78,4,46,0],[78,10,46,0,"runAtTargetFps"],[78,24,46,0],[78,36,46,0,"runAtTargetFps"],[78,37,46,24,"fps"],[78,40,46,27],[78,42,46,29,"func"],[78,46,46,33],[78,48,46,35],[79,6,49,2],[80,6,50,2],[81,6,51,2],[81,12,51,8,"funcId"],[81,18,51,14],[81,21,51,17,"func"],[81,25,51,21],[81,26,51,22,"__workletHash"],[81,39,51,35],[81,43,51,39],[81,46,51,42],[82,6,52,2],[82,12,52,8,"targetIntervalMs"],[82,28,52,24],[82,31,52,27],[82,35,52,31],[82,38,52,34,"fps"],[82,41,52,37],[82,42,52,38],[82,43,52,39],[83,6,53,2],[83,12,53,8,"now"],[83,15,53,11],[83,18,53,14,"performance"],[83,29,53,25],[83,30,53,26,"now"],[83,33,53,29],[83,34,53,30],[83,35,53,31],[84,6,54,2],[84,12,54,8,"diffToLastCall"],[84,26,54,22],[84,29,54,25,"now"],[84,32,54,28],[84,35,54,31,"getLastFrameProcessorCall"],[84,60,54,56],[84,61,54,57,"funcId"],[84,67,54,63],[84,68,54,64],[85,6,55,2],[85,10,55,6,"diffToLastCall"],[85,24,55,20],[85,28,55,24,"targetIntervalMs"],[85,44,55,40],[85,46,55,42],[86,8,56,4,"setLastFrameProcessorCall"],[86,33,56,29],[86,34,56,30,"funcId"],[86,40,56,36],[86,42,56,38,"now"],[86,45,56,41],[86,46,56,42],[87,8,57,4],[88,8,58,4],[88,15,58,11,"func"],[88,19,58,15],[88,20,58,16],[88,21,58,17],[89,6,59,2],[90,6,60,2],[90,13,60,9,"undefined"],[90,22,60,18],[91,4,61,0],[91,5,61,1],[92,4,61,1,"runAtTargetFps"],[92,18,61,1],[92,19,61,1,"__closure"],[92,28,61,1],[93,6,61,1,"getLastFrameProcessorCall"],[93,31,61,1],[94,6,61,1,"setLastFrameProcessorCall"],[95,4,61,1],[96,4,61,1,"runAtTargetFps"],[96,18,61,1],[96,19,61,1,"__workletHash"],[96,32,61,1],[97,4,61,1,"runAtTargetFps"],[97,18,61,1],[97,19,61,1,"__initData"],[97,29,61,1],[97,32,61,1,"_worklet_12248206927550_init_data"],[97,65,61,1],[98,4,61,1,"runAtTargetFps"],[98,18,61,1],[98,19,61,1,"__stackDetails"],[98,33,61,1],[98,36,61,1,"_e"],[98,38,61,1],[99,4,61,1],[99,11,61,1,"runAtTargetFps"],[99,25,61,1],[100,2,61,1],[100,3,46,0],[101,0,46,0],[101,3]],"functionMap":{"names":["<global>","getLastFrameProcessorCall","setLastFrameProcessorCall","runAtTargetFps"],"mappings":"AAA;ACM;CDI;AEC;CFK;AG6B;CHe"},"hasCjsExports":true},"type":"js/module"}]}