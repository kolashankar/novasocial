{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":53,"index":53}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"./useLayoutState","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":54},"end":{"line":2,"column":50,"index":104}}],"key":"492UtmrjepOeMNKrwkxWLoSiA4M=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.useRecyclingState = useRecyclingState;\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var _useLayoutState3 = require(_dependencyMap[2], \"./useLayoutState\");\n  /**\n   * A custom hook that provides state management with automatic reset functionality.\n   * Similar to useState, but automatically resets the state when specified dependencies change.\n   * This is particularly useful for managing state that needs to be reset when certain props or values change when items are recycled.\n   * This also avoids another setState call on recycling and helps with performance.\n   *\n   * @param initialState - The initial state value or a function that returns the initial state\n   * @param deps - Array of dependencies that trigger a state reset when changed\n   * @param onReset - Optional callback function that is called when the state is reset\n   * @returns A tuple containing:\n   *   - The current state value\n   *   - A setState function that works like useState's setState\n   */\n  function useRecyclingState(initialState, deps, onReset) {\n    // Store the current state value in a ref to persist between renders\n    var valueStore = (0, _react.useRef)();\n    // Use layoutState to trigger re-renders when state changes\n    var _useLayoutState = (0, _useLayoutState3.useLayoutState)(0),\n      _useLayoutState2 = (0, _slicedToArray.default)(_useLayoutState, 2),\n      _ = _useLayoutState2[0],\n      setCounter = _useLayoutState2[1];\n    // Reset state when dependencies change\n    (0, _react.useMemo)(() => {\n      // Calculate initial value from function or direct value\n      var initialValue = typeof initialState === \"function\" ? initialState() : initialState;\n      valueStore.current = initialValue;\n      // Call onReset callback if provided\n      onReset === null || onReset === void 0 ? void 0 : onReset();\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, deps);\n    /**\n     * Proxy setState function that updates the stored value and triggers a re-render.\n     * Only triggers a re-render if the new value is different from the current value.\n     */\n    var setStateProxy = (0, _react.useCallback)((newValue, skipParentLayout) => {\n      // Calculate next state value from function or direct value\n      var nextState = typeof newValue === \"function\" ? newValue(valueStore.current) : newValue;\n      // Only update and trigger re-render if value has changed\n      if (nextState !== valueStore.current) {\n        valueStore.current = nextState;\n        setCounter(prev => prev + 1, skipParentLayout);\n      }\n    }, [setCounter]);\n    return [valueStore.current, setStateProxy];\n  }\n});","lineCount":62,"map":[[12,2,16,0,"exports"],[12,9,16,0],[12,10,16,0,"useRecyclingState"],[12,27,16,0],[12,30,16,0,"useRecyclingState"],[12,47,16,0],[13,2,48,1],[13,6,48,1,"_babelRuntimeHelpersSlicedToArray"],[13,39,48,1],[13,42,48,1,"require"],[13,49,48,1],[13,50,48,1,"_dependencyMap"],[13,64,48,1],[14,2,48,1],[14,6,48,1,"_slicedToArray"],[14,20,48,1],[14,23,48,1,"_interopDefault"],[14,38,48,1],[14,39,48,1,"_babelRuntimeHelpersSlicedToArray"],[14,72,48,1],[15,2,1,0],[15,6,1,0,"_react"],[15,12,1,0],[15,15,1,0,"require"],[15,22,1,0],[15,23,1,0,"_dependencyMap"],[15,37,1,0],[16,2,2,0],[16,6,2,0,"_useLayoutState3"],[16,22,2,0],[16,25,2,0,"require"],[16,32,2,0],[16,33,2,0,"_dependencyMap"],[16,47,2,0],[17,2,3,0],[18,0,4,0],[19,0,5,0],[20,0,6,0],[21,0,7,0],[22,0,8,0],[23,0,9,0],[24,0,10,0],[25,0,11,0],[26,0,12,0],[27,0,13,0],[28,0,14,0],[29,0,15,0],[30,2,16,7],[30,11,16,16,"useRecyclingState"],[30,28,16,33,"useRecyclingState"],[30,29,16,34,"initialState"],[30,41,16,46],[30,43,16,48,"deps"],[30,47,16,52],[30,49,16,54,"onReset"],[30,56,16,61],[30,58,16,63],[31,4,17,4],[32,4,18,4],[32,8,18,10,"valueStore"],[32,18,18,20],[32,21,18,23],[32,25,18,23,"useRef"],[32,31,18,29],[32,32,18,29,"useRef"],[32,38,18,29],[32,40,18,30],[32,41,18,31],[33,4,19,4],[34,4,20,4],[34,8,20,4,"_useLayoutState"],[34,23,20,4],[34,26,20,28],[34,30,20,28,"useLayoutState"],[34,46,20,42],[34,47,20,42,"useLayoutState"],[34,61,20,42],[34,63,20,43],[34,64,20,44],[34,65,20,45],[35,6,20,45,"_useLayoutState2"],[35,22,20,45],[35,29,20,45,"_slicedToArray"],[35,43,20,45],[35,44,20,45,"default"],[35,51,20,45],[35,53,20,45,"_useLayoutState"],[35,68,20,45],[36,6,20,11,"_"],[36,7,20,12],[36,10,20,12,"_useLayoutState2"],[36,26,20,12],[37,6,20,14,"setCounter"],[37,16,20,24],[37,19,20,24,"_useLayoutState2"],[37,35,20,24],[38,4,21,4],[39,4,22,4],[39,8,22,4,"useMemo"],[39,14,22,11],[39,15,22,11,"useMemo"],[39,22,22,11],[39,24,22,12],[39,30,22,18],[40,6,23,8],[41,6,24,8],[41,10,24,14,"initialValue"],[41,22,24,26],[41,25,24,29],[41,32,24,36,"initialState"],[41,44,24,48],[41,49,24,53],[41,59,24,63],[41,62,25,14,"initialState"],[41,74,25,26],[41,75,25,27],[41,76,25,28],[41,79,26,14,"initialState"],[41,91,26,26],[42,6,27,8,"valueStore"],[42,16,27,18],[42,17,27,19,"current"],[42,24,27,26],[42,27,27,29,"initialValue"],[42,39,27,41],[43,6,28,8],[44,6,29,8,"onReset"],[44,13,29,15],[44,18,29,20],[44,22,29,24],[44,26,29,28,"onReset"],[44,33,29,35],[44,38,29,40],[44,43,29,45],[44,44,29,46],[44,47,29,49],[44,52,29,54],[44,53,29,55],[44,56,29,58,"onReset"],[44,63,29,65],[44,64,29,66],[44,65,29,67],[45,6,30,8],[46,4,31,4],[46,5,31,5],[46,7,31,7,"deps"],[46,11,31,11],[46,12,31,12],[47,4,32,4],[48,0,33,0],[49,0,34,0],[50,0,35,0],[51,4,36,4],[51,8,36,10,"setStateProxy"],[51,21,36,23],[51,24,36,26],[51,28,36,26,"useCallback"],[51,34,36,37],[51,35,36,37,"useCallback"],[51,46,36,37],[51,48,36,38],[51,49,36,39,"newValue"],[51,57,36,47],[51,59,36,49,"skipParentLayout"],[51,75,36,65],[51,80,36,70],[52,6,37,8],[53,6,38,8],[53,10,38,14,"nextState"],[53,19,38,23],[53,22,38,26],[53,29,38,33,"newValue"],[53,37,38,41],[53,42,38,46],[53,52,38,56],[53,55,39,14,"newValue"],[53,63,39,22],[53,64,39,23,"valueStore"],[53,74,39,33],[53,75,39,34,"current"],[53,82,39,41],[53,83,39,42],[53,86,40,14,"newValue"],[53,94,40,22],[54,6,41,8],[55,6,42,8],[55,10,42,12,"nextState"],[55,19,42,21],[55,24,42,26,"valueStore"],[55,34,42,36],[55,35,42,37,"current"],[55,42,42,44],[55,44,42,46],[56,8,43,12,"valueStore"],[56,18,43,22],[56,19,43,23,"current"],[56,26,43,30],[56,29,43,33,"nextState"],[56,38,43,42],[57,8,44,12,"setCounter"],[57,18,44,22],[57,19,44,24,"prev"],[57,23,44,28],[57,27,44,33,"prev"],[57,31,44,37],[57,34,44,40],[57,35,44,41],[57,37,44,43,"skipParentLayout"],[57,53,44,59],[57,54,44,60],[58,6,45,8],[59,4,46,4],[59,5,46,5],[59,7,46,7],[59,8,46,8,"setCounter"],[59,18,46,18],[59,19,46,19],[59,20,46,20],[60,4,47,4],[60,11,47,11],[60,12,47,12,"valueStore"],[60,22,47,22],[60,23,47,23,"current"],[60,30,47,30],[60,32,47,32,"setStateProxy"],[60,45,47,45],[60,46,47,46],[61,2,48,0],[62,0,48,1],[62,3]],"functionMap":{"names":["<global>","useRecyclingState","useMemo$argument_0","setStateProxy","setCounter$argument_0"],"mappings":"AAA;OCe;YCM;KDS;sCEK;uBCQ,kBD;KFE;CDE"},"hasCjsExports":false},"type":"js/module"}]}