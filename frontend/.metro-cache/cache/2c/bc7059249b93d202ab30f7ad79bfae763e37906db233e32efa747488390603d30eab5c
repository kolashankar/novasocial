{"dependencies":[{"name":"../CameraError","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":52,"index":52}}],"key":"rDg0+dt7WDtPPXvuT9EhGqNjS6Y=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.getCameraFormat = getCameraFormat;\n  var _CameraError = require(_dependencyMap[0], \"../CameraError\");\n  function filtersToFilterMap(filters) {\n    return filters.reduce((map, curr, index) => {\n      for (const key in curr) {\n        // @ts-expect-error keys are untyped\n        map[key] = {\n          // @ts-expect-error keys are untyped\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n          target: curr[key],\n          priority: filters.length - index\n        };\n      }\n      return map;\n    }, {});\n  }\n\n  /**\n   * Get the best matching Camera format for the given device that satisfies your requirements using a sorting filter. By default, formats are sorted by highest to lowest resolution.\n   *\n   * The {@linkcode filters | filters} are ranked by priority, from highest to lowest.\n   * This means the first item you pass will have a higher priority than the second, and so on.\n   *\n   * @param device The Camera Device you're currently using\n   * @param filters The filters you want to use. The format that matches your filter the closest will be returned\n   * @returns The format that matches your filter the closest.\n   *\n   * @example\n   * ```ts\n   * const format = getCameraFormat(device, [\n   *   { videoResolution: { width: 3048, height: 2160 } },\n   *   { fps: 60 }\n   * ])\n   * ```\n   */\n  function getCameraFormat(device, filters) {\n    // Combine filters into a single filter map for constant-time lookup\n    const filter = filtersToFilterMap(filters);\n    let bestFormat = device.formats[0];\n    if (bestFormat == null) throw new _CameraError.CameraRuntimeError('device/invalid-device', `The given Camera Device (${device.id}) does not have any formats!`);\n\n    // Compare each format using a point scoring system\n    for (const format of device.formats) {\n      let leftPoints = 0;\n      let rightPoints = 0;\n\n      // Video Resolution\n      if (filter.videoResolution != null) {\n        const leftVideoResolution = bestFormat.videoWidth * bestFormat.videoHeight;\n        const rightVideoResolution = format.videoWidth * format.videoHeight;\n        if (filter.videoResolution.target === 'max') {\n          // We just want the maximum resolution\n          if (leftVideoResolution > rightVideoResolution) leftPoints += filter.videoResolution.priority;\n          if (rightVideoResolution > leftVideoResolution) rightPoints += filter.videoResolution.priority;\n        } else {\n          // Find video resolution closest to the filter (ignoring orientation)\n          const targetResolution = filter.videoResolution.target.width * filter.videoResolution.target.height;\n          const leftDiff = Math.abs(leftVideoResolution - targetResolution);\n          const rightDiff = Math.abs(rightVideoResolution - targetResolution);\n          if (leftDiff < rightDiff) leftPoints += filter.videoResolution.priority;\n          if (rightDiff < leftDiff) rightPoints += filter.videoResolution.priority;\n        }\n      }\n\n      // Photo Resolution\n      if (filter.photoResolution != null) {\n        const leftPhotoResolution = bestFormat.photoWidth * bestFormat.photoHeight;\n        const rightPhotoResolution = format.photoWidth * format.photoHeight;\n        if (filter.photoResolution.target === 'max') {\n          // We just want the maximum resolution\n          if (leftPhotoResolution > rightPhotoResolution) leftPoints += filter.photoResolution.priority;\n          if (rightPhotoResolution > leftPhotoResolution) rightPoints += filter.photoResolution.priority;\n        } else {\n          // Find closest photo resolution to the filter (ignoring orientation)\n          const targetResolution = filter.photoResolution.target.width * filter.photoResolution.target.height;\n          const leftDiff = Math.abs(leftPhotoResolution - targetResolution);\n          const rightDiff = Math.abs(rightPhotoResolution - targetResolution);\n          if (leftDiff < rightDiff) leftPoints += filter.photoResolution.priority;\n          if (rightDiff < leftDiff) rightPoints += filter.photoResolution.priority;\n        }\n      }\n\n      // Find closest aspect ratio (video)\n      if (filter.videoAspectRatio != null) {\n        const leftAspect = bestFormat.videoWidth / bestFormat.videoHeight;\n        const rightAspect = format.videoWidth / format.videoHeight;\n        const leftDiff = Math.abs(leftAspect - filter.videoAspectRatio.target);\n        const rightDiff = Math.abs(rightAspect - filter.videoAspectRatio.target);\n        if (leftDiff < rightDiff) leftPoints += filter.videoAspectRatio.priority;\n        if (rightDiff < leftDiff) rightPoints += filter.videoAspectRatio.priority;\n      }\n\n      // Find closest aspect ratio (photo)\n      if (filter.photoAspectRatio != null) {\n        const leftAspect = bestFormat.photoWidth / bestFormat.photoHeight;\n        const rightAspect = format.photoWidth / format.photoHeight;\n        const leftDiff = Math.abs(leftAspect - filter.photoAspectRatio.target);\n        const rightDiff = Math.abs(rightAspect - filter.photoAspectRatio.target);\n        if (leftDiff < rightDiff) leftPoints += filter.photoAspectRatio.priority;\n        if (rightDiff < leftDiff) rightPoints += filter.photoAspectRatio.priority;\n      }\n\n      // Find closest max FPS\n      if (filter.fps != null) {\n        if (filter.fps.target === 'max') {\n          if (bestFormat.maxFps > format.maxFps) leftPoints += filter.fps.priority;\n          if (format.maxFps > bestFormat.maxFps) rightPoints += filter.fps.priority;\n        } else {\n          if (bestFormat.maxFps >= filter.fps.target) leftPoints += filter.fps.priority;\n          if (format.maxFps >= filter.fps.target) rightPoints += filter.fps.priority;\n        }\n      }\n\n      // Find closest ISO\n      if (filter.iso != null) {\n        if (filter.iso.target === 'max') {\n          if (bestFormat.maxISO > format.maxISO) leftPoints += filter.iso.priority;\n          if (format.maxISO > bestFormat.maxISO) rightPoints += filter.iso.priority;\n        } else if (filter.iso.target === 'min') {\n          if (bestFormat.minISO < format.minISO) leftPoints += filter.iso.priority;\n          if (format.minISO < bestFormat.minISO) rightPoints += filter.iso.priority;\n        } else {\n          if (filter.iso.target >= bestFormat.minISO && filter.iso.target <= bestFormat.maxISO) leftPoints += filter.iso.priority;\n          if (filter.iso.target >= format.minISO && filter.iso.target <= format.maxISO) rightPoints += filter.iso.priority;\n        }\n      }\n\n      // Find video stabilization mode\n      if (filter.videoStabilizationMode != null) {\n        if (bestFormat.videoStabilizationModes.includes(filter.videoStabilizationMode.target)) leftPoints += filter.videoStabilizationMode.priority;\n        if (format.videoStabilizationModes.includes(filter.videoStabilizationMode.target)) rightPoints += filter.videoStabilizationMode.priority;\n      }\n\n      // Find Photo HDR formats\n      if (filter.photoHdr != null) {\n        if (bestFormat.supportsPhotoHdr === filter.photoHdr.target) leftPoints += filter.photoHdr.priority;\n        if (format.supportsPhotoHdr === filter.photoHdr.target) rightPoints += filter.photoHdr.priority;\n      }\n\n      // Find Video HDR formats\n      if (filter.videoHdr != null) {\n        if (bestFormat.supportsVideoHdr === filter.videoHdr.target) leftPoints += filter.videoHdr.priority;\n        if (format.supportsVideoHdr === filter.videoHdr.target) rightPoints += filter.videoHdr.priority;\n      }\n\n      // Find matching AF system\n      if (filter.autoFocusSystem != null) {\n        if (bestFormat.autoFocusSystem === filter.autoFocusSystem.target) leftPoints += filter.autoFocusSystem.priority;\n        if (format.autoFocusSystem === filter.autoFocusSystem.target) rightPoints += filter.autoFocusSystem.priority;\n      }\n      if (rightPoints > leftPoints) bestFormat = format;\n    }\n    return bestFormat;\n  }\n});","lineCount":161,"map":[[7,2,35,0,"exports"],[7,9,35,0],[7,10,35,0,"getCameraFormat"],[7,25,35,0],[7,28,35,0,"getCameraFormat"],[7,43,35,0],[8,2,1,0],[8,6,1,0,"_CameraError"],[8,18,1,0],[8,21,1,0,"require"],[8,28,1,0],[8,29,1,0,"_dependencyMap"],[8,43,1,0],[9,2,2,0],[9,11,2,9,"filtersToFilterMap"],[9,29,2,27,"filtersToFilterMap"],[9,30,2,28,"filters"],[9,37,2,35],[9,39,2,37],[10,4,3,2],[10,11,3,9,"filters"],[10,18,3,16],[10,19,3,17,"reduce"],[10,25,3,23],[10,26,3,24],[10,27,3,25,"map"],[10,30,3,28],[10,32,3,30,"curr"],[10,36,3,34],[10,38,3,36,"index"],[10,43,3,41],[10,48,3,46],[11,6,4,4],[11,11,4,9],[11,17,4,15,"key"],[11,20,4,18],[11,24,4,22,"curr"],[11,28,4,26],[11,30,4,28],[12,8,5,6],[13,8,6,6,"map"],[13,11,6,9],[13,12,6,10,"key"],[13,15,6,13],[13,16,6,14],[13,19,6,17],[14,10,7,8],[15,10,8,8],[16,10,9,8,"target"],[16,16,9,14],[16,18,9,16,"curr"],[16,22,9,20],[16,23,9,21,"key"],[16,26,9,24],[16,27,9,25],[17,10,10,8,"priority"],[17,18,10,16],[17,20,10,18,"filters"],[17,27,10,25],[17,28,10,26,"length"],[17,34,10,32],[17,37,10,35,"index"],[18,8,11,6],[18,9,11,7],[19,6,12,4],[20,6,13,4],[20,13,13,11,"map"],[20,16,13,14],[21,4,14,2],[21,5,14,3],[21,7,14,5],[21,8,14,6],[21,9,14,7],[21,10,14,8],[22,2,15,0],[24,2,17,0],[25,0,18,0],[26,0,19,0],[27,0,20,0],[28,0,21,0],[29,0,22,0],[30,0,23,0],[31,0,24,0],[32,0,25,0],[33,0,26,0],[34,0,27,0],[35,0,28,0],[36,0,29,0],[37,0,30,0],[38,0,31,0],[39,0,32,0],[40,0,33,0],[41,0,34,0],[42,2,35,7],[42,11,35,16,"getCameraFormat"],[42,26,35,31,"getCameraFormat"],[42,27,35,32,"device"],[42,33,35,38],[42,35,35,40,"filters"],[42,42,35,47],[42,44,35,49],[43,4,36,2],[44,4,37,2],[44,10,37,8,"filter"],[44,16,37,14],[44,19,37,17,"filtersToFilterMap"],[44,37,37,35],[44,38,37,36,"filters"],[44,45,37,43],[44,46,37,44],[45,4,38,2],[45,8,38,6,"bestFormat"],[45,18,38,16],[45,21,38,19,"device"],[45,27,38,25],[45,28,38,26,"formats"],[45,35,38,33],[45,36,38,34],[45,37,38,35],[45,38,38,36],[46,4,39,2],[46,8,39,6,"bestFormat"],[46,18,39,16],[46,22,39,20],[46,26,39,24],[46,28,39,26],[46,34,39,32],[46,38,39,36,"CameraRuntimeError"],[46,50,39,54],[46,51,39,54,"CameraRuntimeError"],[46,69,39,54],[46,70,39,55],[46,93,39,78],[46,95,39,80],[46,123,39,108,"device"],[46,129,39,114],[46,130,39,115,"id"],[46,132,39,117],[46,162,39,147],[46,163,39,148],[48,4,41,2],[49,4,42,2],[49,9,42,7],[49,15,42,13,"format"],[49,21,42,19],[49,25,42,23,"device"],[49,31,42,29],[49,32,42,30,"formats"],[49,39,42,37],[49,41,42,39],[50,6,43,4],[50,10,43,8,"leftPoints"],[50,20,43,18],[50,23,43,21],[50,24,43,22],[51,6,44,4],[51,10,44,8,"rightPoints"],[51,21,44,19],[51,24,44,22],[51,25,44,23],[53,6,46,4],[54,6,47,4],[54,10,47,8,"filter"],[54,16,47,14],[54,17,47,15,"videoResolution"],[54,32,47,30],[54,36,47,34],[54,40,47,38],[54,42,47,40],[55,8,48,6],[55,14,48,12,"leftVideoResolution"],[55,33,48,31],[55,36,48,34,"bestFormat"],[55,46,48,44],[55,47,48,45,"videoWidth"],[55,57,48,55],[55,60,48,58,"bestFormat"],[55,70,48,68],[55,71,48,69,"videoHeight"],[55,82,48,80],[56,8,49,6],[56,14,49,12,"rightVideoResolution"],[56,34,49,32],[56,37,49,35,"format"],[56,43,49,41],[56,44,49,42,"videoWidth"],[56,54,49,52],[56,57,49,55,"format"],[56,63,49,61],[56,64,49,62,"videoHeight"],[56,75,49,73],[57,8,50,6],[57,12,50,10,"filter"],[57,18,50,16],[57,19,50,17,"videoResolution"],[57,34,50,32],[57,35,50,33,"target"],[57,41,50,39],[57,46,50,44],[57,51,50,49],[57,53,50,51],[58,10,51,8],[59,10,52,8],[59,14,52,12,"leftVideoResolution"],[59,33,52,31],[59,36,52,34,"rightVideoResolution"],[59,56,52,54],[59,58,52,56,"leftPoints"],[59,68,52,66],[59,72,52,70,"filter"],[59,78,52,76],[59,79,52,77,"videoResolution"],[59,94,52,92],[59,95,52,93,"priority"],[59,103,52,101],[60,10,53,8],[60,14,53,12,"rightVideoResolution"],[60,34,53,32],[60,37,53,35,"leftVideoResolution"],[60,56,53,54],[60,58,53,56,"rightPoints"],[60,69,53,67],[60,73,53,71,"filter"],[60,79,53,77],[60,80,53,78,"videoResolution"],[60,95,53,93],[60,96,53,94,"priority"],[60,104,53,102],[61,8,54,6],[61,9,54,7],[61,15,54,13],[62,10,55,8],[63,10,56,8],[63,16,56,14,"targetResolution"],[63,32,56,30],[63,35,56,33,"filter"],[63,41,56,39],[63,42,56,40,"videoResolution"],[63,57,56,55],[63,58,56,56,"target"],[63,64,56,62],[63,65,56,63,"width"],[63,70,56,68],[63,73,56,71,"filter"],[63,79,56,77],[63,80,56,78,"videoResolution"],[63,95,56,93],[63,96,56,94,"target"],[63,102,56,100],[63,103,56,101,"height"],[63,109,56,107],[64,10,57,8],[64,16,57,14,"leftDiff"],[64,24,57,22],[64,27,57,25,"Math"],[64,31,57,29],[64,32,57,30,"abs"],[64,35,57,33],[64,36,57,34,"leftVideoResolution"],[64,55,57,53],[64,58,57,56,"targetResolution"],[64,74,57,72],[64,75,57,73],[65,10,58,8],[65,16,58,14,"rightDiff"],[65,25,58,23],[65,28,58,26,"Math"],[65,32,58,30],[65,33,58,31,"abs"],[65,36,58,34],[65,37,58,35,"rightVideoResolution"],[65,57,58,55],[65,60,58,58,"targetResolution"],[65,76,58,74],[65,77,58,75],[66,10,59,8],[66,14,59,12,"leftDiff"],[66,22,59,20],[66,25,59,23,"rightDiff"],[66,34,59,32],[66,36,59,34,"leftPoints"],[66,46,59,44],[66,50,59,48,"filter"],[66,56,59,54],[66,57,59,55,"videoResolution"],[66,72,59,70],[66,73,59,71,"priority"],[66,81,59,79],[67,10,60,8],[67,14,60,12,"rightDiff"],[67,23,60,21],[67,26,60,24,"leftDiff"],[67,34,60,32],[67,36,60,34,"rightPoints"],[67,47,60,45],[67,51,60,49,"filter"],[67,57,60,55],[67,58,60,56,"videoResolution"],[67,73,60,71],[67,74,60,72,"priority"],[67,82,60,80],[68,8,61,6],[69,6,62,4],[71,6,64,4],[72,6,65,4],[72,10,65,8,"filter"],[72,16,65,14],[72,17,65,15,"photoResolution"],[72,32,65,30],[72,36,65,34],[72,40,65,38],[72,42,65,40],[73,8,66,6],[73,14,66,12,"leftPhotoResolution"],[73,33,66,31],[73,36,66,34,"bestFormat"],[73,46,66,44],[73,47,66,45,"photoWidth"],[73,57,66,55],[73,60,66,58,"bestFormat"],[73,70,66,68],[73,71,66,69,"photoHeight"],[73,82,66,80],[74,8,67,6],[74,14,67,12,"rightPhotoResolution"],[74,34,67,32],[74,37,67,35,"format"],[74,43,67,41],[74,44,67,42,"photoWidth"],[74,54,67,52],[74,57,67,55,"format"],[74,63,67,61],[74,64,67,62,"photoHeight"],[74,75,67,73],[75,8,68,6],[75,12,68,10,"filter"],[75,18,68,16],[75,19,68,17,"photoResolution"],[75,34,68,32],[75,35,68,33,"target"],[75,41,68,39],[75,46,68,44],[75,51,68,49],[75,53,68,51],[76,10,69,8],[77,10,70,8],[77,14,70,12,"leftPhotoResolution"],[77,33,70,31],[77,36,70,34,"rightPhotoResolution"],[77,56,70,54],[77,58,70,56,"leftPoints"],[77,68,70,66],[77,72,70,70,"filter"],[77,78,70,76],[77,79,70,77,"photoResolution"],[77,94,70,92],[77,95,70,93,"priority"],[77,103,70,101],[78,10,71,8],[78,14,71,12,"rightPhotoResolution"],[78,34,71,32],[78,37,71,35,"leftPhotoResolution"],[78,56,71,54],[78,58,71,56,"rightPoints"],[78,69,71,67],[78,73,71,71,"filter"],[78,79,71,77],[78,80,71,78,"photoResolution"],[78,95,71,93],[78,96,71,94,"priority"],[78,104,71,102],[79,8,72,6],[79,9,72,7],[79,15,72,13],[80,10,73,8],[81,10,74,8],[81,16,74,14,"targetResolution"],[81,32,74,30],[81,35,74,33,"filter"],[81,41,74,39],[81,42,74,40,"photoResolution"],[81,57,74,55],[81,58,74,56,"target"],[81,64,74,62],[81,65,74,63,"width"],[81,70,74,68],[81,73,74,71,"filter"],[81,79,74,77],[81,80,74,78,"photoResolution"],[81,95,74,93],[81,96,74,94,"target"],[81,102,74,100],[81,103,74,101,"height"],[81,109,74,107],[82,10,75,8],[82,16,75,14,"leftDiff"],[82,24,75,22],[82,27,75,25,"Math"],[82,31,75,29],[82,32,75,30,"abs"],[82,35,75,33],[82,36,75,34,"leftPhotoResolution"],[82,55,75,53],[82,58,75,56,"targetResolution"],[82,74,75,72],[82,75,75,73],[83,10,76,8],[83,16,76,14,"rightDiff"],[83,25,76,23],[83,28,76,26,"Math"],[83,32,76,30],[83,33,76,31,"abs"],[83,36,76,34],[83,37,76,35,"rightPhotoResolution"],[83,57,76,55],[83,60,76,58,"targetResolution"],[83,76,76,74],[83,77,76,75],[84,10,77,8],[84,14,77,12,"leftDiff"],[84,22,77,20],[84,25,77,23,"rightDiff"],[84,34,77,32],[84,36,77,34,"leftPoints"],[84,46,77,44],[84,50,77,48,"filter"],[84,56,77,54],[84,57,77,55,"photoResolution"],[84,72,77,70],[84,73,77,71,"priority"],[84,81,77,79],[85,10,78,8],[85,14,78,12,"rightDiff"],[85,23,78,21],[85,26,78,24,"leftDiff"],[85,34,78,32],[85,36,78,34,"rightPoints"],[85,47,78,45],[85,51,78,49,"filter"],[85,57,78,55],[85,58,78,56,"photoResolution"],[85,73,78,71],[85,74,78,72,"priority"],[85,82,78,80],[86,8,79,6],[87,6,80,4],[89,6,82,4],[90,6,83,4],[90,10,83,8,"filter"],[90,16,83,14],[90,17,83,15,"videoAspectRatio"],[90,33,83,31],[90,37,83,35],[90,41,83,39],[90,43,83,41],[91,8,84,6],[91,14,84,12,"leftAspect"],[91,24,84,22],[91,27,84,25,"bestFormat"],[91,37,84,35],[91,38,84,36,"videoWidth"],[91,48,84,46],[91,51,84,49,"bestFormat"],[91,61,84,59],[91,62,84,60,"videoHeight"],[91,73,84,71],[92,8,85,6],[92,14,85,12,"rightAspect"],[92,25,85,23],[92,28,85,26,"format"],[92,34,85,32],[92,35,85,33,"videoWidth"],[92,45,85,43],[92,48,85,46,"format"],[92,54,85,52],[92,55,85,53,"videoHeight"],[92,66,85,64],[93,8,86,6],[93,14,86,12,"leftDiff"],[93,22,86,20],[93,25,86,23,"Math"],[93,29,86,27],[93,30,86,28,"abs"],[93,33,86,31],[93,34,86,32,"leftAspect"],[93,44,86,42],[93,47,86,45,"filter"],[93,53,86,51],[93,54,86,52,"videoAspectRatio"],[93,70,86,68],[93,71,86,69,"target"],[93,77,86,75],[93,78,86,76],[94,8,87,6],[94,14,87,12,"rightDiff"],[94,23,87,21],[94,26,87,24,"Math"],[94,30,87,28],[94,31,87,29,"abs"],[94,34,87,32],[94,35,87,33,"rightAspect"],[94,46,87,44],[94,49,87,47,"filter"],[94,55,87,53],[94,56,87,54,"videoAspectRatio"],[94,72,87,70],[94,73,87,71,"target"],[94,79,87,77],[94,80,87,78],[95,8,88,6],[95,12,88,10,"leftDiff"],[95,20,88,18],[95,23,88,21,"rightDiff"],[95,32,88,30],[95,34,88,32,"leftPoints"],[95,44,88,42],[95,48,88,46,"filter"],[95,54,88,52],[95,55,88,53,"videoAspectRatio"],[95,71,88,69],[95,72,88,70,"priority"],[95,80,88,78],[96,8,89,6],[96,12,89,10,"rightDiff"],[96,21,89,19],[96,24,89,22,"leftDiff"],[96,32,89,30],[96,34,89,32,"rightPoints"],[96,45,89,43],[96,49,89,47,"filter"],[96,55,89,53],[96,56,89,54,"videoAspectRatio"],[96,72,89,70],[96,73,89,71,"priority"],[96,81,89,79],[97,6,90,4],[99,6,92,4],[100,6,93,4],[100,10,93,8,"filter"],[100,16,93,14],[100,17,93,15,"photoAspectRatio"],[100,33,93,31],[100,37,93,35],[100,41,93,39],[100,43,93,41],[101,8,94,6],[101,14,94,12,"leftAspect"],[101,24,94,22],[101,27,94,25,"bestFormat"],[101,37,94,35],[101,38,94,36,"photoWidth"],[101,48,94,46],[101,51,94,49,"bestFormat"],[101,61,94,59],[101,62,94,60,"photoHeight"],[101,73,94,71],[102,8,95,6],[102,14,95,12,"rightAspect"],[102,25,95,23],[102,28,95,26,"format"],[102,34,95,32],[102,35,95,33,"photoWidth"],[102,45,95,43],[102,48,95,46,"format"],[102,54,95,52],[102,55,95,53,"photoHeight"],[102,66,95,64],[103,8,96,6],[103,14,96,12,"leftDiff"],[103,22,96,20],[103,25,96,23,"Math"],[103,29,96,27],[103,30,96,28,"abs"],[103,33,96,31],[103,34,96,32,"leftAspect"],[103,44,96,42],[103,47,96,45,"filter"],[103,53,96,51],[103,54,96,52,"photoAspectRatio"],[103,70,96,68],[103,71,96,69,"target"],[103,77,96,75],[103,78,96,76],[104,8,97,6],[104,14,97,12,"rightDiff"],[104,23,97,21],[104,26,97,24,"Math"],[104,30,97,28],[104,31,97,29,"abs"],[104,34,97,32],[104,35,97,33,"rightAspect"],[104,46,97,44],[104,49,97,47,"filter"],[104,55,97,53],[104,56,97,54,"photoAspectRatio"],[104,72,97,70],[104,73,97,71,"target"],[104,79,97,77],[104,80,97,78],[105,8,98,6],[105,12,98,10,"leftDiff"],[105,20,98,18],[105,23,98,21,"rightDiff"],[105,32,98,30],[105,34,98,32,"leftPoints"],[105,44,98,42],[105,48,98,46,"filter"],[105,54,98,52],[105,55,98,53,"photoAspectRatio"],[105,71,98,69],[105,72,98,70,"priority"],[105,80,98,78],[106,8,99,6],[106,12,99,10,"rightDiff"],[106,21,99,19],[106,24,99,22,"leftDiff"],[106,32,99,30],[106,34,99,32,"rightPoints"],[106,45,99,43],[106,49,99,47,"filter"],[106,55,99,53],[106,56,99,54,"photoAspectRatio"],[106,72,99,70],[106,73,99,71,"priority"],[106,81,99,79],[107,6,100,4],[109,6,102,4],[110,6,103,4],[110,10,103,8,"filter"],[110,16,103,14],[110,17,103,15,"fps"],[110,20,103,18],[110,24,103,22],[110,28,103,26],[110,30,103,28],[111,8,104,6],[111,12,104,10,"filter"],[111,18,104,16],[111,19,104,17,"fps"],[111,22,104,20],[111,23,104,21,"target"],[111,29,104,27],[111,34,104,32],[111,39,104,37],[111,41,104,39],[112,10,105,8],[112,14,105,12,"bestFormat"],[112,24,105,22],[112,25,105,23,"maxFps"],[112,31,105,29],[112,34,105,32,"format"],[112,40,105,38],[112,41,105,39,"maxFps"],[112,47,105,45],[112,49,105,47,"leftPoints"],[112,59,105,57],[112,63,105,61,"filter"],[112,69,105,67],[112,70,105,68,"fps"],[112,73,105,71],[112,74,105,72,"priority"],[112,82,105,80],[113,10,106,8],[113,14,106,12,"format"],[113,20,106,18],[113,21,106,19,"maxFps"],[113,27,106,25],[113,30,106,28,"bestFormat"],[113,40,106,38],[113,41,106,39,"maxFps"],[113,47,106,45],[113,49,106,47,"rightPoints"],[113,60,106,58],[113,64,106,62,"filter"],[113,70,106,68],[113,71,106,69,"fps"],[113,74,106,72],[113,75,106,73,"priority"],[113,83,106,81],[114,8,107,6],[114,9,107,7],[114,15,107,13],[115,10,108,8],[115,14,108,12,"bestFormat"],[115,24,108,22],[115,25,108,23,"maxFps"],[115,31,108,29],[115,35,108,33,"filter"],[115,41,108,39],[115,42,108,40,"fps"],[115,45,108,43],[115,46,108,44,"target"],[115,52,108,50],[115,54,108,52,"leftPoints"],[115,64,108,62],[115,68,108,66,"filter"],[115,74,108,72],[115,75,108,73,"fps"],[115,78,108,76],[115,79,108,77,"priority"],[115,87,108,85],[116,10,109,8],[116,14,109,12,"format"],[116,20,109,18],[116,21,109,19,"maxFps"],[116,27,109,25],[116,31,109,29,"filter"],[116,37,109,35],[116,38,109,36,"fps"],[116,41,109,39],[116,42,109,40,"target"],[116,48,109,46],[116,50,109,48,"rightPoints"],[116,61,109,59],[116,65,109,63,"filter"],[116,71,109,69],[116,72,109,70,"fps"],[116,75,109,73],[116,76,109,74,"priority"],[116,84,109,82],[117,8,110,6],[118,6,111,4],[120,6,113,4],[121,6,114,4],[121,10,114,8,"filter"],[121,16,114,14],[121,17,114,15,"iso"],[121,20,114,18],[121,24,114,22],[121,28,114,26],[121,30,114,28],[122,8,115,6],[122,12,115,10,"filter"],[122,18,115,16],[122,19,115,17,"iso"],[122,22,115,20],[122,23,115,21,"target"],[122,29,115,27],[122,34,115,32],[122,39,115,37],[122,41,115,39],[123,10,116,8],[123,14,116,12,"bestFormat"],[123,24,116,22],[123,25,116,23,"maxISO"],[123,31,116,29],[123,34,116,32,"format"],[123,40,116,38],[123,41,116,39,"maxISO"],[123,47,116,45],[123,49,116,47,"leftPoints"],[123,59,116,57],[123,63,116,61,"filter"],[123,69,116,67],[123,70,116,68,"iso"],[123,73,116,71],[123,74,116,72,"priority"],[123,82,116,80],[124,10,117,8],[124,14,117,12,"format"],[124,20,117,18],[124,21,117,19,"maxISO"],[124,27,117,25],[124,30,117,28,"bestFormat"],[124,40,117,38],[124,41,117,39,"maxISO"],[124,47,117,45],[124,49,117,47,"rightPoints"],[124,60,117,58],[124,64,117,62,"filter"],[124,70,117,68],[124,71,117,69,"iso"],[124,74,117,72],[124,75,117,73,"priority"],[124,83,117,81],[125,8,118,6],[125,9,118,7],[125,15,118,13],[125,19,118,17,"filter"],[125,25,118,23],[125,26,118,24,"iso"],[125,29,118,27],[125,30,118,28,"target"],[125,36,118,34],[125,41,118,39],[125,46,118,44],[125,48,118,46],[126,10,119,8],[126,14,119,12,"bestFormat"],[126,24,119,22],[126,25,119,23,"minISO"],[126,31,119,29],[126,34,119,32,"format"],[126,40,119,38],[126,41,119,39,"minISO"],[126,47,119,45],[126,49,119,47,"leftPoints"],[126,59,119,57],[126,63,119,61,"filter"],[126,69,119,67],[126,70,119,68,"iso"],[126,73,119,71],[126,74,119,72,"priority"],[126,82,119,80],[127,10,120,8],[127,14,120,12,"format"],[127,20,120,18],[127,21,120,19,"minISO"],[127,27,120,25],[127,30,120,28,"bestFormat"],[127,40,120,38],[127,41,120,39,"minISO"],[127,47,120,45],[127,49,120,47,"rightPoints"],[127,60,120,58],[127,64,120,62,"filter"],[127,70,120,68],[127,71,120,69,"iso"],[127,74,120,72],[127,75,120,73,"priority"],[127,83,120,81],[128,8,121,6],[128,9,121,7],[128,15,121,13],[129,10,122,8],[129,14,122,12,"filter"],[129,20,122,18],[129,21,122,19,"iso"],[129,24,122,22],[129,25,122,23,"target"],[129,31,122,29],[129,35,122,33,"bestFormat"],[129,45,122,43],[129,46,122,44,"minISO"],[129,52,122,50],[129,56,122,54,"filter"],[129,62,122,60],[129,63,122,61,"iso"],[129,66,122,64],[129,67,122,65,"target"],[129,73,122,71],[129,77,122,75,"bestFormat"],[129,87,122,85],[129,88,122,86,"maxISO"],[129,94,122,92],[129,96,122,94,"leftPoints"],[129,106,122,104],[129,110,122,108,"filter"],[129,116,122,114],[129,117,122,115,"iso"],[129,120,122,118],[129,121,122,119,"priority"],[129,129,122,127],[130,10,123,8],[130,14,123,12,"filter"],[130,20,123,18],[130,21,123,19,"iso"],[130,24,123,22],[130,25,123,23,"target"],[130,31,123,29],[130,35,123,33,"format"],[130,41,123,39],[130,42,123,40,"minISO"],[130,48,123,46],[130,52,123,50,"filter"],[130,58,123,56],[130,59,123,57,"iso"],[130,62,123,60],[130,63,123,61,"target"],[130,69,123,67],[130,73,123,71,"format"],[130,79,123,77],[130,80,123,78,"maxISO"],[130,86,123,84],[130,88,123,86,"rightPoints"],[130,99,123,97],[130,103,123,101,"filter"],[130,109,123,107],[130,110,123,108,"iso"],[130,113,123,111],[130,114,123,112,"priority"],[130,122,123,120],[131,8,124,6],[132,6,125,4],[134,6,127,4],[135,6,128,4],[135,10,128,8,"filter"],[135,16,128,14],[135,17,128,15,"videoStabilizationMode"],[135,39,128,37],[135,43,128,41],[135,47,128,45],[135,49,128,47],[136,8,129,6],[136,12,129,10,"bestFormat"],[136,22,129,20],[136,23,129,21,"videoStabilizationModes"],[136,46,129,44],[136,47,129,45,"includes"],[136,55,129,53],[136,56,129,54,"filter"],[136,62,129,60],[136,63,129,61,"videoStabilizationMode"],[136,85,129,83],[136,86,129,84,"target"],[136,92,129,90],[136,93,129,91],[136,95,129,93,"leftPoints"],[136,105,129,103],[136,109,129,107,"filter"],[136,115,129,113],[136,116,129,114,"videoStabilizationMode"],[136,138,129,136],[136,139,129,137,"priority"],[136,147,129,145],[137,8,130,6],[137,12,130,10,"format"],[137,18,130,16],[137,19,130,17,"videoStabilizationModes"],[137,42,130,40],[137,43,130,41,"includes"],[137,51,130,49],[137,52,130,50,"filter"],[137,58,130,56],[137,59,130,57,"videoStabilizationMode"],[137,81,130,79],[137,82,130,80,"target"],[137,88,130,86],[137,89,130,87],[137,91,130,89,"rightPoints"],[137,102,130,100],[137,106,130,104,"filter"],[137,112,130,110],[137,113,130,111,"videoStabilizationMode"],[137,135,130,133],[137,136,130,134,"priority"],[137,144,130,142],[138,6,131,4],[140,6,133,4],[141,6,134,4],[141,10,134,8,"filter"],[141,16,134,14],[141,17,134,15,"photoHdr"],[141,25,134,23],[141,29,134,27],[141,33,134,31],[141,35,134,33],[142,8,135,6],[142,12,135,10,"bestFormat"],[142,22,135,20],[142,23,135,21,"supportsPhotoHdr"],[142,39,135,37],[142,44,135,42,"filter"],[142,50,135,48],[142,51,135,49,"photoHdr"],[142,59,135,57],[142,60,135,58,"target"],[142,66,135,64],[142,68,135,66,"leftPoints"],[142,78,135,76],[142,82,135,80,"filter"],[142,88,135,86],[142,89,135,87,"photoHdr"],[142,97,135,95],[142,98,135,96,"priority"],[142,106,135,104],[143,8,136,6],[143,12,136,10,"format"],[143,18,136,16],[143,19,136,17,"supportsPhotoHdr"],[143,35,136,33],[143,40,136,38,"filter"],[143,46,136,44],[143,47,136,45,"photoHdr"],[143,55,136,53],[143,56,136,54,"target"],[143,62,136,60],[143,64,136,62,"rightPoints"],[143,75,136,73],[143,79,136,77,"filter"],[143,85,136,83],[143,86,136,84,"photoHdr"],[143,94,136,92],[143,95,136,93,"priority"],[143,103,136,101],[144,6,137,4],[146,6,139,4],[147,6,140,4],[147,10,140,8,"filter"],[147,16,140,14],[147,17,140,15,"videoHdr"],[147,25,140,23],[147,29,140,27],[147,33,140,31],[147,35,140,33],[148,8,141,6],[148,12,141,10,"bestFormat"],[148,22,141,20],[148,23,141,21,"supportsVideoHdr"],[148,39,141,37],[148,44,141,42,"filter"],[148,50,141,48],[148,51,141,49,"videoHdr"],[148,59,141,57],[148,60,141,58,"target"],[148,66,141,64],[148,68,141,66,"leftPoints"],[148,78,141,76],[148,82,141,80,"filter"],[148,88,141,86],[148,89,141,87,"videoHdr"],[148,97,141,95],[148,98,141,96,"priority"],[148,106,141,104],[149,8,142,6],[149,12,142,10,"format"],[149,18,142,16],[149,19,142,17,"supportsVideoHdr"],[149,35,142,33],[149,40,142,38,"filter"],[149,46,142,44],[149,47,142,45,"videoHdr"],[149,55,142,53],[149,56,142,54,"target"],[149,62,142,60],[149,64,142,62,"rightPoints"],[149,75,142,73],[149,79,142,77,"filter"],[149,85,142,83],[149,86,142,84,"videoHdr"],[149,94,142,92],[149,95,142,93,"priority"],[149,103,142,101],[150,6,143,4],[152,6,145,4],[153,6,146,4],[153,10,146,8,"filter"],[153,16,146,14],[153,17,146,15,"autoFocusSystem"],[153,32,146,30],[153,36,146,34],[153,40,146,38],[153,42,146,40],[154,8,147,6],[154,12,147,10,"bestFormat"],[154,22,147,20],[154,23,147,21,"autoFocusSystem"],[154,38,147,36],[154,43,147,41,"filter"],[154,49,147,47],[154,50,147,48,"autoFocusSystem"],[154,65,147,63],[154,66,147,64,"target"],[154,72,147,70],[154,74,147,72,"leftPoints"],[154,84,147,82],[154,88,147,86,"filter"],[154,94,147,92],[154,95,147,93,"autoFocusSystem"],[154,110,147,108],[154,111,147,109,"priority"],[154,119,147,117],[155,8,148,6],[155,12,148,10,"format"],[155,18,148,16],[155,19,148,17,"autoFocusSystem"],[155,34,148,32],[155,39,148,37,"filter"],[155,45,148,43],[155,46,148,44,"autoFocusSystem"],[155,61,148,59],[155,62,148,60,"target"],[155,68,148,66],[155,70,148,68,"rightPoints"],[155,81,148,79],[155,85,148,83,"filter"],[155,91,148,89],[155,92,148,90,"autoFocusSystem"],[155,107,148,105],[155,108,148,106,"priority"],[155,116,148,114],[156,6,149,4],[157,6,150,4],[157,10,150,8,"rightPoints"],[157,21,150,19],[157,24,150,22,"leftPoints"],[157,34,150,32],[157,36,150,34,"bestFormat"],[157,46,150,44],[157,49,150,47,"format"],[157,55,150,53],[158,4,151,2],[159,4,152,2],[159,11,152,9,"bestFormat"],[159,21,152,19],[160,2,153,0],[161,0,153,1],[161,3]],"functionMap":{"names":["<global>","filtersToFilterMap","filters.reduce$argument_0","getCameraFormat"],"mappings":"AAA;ACC;wBCC;GDW;CDC;OGoB;CHsH"},"hasCjsExports":false},"type":"js/module"}]}