{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":46,"index":46}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../RecyclerViewContextProvider","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":47},"end":{"line":2,"column":72,"index":119}}],"key":"aoz1c9gK2hAu/MtaQxNdSmr4GAc=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.useLayoutState = useLayoutState;\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var _RecyclerViewContextProvider = require(_dependencyMap[2], \"../RecyclerViewContextProvider\");\n  /**\n   * Custom hook that combines state management with RecyclerView layout updates.\n   * This hook provides a way to manage state that affects the layout of the RecyclerView,\n   * ensuring that any state changes trigger a layout recalculation.\n   *\n   * @param initialState - The initial state value or a function that returns the initial state\n   * @returns A tuple containing:\n   *   - The current state value\n   *   - A setter function that updates the state and triggers a layout recalculation\n   */\n  function useLayoutState(initialState) {\n    // Initialize state with the provided initial value\n    var _useState = (0, _react.useState)(initialState),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n    // Get the RecyclerView context for layout management\n    var recyclerViewContext = (0, _RecyclerViewContextProvider.useRecyclerViewContext)();\n    /**\n     * Setter function that updates the state and triggers a layout recalculation.\n     * This ensures that any state changes that affect the layout are properly reflected\n     * in the RecyclerView's visual representation.\n     *\n     * @param newValue - Either a new state value or a function that receives the previous state\n     *                   and returns the new state\n     */\n    var setLayoutState = (0, _react.useCallback)((newValue, skipParentLayout) => {\n      // Update the state using either the new value or the result of the updater function\n      setState(prevValue => typeof newValue === \"function\" ? newValue(prevValue) : newValue);\n      if (!skipParentLayout) {\n        // Trigger a layout recalculation in the RecyclerView\n        recyclerViewContext === null || recyclerViewContext === void 0 ? void 0 : recyclerViewContext.layout();\n      }\n    }, [recyclerViewContext]);\n    return [state, setLayoutState];\n  }\n});","lineCount":53,"map":[[12,2,13,0,"exports"],[12,9,13,0],[12,10,13,0,"useLayoutState"],[12,24,13,0],[12,27,13,0,"useLayoutState"],[12,41,13,0],[13,2,37,1],[13,6,37,1,"_babelRuntimeHelpersSlicedToArray"],[13,39,37,1],[13,42,37,1,"require"],[13,49,37,1],[13,50,37,1,"_dependencyMap"],[13,64,37,1],[14,2,37,1],[14,6,37,1,"_slicedToArray"],[14,20,37,1],[14,23,37,1,"_interopDefault"],[14,38,37,1],[14,39,37,1,"_babelRuntimeHelpersSlicedToArray"],[14,72,37,1],[15,2,1,0],[15,6,1,0,"_react"],[15,12,1,0],[15,15,1,0,"require"],[15,22,1,0],[15,23,1,0,"_dependencyMap"],[15,37,1,0],[16,2,2,0],[16,6,2,0,"_RecyclerViewContextProvider"],[16,34,2,0],[16,37,2,0,"require"],[16,44,2,0],[16,45,2,0,"_dependencyMap"],[16,59,2,0],[17,2,3,0],[18,0,4,0],[19,0,5,0],[20,0,6,0],[21,0,7,0],[22,0,8,0],[23,0,9,0],[24,0,10,0],[25,0,11,0],[26,0,12,0],[27,2,13,7],[27,11,13,16,"useLayoutState"],[27,25,13,30,"useLayoutState"],[27,26,13,31,"initialState"],[27,38,13,43],[27,40,13,45],[28,4,14,4],[29,4,15,4],[29,8,15,4,"_useState"],[29,17,15,4],[29,20,15,30],[29,24,15,30,"useState"],[29,30,15,38],[29,31,15,38,"useState"],[29,39,15,38],[29,41,15,39,"initialState"],[29,53,15,51],[29,54,15,52],[30,6,15,52,"_useState2"],[30,16,15,52],[30,23,15,52,"_slicedToArray"],[30,37,15,52],[30,38,15,52,"default"],[30,45,15,52],[30,47,15,52,"_useState"],[30,56,15,52],[31,6,15,11,"state"],[31,11,15,16],[31,14,15,16,"_useState2"],[31,24,15,16],[32,6,15,18,"setState"],[32,14,15,26],[32,17,15,26,"_useState2"],[32,27,15,26],[33,4,16,4],[34,4,17,4],[34,8,17,10,"recyclerViewContext"],[34,27,17,29],[34,30,17,32],[34,34,17,32,"useRecyclerViewContext"],[34,62,17,54],[34,63,17,54,"useRecyclerViewContext"],[34,85,17,54],[34,87,17,55],[34,88,17,56],[35,4,18,4],[36,0,19,0],[37,0,20,0],[38,0,21,0],[39,0,22,0],[40,0,23,0],[41,0,24,0],[42,0,25,0],[43,4,26,4],[43,8,26,10,"setLayoutState"],[43,22,26,24],[43,25,26,27],[43,29,26,27,"useCallback"],[43,35,26,38],[43,36,26,38,"useCallback"],[43,47,26,38],[43,49,26,39],[43,50,26,40,"newValue"],[43,58,26,48],[43,60,26,50,"skipParentLayout"],[43,76,26,66],[43,81,26,71],[44,6,27,8],[45,6,28,8,"setState"],[45,14,28,16],[45,15,28,18,"prevValue"],[45,24,28,27],[45,28,28,32],[45,35,28,39,"newValue"],[45,43,28,47],[45,48,28,52],[45,58,28,62],[45,61,29,14,"newValue"],[45,69,29,22],[45,70,29,23,"prevValue"],[45,79,29,32],[45,80,29,33],[45,83,30,14,"newValue"],[45,91,30,22],[45,92,30,23],[46,6,31,8],[46,10,31,12],[46,11,31,13,"skipParentLayout"],[46,27,31,29],[46,29,31,31],[47,8,32,12],[48,8,33,12,"recyclerViewContext"],[48,27,33,31],[48,32,33,36],[48,36,33,40],[48,40,33,44,"recyclerViewContext"],[48,59,33,63],[48,64,33,68],[48,69,33,73],[48,70,33,74],[48,73,33,77],[48,78,33,82],[48,79,33,83],[48,82,33,86,"recyclerViewContext"],[48,101,33,105],[48,102,33,106,"layout"],[48,108,33,112],[48,109,33,113],[48,110,33,114],[49,6,34,8],[50,4,35,4],[50,5,35,5],[50,7,35,7],[50,8,35,8,"recyclerViewContext"],[50,27,35,27],[50,28,35,28],[50,29,35,29],[51,4,36,4],[51,11,36,11],[51,12,36,12,"state"],[51,17,36,17],[51,19,36,19,"setLayoutState"],[51,33,36,33],[51,34,36,34],[52,2,37,0],[53,0,37,1],[53,3]],"functionMap":{"names":["<global>","useLayoutState","setLayoutState","setState$argument_0"],"mappings":"AAA;OCY;uCCa;iBCE;sBDE;KDK;CDE"},"hasCjsExports":false},"type":"js/module"}]}