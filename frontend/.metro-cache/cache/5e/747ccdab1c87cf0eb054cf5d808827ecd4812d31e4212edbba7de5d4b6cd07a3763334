{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":57,"index":57}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"socket.io-client","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":58},"end":{"line":2,"column":46,"index":104}}],"key":"LVgCyxgUdze/lYG0kA6DdCAztfM=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":105},"end":{"line":3,"column":39,"index":144}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}},{"name":"../../../contexts/AuthContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":145},"end":{"line":4,"column":63,"index":208}}],"key":"OOev1Rel4+jbsXmPWqYGPD0HTso=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  Object.defineProperty(exports, \"useSocket\", {\n    enumerable: true,\n    get: function () {\n      return useSocket;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var _socketIoClient = require(_dependencyMap[1], \"socket.io-client\");\n  var io = _interopDefault(_socketIoClient);\n  var _expoConstants = require(_dependencyMap[2], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  var _contextsAuthContext = require(_dependencyMap[3], \"../../../contexts/AuthContext\");\n  class SocketService {\n    socket = null;\n    connected = false;\n    connect(token) {\n      const backendUrl = Constants.default.expoConfig?.extra?.EXPO_PUBLIC_BACKEND_URL || 'http://localhost:8001';\n      if (!this.socket) {\n        this.socket = (0, io.default)(backendUrl, {\n          auth: {\n            token\n          },\n          transports: ['websocket']\n        });\n        this.socket.on('connect', () => {\n          console.log('Socket connected');\n          this.connected = true;\n        });\n        this.socket.on('disconnect', () => {\n          console.log('Socket disconnected');\n          this.connected = false;\n        });\n        this.socket.on('connect_error', error => {\n          console.error('Socket connection error:', error);\n          this.connected = false;\n        });\n      }\n    }\n    disconnect() {\n      if (this.socket) {\n        this.socket.disconnect();\n        this.socket = null;\n        this.connected = false;\n      }\n    }\n    getSocket() {\n      return this.socket;\n    }\n    isConnected() {\n      return this.connected;\n    }\n    joinConversation(conversationId) {\n      if (this.socket && this.connected) {\n        this.socket.emit('join_conversation', {\n          conversationId\n        });\n      }\n    }\n    leaveConversation(conversationId) {\n      if (this.socket && this.connected) {\n        this.socket.emit('leave_conversation', {\n          conversationId\n        });\n      }\n    }\n    sendTypingStart(conversationId, userId) {\n      if (this.socket && this.connected) {\n        this.socket.emit('typing_start', {\n          conversationId,\n          userId\n        });\n      }\n    }\n    sendTypingStop(conversationId, userId) {\n      if (this.socket && this.connected) {\n        this.socket.emit('typing_stop', {\n          conversationId,\n          userId\n        });\n      }\n    }\n    markAsRead(conversationId, userId, messageIds) {\n      if (this.socket && this.connected) {\n        this.socket.emit('mark_read', {\n          conversationId,\n          userId,\n          messageIds\n        });\n      }\n    }\n  }\n  const socketService = new SocketService();\n  const useSocket = () => {\n    const {\n      user,\n      token\n    } = (0, _contextsAuthContext.useAuthContext)();\n    const [socket, setSocket] = (0, _react.useState)(null);\n    const [connected, setConnected] = (0, _react.useState)(false);\n    (0, _react.useEffect)(() => {\n      if (user && token) {\n        socketService.connect(token);\n        setSocket(socketService.getSocket());\n        const checkConnection = setInterval(() => {\n          setConnected(socketService.isConnected());\n        }, 1000);\n        return () => {\n          clearInterval(checkConnection);\n        };\n      } else {\n        socketService.disconnect();\n        setSocket(null);\n        setConnected(false);\n      }\n    }, [user, token]);\n    const joinConversation = (0, _react.useCallback)(conversationId => {\n      socketService.joinConversation(conversationId);\n    }, []);\n    const leaveConversation = (0, _react.useCallback)(conversationId => {\n      socketService.leaveConversation(conversationId);\n    }, []);\n    const sendTypingStart = (0, _react.useCallback)((conversationId, userId) => {\n      socketService.sendTypingStart(conversationId, userId);\n    }, []);\n    const sendTypingStop = (0, _react.useCallback)((conversationId, userId) => {\n      socketService.sendTypingStop(conversationId, userId);\n    }, []);\n    const markAsRead = (0, _react.useCallback)((conversationId, userId, messageIds) => {\n      socketService.markAsRead(conversationId, userId, messageIds);\n    }, []);\n    return {\n      socket,\n      connected,\n      joinConversation,\n      leaveConversation,\n      sendTypingStart,\n      sendTypingStop,\n      markAsRead\n    };\n  };\n  var _default = socketService;\n});","lineCount":159,"map":[[12,2,142,0,"Object"],[12,8,142,0],[12,9,142,0,"defineProperty"],[12,23,142,0],[12,24,142,0,"exports"],[12,31,142,0],[13,4,142,0,"enumerable"],[13,14,142,0],[14,4,142,0,"get"],[14,7,142,0],[14,18,142,0,"get"],[14,19,142,0],[15,6,142,0],[15,13,142,0,"_default"],[15,21,142,0],[16,4,142,0],[17,2,142,0],[18,2,87,0,"Object"],[18,8,87,0],[18,9,87,0,"defineProperty"],[18,23,87,0],[18,24,87,0,"exports"],[18,31,87,0],[19,4,87,0,"enumerable"],[19,14,87,0],[20,4,87,0,"get"],[20,7,87,0],[20,18,87,0,"get"],[20,19,87,0],[21,6,87,0],[21,13,87,0,"useSocket"],[21,22,87,0],[22,4,87,0],[23,2,87,0],[24,2,1,0],[24,6,1,0,"_react"],[24,12,1,0],[24,15,1,0,"require"],[24,22,1,0],[24,23,1,0,"_dependencyMap"],[24,37,1,0],[25,2,2,0],[25,6,2,0,"_socketIoClient"],[25,21,2,0],[25,24,2,0,"require"],[25,31,2,0],[25,32,2,0,"_dependencyMap"],[25,46,2,0],[26,2,2,0],[26,6,2,0,"io"],[26,8,2,0],[26,11,2,0,"_interopDefault"],[26,26,2,0],[26,27,2,0,"_socketIoClient"],[26,42,2,0],[27,2,3,0],[27,6,3,0,"_expoConstants"],[27,20,3,0],[27,23,3,0,"require"],[27,30,3,0],[27,31,3,0,"_dependencyMap"],[27,45,3,0],[28,2,3,0],[28,6,3,0,"Constants"],[28,15,3,0],[28,18,3,0,"_interopDefault"],[28,33,3,0],[28,34,3,0,"_expoConstants"],[28,48,3,0],[29,2,4,0],[29,6,4,0,"_contextsAuthContext"],[29,26,4,0],[29,29,4,0,"require"],[29,36,4,0],[29,37,4,0,"_dependencyMap"],[29,51,4,0],[30,2,6,0],[30,8,6,6,"SocketService"],[30,21,6,19],[30,22,6,20],[31,4,7,10,"socket"],[31,10,7,16],[31,13,7,34],[31,17,7,38],[32,4,8,10,"connected"],[32,13,8,19],[32,16,8,31],[32,21,8,36],[33,4,10,2,"connect"],[33,11,10,9,"connect"],[33,12,10,10,"token"],[33,17,10,23],[33,19,10,25],[34,6,11,4],[34,12,11,10,"backendUrl"],[34,22,11,20],[34,25,11,23,"Constants"],[34,34,11,32],[34,35,11,32,"default"],[34,42,11,32],[34,43,11,33,"expoConfig"],[34,53,11,43],[34,55,11,45,"extra"],[34,60,11,50],[34,62,11,52,"EXPO_PUBLIC_BACKEND_URL"],[34,85,11,75],[34,89,11,79],[34,112,11,102],[35,6,13,4],[35,10,13,8],[35,11,13,9],[35,15,13,13],[35,16,13,14,"socket"],[35,22,13,20],[35,24,13,22],[36,8,14,6],[36,12,14,10],[36,13,14,11,"socket"],[36,19,14,17],[36,22,14,20],[36,26,14,20,"io"],[36,28,14,22],[36,29,14,22,"default"],[36,36,14,22],[36,38,14,23,"backendUrl"],[36,48,14,33],[36,50,14,35],[37,10,15,8,"auth"],[37,14,15,12],[37,16,15,14],[38,12,16,10,"token"],[39,10,17,8],[39,11,17,9],[40,10,18,8,"transports"],[40,20,18,18],[40,22,18,20],[40,23,18,21],[40,34,18,32],[41,8,19,6],[41,9,19,7],[41,10,19,8],[42,8,21,6],[42,12,21,10],[42,13,21,11,"socket"],[42,19,21,17],[42,20,21,18,"on"],[42,22,21,20],[42,23,21,21],[42,32,21,30],[42,34,21,32],[42,40,21,38],[43,10,22,8,"console"],[43,17,22,15],[43,18,22,16,"log"],[43,21,22,19],[43,22,22,20],[43,40,22,38],[43,41,22,39],[44,10,23,8],[44,14,23,12],[44,15,23,13,"connected"],[44,24,23,22],[44,27,23,25],[44,31,23,29],[45,8,24,6],[45,9,24,7],[45,10,24,8],[46,8,26,6],[46,12,26,10],[46,13,26,11,"socket"],[46,19,26,17],[46,20,26,18,"on"],[46,22,26,20],[46,23,26,21],[46,35,26,33],[46,37,26,35],[46,43,26,41],[47,10,27,8,"console"],[47,17,27,15],[47,18,27,16,"log"],[47,21,27,19],[47,22,27,20],[47,43,27,41],[47,44,27,42],[48,10,28,8],[48,14,28,12],[48,15,28,13,"connected"],[48,24,28,22],[48,27,28,25],[48,32,28,30],[49,8,29,6],[49,9,29,7],[49,10,29,8],[50,8,31,6],[50,12,31,10],[50,13,31,11,"socket"],[50,19,31,17],[50,20,31,18,"on"],[50,22,31,20],[50,23,31,21],[50,38,31,36],[50,40,31,39,"error"],[50,45,31,44],[50,49,31,49],[51,10,32,8,"console"],[51,17,32,15],[51,18,32,16,"error"],[51,23,32,21],[51,24,32,22],[51,50,32,48],[51,52,32,50,"error"],[51,57,32,55],[51,58,32,56],[52,10,33,8],[52,14,33,12],[52,15,33,13,"connected"],[52,24,33,22],[52,27,33,25],[52,32,33,30],[53,8,34,6],[53,9,34,7],[53,10,34,8],[54,6,35,4],[55,4,36,2],[56,4,38,2,"disconnect"],[56,14,38,12,"disconnect"],[56,15,38,12],[56,17,38,15],[57,6,39,4],[57,10,39,8],[57,14,39,12],[57,15,39,13,"socket"],[57,21,39,19],[57,23,39,21],[58,8,40,6],[58,12,40,10],[58,13,40,11,"socket"],[58,19,40,17],[58,20,40,18,"disconnect"],[58,30,40,28],[58,31,40,29],[58,32,40,30],[59,8,41,6],[59,12,41,10],[59,13,41,11,"socket"],[59,19,41,17],[59,22,41,20],[59,26,41,24],[60,8,42,6],[60,12,42,10],[60,13,42,11,"connected"],[60,22,42,20],[60,25,42,23],[60,30,42,28],[61,6,43,4],[62,4,44,2],[63,4,46,2,"getSocket"],[63,13,46,11,"getSocket"],[63,14,46,11],[63,16,46,14],[64,6,47,4],[64,13,47,11],[64,17,47,15],[64,18,47,16,"socket"],[64,24,47,22],[65,4,48,2],[66,4,50,2,"isConnected"],[66,15,50,13,"isConnected"],[66,16,50,13],[66,18,50,16],[67,6,51,4],[67,13,51,11],[67,17,51,15],[67,18,51,16,"connected"],[67,27,51,25],[68,4,52,2],[69,4,54,2,"joinConversation"],[69,20,54,18,"joinConversation"],[69,21,54,19,"conversationId"],[69,35,54,41],[69,37,54,43],[70,6,55,4],[70,10,55,8],[70,14,55,12],[70,15,55,13,"socket"],[70,21,55,19],[70,25,55,23],[70,29,55,27],[70,30,55,28,"connected"],[70,39,55,37],[70,41,55,39],[71,8,56,6],[71,12,56,10],[71,13,56,11,"socket"],[71,19,56,17],[71,20,56,18,"emit"],[71,24,56,22],[71,25,56,23],[71,44,56,42],[71,46,56,44],[72,10,56,46,"conversationId"],[73,8,56,61],[73,9,56,62],[73,10,56,63],[74,6,57,4],[75,4,58,2],[76,4,60,2,"leaveConversation"],[76,21,60,19,"leaveConversation"],[76,22,60,20,"conversationId"],[76,36,60,42],[76,38,60,44],[77,6,61,4],[77,10,61,8],[77,14,61,12],[77,15,61,13,"socket"],[77,21,61,19],[77,25,61,23],[77,29,61,27],[77,30,61,28,"connected"],[77,39,61,37],[77,41,61,39],[78,8,62,6],[78,12,62,10],[78,13,62,11,"socket"],[78,19,62,17],[78,20,62,18,"emit"],[78,24,62,22],[78,25,62,23],[78,45,62,43],[78,47,62,45],[79,10,62,47,"conversationId"],[80,8,62,62],[80,9,62,63],[80,10,62,64],[81,6,63,4],[82,4,64,2],[83,4,66,2,"sendTypingStart"],[83,19,66,17,"sendTypingStart"],[83,20,66,18,"conversationId"],[83,34,66,40],[83,36,66,42,"userId"],[83,42,66,56],[83,44,66,58],[84,6,67,4],[84,10,67,8],[84,14,67,12],[84,15,67,13,"socket"],[84,21,67,19],[84,25,67,23],[84,29,67,27],[84,30,67,28,"connected"],[84,39,67,37],[84,41,67,39],[85,8,68,6],[85,12,68,10],[85,13,68,11,"socket"],[85,19,68,17],[85,20,68,18,"emit"],[85,24,68,22],[85,25,68,23],[85,39,68,37],[85,41,68,39],[86,10,68,41,"conversationId"],[86,24,68,55],[87,10,68,57,"userId"],[88,8,68,64],[88,9,68,65],[88,10,68,66],[89,6,69,4],[90,4,70,2],[91,4,72,2,"sendTypingStop"],[91,18,72,16,"sendTypingStop"],[91,19,72,17,"conversationId"],[91,33,72,39],[91,35,72,41,"userId"],[91,41,72,55],[91,43,72,57],[92,6,73,4],[92,10,73,8],[92,14,73,12],[92,15,73,13,"socket"],[92,21,73,19],[92,25,73,23],[92,29,73,27],[92,30,73,28,"connected"],[92,39,73,37],[92,41,73,39],[93,8,74,6],[93,12,74,10],[93,13,74,11,"socket"],[93,19,74,17],[93,20,74,18,"emit"],[93,24,74,22],[93,25,74,23],[93,38,74,36],[93,40,74,38],[94,10,74,40,"conversationId"],[94,24,74,54],[95,10,74,56,"userId"],[96,8,74,63],[96,9,74,64],[96,10,74,65],[97,6,75,4],[98,4,76,2],[99,4,78,2,"markAsRead"],[99,14,78,12,"markAsRead"],[99,15,78,13,"conversationId"],[99,29,78,35],[99,31,78,37,"userId"],[99,37,78,51],[99,39,78,53,"messageIds"],[99,49,78,73],[99,51,78,75],[100,6,79,4],[100,10,79,8],[100,14,79,12],[100,15,79,13,"socket"],[100,21,79,19],[100,25,79,23],[100,29,79,27],[100,30,79,28,"connected"],[100,39,79,37],[100,41,79,39],[101,8,80,6],[101,12,80,10],[101,13,80,11,"socket"],[101,19,80,17],[101,20,80,18,"emit"],[101,24,80,22],[101,25,80,23],[101,36,80,34],[101,38,80,36],[102,10,80,38,"conversationId"],[102,24,80,52],[103,10,80,54,"userId"],[103,16,80,60],[104,10,80,62,"messageIds"],[105,8,80,73],[105,9,80,74],[105,10,80,75],[106,6,81,4],[107,4,82,2],[108,2,83,0],[109,2,85,0],[109,8,85,6,"socketService"],[109,21,85,19],[109,24,85,22],[109,28,85,26,"SocketService"],[109,41,85,39],[109,42,85,40],[109,43,85,41],[110,2,87,7],[110,8,87,13,"useSocket"],[110,17,87,22],[110,20,87,25,"useSocket"],[110,21,87,25],[110,26,87,31],[111,4,88,2],[111,10,88,8],[112,6,88,10,"user"],[112,10,88,14],[113,6,88,16,"token"],[114,4,88,22],[114,5,88,23],[114,8,88,26],[114,12,88,26,"useAuthContext"],[114,32,88,40],[114,33,88,40,"useAuthContext"],[114,47,88,40],[114,49,88,41],[114,50,88,42],[115,4,89,2],[115,10,89,8],[115,11,89,9,"socket"],[115,17,89,15],[115,19,89,17,"setSocket"],[115,28,89,26],[115,29,89,27],[115,32,89,30],[115,36,89,30,"useState"],[115,42,89,38],[115,43,89,38,"useState"],[115,51,89,38],[115,53,89,54],[115,57,89,58],[115,58,89,59],[116,4,90,2],[116,10,90,8],[116,11,90,9,"connected"],[116,20,90,18],[116,22,90,20,"setConnected"],[116,34,90,32],[116,35,90,33],[116,38,90,36],[116,42,90,36,"useState"],[116,48,90,44],[116,49,90,44,"useState"],[116,57,90,44],[116,59,90,45],[116,64,90,50],[116,65,90,51],[117,4,92,2],[117,8,92,2,"useEffect"],[117,14,92,11],[117,15,92,11,"useEffect"],[117,24,92,11],[117,26,92,12],[117,32,92,18],[118,6,93,4],[118,10,93,8,"user"],[118,14,93,12],[118,18,93,16,"token"],[118,23,93,21],[118,25,93,23],[119,8,94,6,"socketService"],[119,21,94,19],[119,22,94,20,"connect"],[119,29,94,27],[119,30,94,28,"token"],[119,35,94,33],[119,36,94,34],[120,8,95,6,"setSocket"],[120,17,95,15],[120,18,95,16,"socketService"],[120,31,95,29],[120,32,95,30,"getSocket"],[120,41,95,39],[120,42,95,40],[120,43,95,41],[120,44,95,42],[121,8,97,6],[121,14,97,12,"checkConnection"],[121,29,97,27],[121,32,97,30,"setInterval"],[121,43,97,41],[121,44,97,42],[121,50,97,48],[122,10,98,8,"setConnected"],[122,22,98,20],[122,23,98,21,"socketService"],[122,36,98,34],[122,37,98,35,"isConnected"],[122,48,98,46],[122,49,98,47],[122,50,98,48],[122,51,98,49],[123,8,99,6],[123,9,99,7],[123,11,99,9],[123,15,99,13],[123,16,99,14],[124,8,101,6],[124,15,101,13],[124,21,101,19],[125,10,102,8,"clearInterval"],[125,23,102,21],[125,24,102,22,"checkConnection"],[125,39,102,37],[125,40,102,38],[126,8,103,6],[126,9,103,7],[127,6,104,4],[127,7,104,5],[127,13,104,11],[128,8,105,6,"socketService"],[128,21,105,19],[128,22,105,20,"disconnect"],[128,32,105,30],[128,33,105,31],[128,34,105,32],[129,8,106,6,"setSocket"],[129,17,106,15],[129,18,106,16],[129,22,106,20],[129,23,106,21],[130,8,107,6,"setConnected"],[130,20,107,18],[130,21,107,19],[130,26,107,24],[130,27,107,25],[131,6,108,4],[132,4,109,2],[132,5,109,3],[132,7,109,5],[132,8,109,6,"user"],[132,12,109,10],[132,14,109,12,"token"],[132,19,109,17],[132,20,109,18],[132,21,109,19],[133,4,111,2],[133,10,111,8,"joinConversation"],[133,26,111,24],[133,29,111,27],[133,33,111,27,"useCallback"],[133,39,111,38],[133,40,111,38,"useCallback"],[133,51,111,38],[133,53,111,40,"conversationId"],[133,67,111,62],[133,71,111,67],[134,6,112,4,"socketService"],[134,19,112,17],[134,20,112,18,"joinConversation"],[134,36,112,34],[134,37,112,35,"conversationId"],[134,51,112,49],[134,52,112,50],[135,4,113,2],[135,5,113,3],[135,7,113,5],[135,9,113,7],[135,10,113,8],[136,4,115,2],[136,10,115,8,"leaveConversation"],[136,27,115,25],[136,30,115,28],[136,34,115,28,"useCallback"],[136,40,115,39],[136,41,115,39,"useCallback"],[136,52,115,39],[136,54,115,41,"conversationId"],[136,68,115,63],[136,72,115,68],[137,6,116,4,"socketService"],[137,19,116,17],[137,20,116,18,"leaveConversation"],[137,37,116,35],[137,38,116,36,"conversationId"],[137,52,116,50],[137,53,116,51],[138,4,117,2],[138,5,117,3],[138,7,117,5],[138,9,117,7],[138,10,117,8],[139,4,119,2],[139,10,119,8,"sendTypingStart"],[139,25,119,23],[139,28,119,26],[139,32,119,26,"useCallback"],[139,38,119,37],[139,39,119,37,"useCallback"],[139,50,119,37],[139,52,119,38],[139,53,119,39,"conversationId"],[139,67,119,61],[139,69,119,63,"userId"],[139,75,119,77],[139,80,119,82],[140,6,120,4,"socketService"],[140,19,120,17],[140,20,120,18,"sendTypingStart"],[140,35,120,33],[140,36,120,34,"conversationId"],[140,50,120,48],[140,52,120,50,"userId"],[140,58,120,56],[140,59,120,57],[141,4,121,2],[141,5,121,3],[141,7,121,5],[141,9,121,7],[141,10,121,8],[142,4,123,2],[142,10,123,8,"sendTypingStop"],[142,24,123,22],[142,27,123,25],[142,31,123,25,"useCallback"],[142,37,123,36],[142,38,123,36,"useCallback"],[142,49,123,36],[142,51,123,37],[142,52,123,38,"conversationId"],[142,66,123,60],[142,68,123,62,"userId"],[142,74,123,76],[142,79,123,81],[143,6,124,4,"socketService"],[143,19,124,17],[143,20,124,18,"sendTypingStop"],[143,34,124,32],[143,35,124,33,"conversationId"],[143,49,124,47],[143,51,124,49,"userId"],[143,57,124,55],[143,58,124,56],[144,4,125,2],[144,5,125,3],[144,7,125,5],[144,9,125,7],[144,10,125,8],[145,4,127,2],[145,10,127,8,"markAsRead"],[145,20,127,18],[145,23,127,21],[145,27,127,21,"useCallback"],[145,33,127,32],[145,34,127,32,"useCallback"],[145,45,127,32],[145,47,127,33],[145,48,127,34,"conversationId"],[145,62,127,56],[145,64,127,58,"userId"],[145,70,127,72],[145,72,127,74,"messageIds"],[145,82,127,94],[145,87,127,99],[146,6,128,4,"socketService"],[146,19,128,17],[146,20,128,18,"markAsRead"],[146,30,128,28],[146,31,128,29,"conversationId"],[146,45,128,43],[146,47,128,45,"userId"],[146,53,128,51],[146,55,128,53,"messageIds"],[146,65,128,63],[146,66,128,64],[147,4,129,2],[147,5,129,3],[147,7,129,5],[147,9,129,7],[147,10,129,8],[148,4,131,2],[148,11,131,9],[149,6,132,4,"socket"],[149,12,132,10],[150,6,133,4,"connected"],[150,15,133,13],[151,6,134,4,"joinConversation"],[151,22,134,20],[152,6,135,4,"leaveConversation"],[152,23,135,21],[153,6,136,4,"sendTypingStart"],[153,21,136,19],[154,6,137,4,"sendTypingStop"],[154,20,137,18],[155,6,138,4,"markAsRead"],[156,4,139,2],[156,5,139,3],[157,2,140,0],[157,3,140,1],[158,2,142,0],[158,6,142,0,"_default"],[158,14,142,0],[158,17,142,15,"socketService"],[158,30,142,28],[159,0,142,29],[159,3]],"functionMap":{"names":["<global>","SocketService","SocketService#connect","socket.on$argument_1","SocketService#disconnect","SocketService#getSocket","SocketService#isConnected","SocketService#joinConversation","SocketService#leaveConversation","SocketService#sendTypingStart","SocketService#sendTypingStop","SocketService#markAsRead","useSocket","useEffect$argument_0","setInterval$argument_0","<anonymous>","joinConversation","leaveConversation","sendTypingStart","sendTypingStop","markAsRead"],"mappings":"AAA;ACK;ECI;gCCW;ODG;mCCE;ODG;sCCE;ODG;GDE;EGE;GHM;EIE;GJE;EKE;GLE;EME;GNI;EOE;GPI;EQE;GRI;ESE;GTI;EUE;GVI;CDC;yBYI;YCK;0CCK;ODE;aEE;OFE;GDM;uCIE;GJE;wCKE;GLE;sCME;GNE;qCOE;GPE;iCQE;GRE;CZW"},"hasCjsExports":false},"type":"js/module"}]}