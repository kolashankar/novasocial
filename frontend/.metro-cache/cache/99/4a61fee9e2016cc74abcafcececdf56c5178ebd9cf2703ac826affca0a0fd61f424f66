{"dependencies":[{"name":"../../../services/api","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":44,"index":44}}],"key":"3VKnEXkMY1ZNEkZ7qYjanQrdF3Y=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"chatApi\", {\n    enumerable: true,\n    get: function () {\n      return chatApi;\n    }\n  });\n  var _servicesApi = require(_dependencyMap[0], \"../../../services/api\");\n  class ChatApiService {\n    async getConversations(skip = 0, limit = 50) {\n      const response = await _servicesApi.api.get(`/conversations?skip=${skip}&limit=${limit}`);\n      return response.data;\n    }\n    async createConversation(data) {\n      const response = await _servicesApi.api.post('/conversations', data);\n      return response.data;\n    }\n    async getMessages(conversationId, skip = 0, limit = 50) {\n      const response = await _servicesApi.api.get(`/conversations/${conversationId}/messages?skip=${skip}&limit=${limit}`);\n      return response.data;\n    }\n    async sendMessage(conversationId, data) {\n      const messageData = Object.assign({}, data, {\n        conversationId\n      });\n      const response = await _servicesApi.api.post(`/conversations/${conversationId}/messages`, messageData);\n      return response.data;\n    }\n\n    // Helper method to find or create a direct conversation with a user\n    async getOrCreateDirectConversation(otherUserId) {\n      // First, try to find existing conversation\n      const conversations = await this.getConversations();\n      const existing = conversations.find(conv => !conv.isGroup && conv.participants.length === 2 && conv.participants.some(p => p.id === otherUserId));\n      if (existing) {\n        return existing;\n      }\n\n      // Create new conversation\n      return await this.createConversation({\n        participantIds: [otherUserId],\n        isGroup: false\n      });\n    }\n\n    // PHASE 14: Enhanced Messaging & Real-time Features\n    async getFilteredConversations(params) {\n      const queryParams = new URLSearchParams({\n        filter_type: params.filterType,\n        skip: String(params.skip || 0),\n        limit: String(params.limit || 50)\n      });\n      if (params.searchQuery) {\n        queryParams.append('search_query', params.searchQuery);\n      }\n      const response = await _servicesApi.api.get(`/conversations/filters?${queryParams.toString()}`);\n      return response.data;\n    }\n    async updateConversationSettings(conversationId, settings) {\n      await _servicesApi.api.put(`/conversations/${conversationId}/settings`, settings);\n    }\n    async sendTypingIndicator(conversationId, isTyping) {\n      await _servicesApi.api.post(`/conversations/${conversationId}/typing`, {\n        conversationId,\n        userId: '',\n        // Will be set by backend from auth\n        isTyping\n      });\n    }\n    async markMessageRead(messageId) {\n      await _servicesApi.api.put(`/messages/${messageId}/read`);\n    }\n    async markAllMessagesRead(conversationId) {\n      await _servicesApi.api.put(`/conversations/${conversationId}/read-all`);\n    }\n    async getUserActivity(userId) {\n      const response = await _servicesApi.api.get(`/users/${userId}/activity`);\n      return response.data;\n    }\n    async updateUserActivity(status) {\n      await _servicesApi.api.put('/user/activity', {\n        status\n      });\n    }\n    async queueOfflineMessage(messageData) {\n      const response = await _servicesApi.api.post('/messages/queue', messageData);\n      return response.data;\n    }\n    async syncOfflineMessages() {\n      const response = await _servicesApi.api.post('/messages/sync');\n      return response.data;\n    }\n  }\n  const chatApi = new ChatApiService();\n});","lineCount":100,"map":[[7,2,175,0,"Object"],[7,8,175,0],[7,9,175,0,"defineProperty"],[7,23,175,0],[7,24,175,0,"exports"],[7,31,175,0],[8,4,175,0,"enumerable"],[8,14,175,0],[9,4,175,0,"get"],[9,7,175,0],[9,18,175,0,"get"],[9,19,175,0],[10,6,175,0],[10,13,175,0,"chatApi"],[10,20,175,0],[11,4,175,0],[12,2,175,0],[13,2,1,0],[13,6,1,0,"_servicesApi"],[13,18,1,0],[13,21,1,0,"require"],[13,28,1,0],[13,29,1,0,"_dependencyMap"],[13,43,1,0],[14,2,55,0],[14,8,55,6,"ChatApiService"],[14,22,55,20],[14,23,55,21],[15,4,56,2],[15,10,56,8,"getConversations"],[15,26,56,24,"getConversations"],[15,27,56,25,"skip"],[15,31,56,29],[15,34,56,32],[15,35,56,33],[15,37,56,35,"limit"],[15,42,56,40],[15,45,56,43],[15,47,56,45],[15,49,56,72],[16,6,57,4],[16,12,57,10,"response"],[16,20,57,18],[16,23,57,21],[16,29,57,27,"api"],[16,41,57,30],[16,42,57,30,"api"],[16,45,57,30],[16,46,57,31,"get"],[16,49,57,34],[16,50,57,35],[16,73,57,58,"skip"],[16,77,57,62],[16,87,57,72,"limit"],[16,92,57,77],[16,94,57,79],[16,95,57,80],[17,6,58,4],[17,13,58,11,"response"],[17,21,58,19],[17,22,58,20,"data"],[17,26,58,24],[18,4,59,2],[19,4,61,2],[19,10,61,8,"createConversation"],[19,28,61,26,"createConversation"],[19,29,61,27,"data"],[19,33,61,55],[19,35,61,80],[20,6,62,4],[20,12,62,10,"response"],[20,20,62,18],[20,23,62,21],[20,29,62,27,"api"],[20,41,62,30],[20,42,62,30,"api"],[20,45,62,30],[20,46,62,31,"post"],[20,50,62,35],[20,51,62,36],[20,67,62,52],[20,69,62,54,"data"],[20,73,62,58],[20,74,62,59],[21,6,63,4],[21,13,63,11,"response"],[21,21,63,19],[21,22,63,20,"data"],[21,26,63,24],[22,4,64,2],[23,4,66,2],[23,10,66,8,"getMessages"],[23,21,66,19,"getMessages"],[23,22,66,20,"conversationId"],[23,36,66,42],[23,38,66,44,"skip"],[23,42,66,48],[23,45,66,51],[23,46,66,52],[23,48,66,54,"limit"],[23,53,66,59],[23,56,66,62],[23,58,66,64],[23,60,66,86],[24,6,67,4],[24,12,67,10,"response"],[24,20,67,18],[24,23,67,21],[24,29,67,27,"api"],[24,41,67,30],[24,42,67,30,"api"],[24,45,67,30],[24,46,67,31,"get"],[24,49,67,34],[24,50,67,35],[24,68,67,53,"conversationId"],[24,82,67,67],[24,100,67,85,"skip"],[24,104,67,89],[24,114,67,99,"limit"],[24,119,67,104],[24,121,67,106],[24,122,67,107],[25,6,68,4],[25,13,68,11,"response"],[25,21,68,19],[25,22,68,20,"data"],[25,26,68,24],[26,4,69,2],[27,4,71,2],[27,10,71,8,"sendMessage"],[27,21,71,19,"sendMessage"],[27,22,71,20,"conversationId"],[27,36,71,42],[27,38,71,44,"data"],[27,42,71,65],[27,44,71,85],[28,6,72,4],[28,12,72,10,"messageData"],[28,23,72,21],[28,26,72,21,"Object"],[28,32,72,21],[28,33,72,21,"assign"],[28,39,72,21],[28,44,73,9,"data"],[28,48,73,13],[29,8,74,6,"conversationId"],[30,6,74,20],[30,8,75,5],[31,6,76,4],[31,12,76,10,"response"],[31,20,76,18],[31,23,76,21],[31,29,76,27,"api"],[31,41,76,30],[31,42,76,30,"api"],[31,45,76,30],[31,46,76,31,"post"],[31,50,76,35],[31,51,76,36],[31,69,76,54,"conversationId"],[31,83,76,68],[31,94,76,79],[31,96,76,81,"messageData"],[31,107,76,92],[31,108,76,93],[32,6,77,4],[32,13,77,11,"response"],[32,21,77,19],[32,22,77,20,"data"],[32,26,77,24],[33,4,78,2],[35,4,80,2],[36,4,81,2],[36,10,81,8,"getOrCreateDirectConversation"],[36,39,81,37,"getOrCreateDirectConversation"],[36,40,81,38,"otherUserId"],[36,51,81,57],[36,53,81,82],[37,6,82,4],[38,6,83,4],[38,12,83,10,"conversations"],[38,25,83,23],[38,28,83,26],[38,34,83,32],[38,38,83,36],[38,39,83,37,"getConversations"],[38,55,83,53],[38,56,83,54],[38,57,83,55],[39,6,84,4],[39,12,84,10,"existing"],[39,20,84,18],[39,23,84,21,"conversations"],[39,36,84,34],[39,37,84,35,"find"],[39,41,84,39],[39,42,84,40,"conv"],[39,46,84,44],[39,50,85,6],[39,51,85,7,"conv"],[39,55,85,11],[39,56,85,12,"isGroup"],[39,63,85,19],[39,67,86,6,"conv"],[39,71,86,10],[39,72,86,11,"participants"],[39,84,86,23],[39,85,86,24,"length"],[39,91,86,30],[39,96,86,35],[39,97,86,36],[39,101,87,6,"conv"],[39,105,87,10],[39,106,87,11,"participants"],[39,118,87,23],[39,119,87,24,"some"],[39,123,87,28],[39,124,87,29,"p"],[39,125,87,30],[39,129,87,34,"p"],[39,130,87,35],[39,131,87,36,"id"],[39,133,87,38],[39,138,87,43,"otherUserId"],[39,149,87,54],[39,150,88,4],[39,151,88,5],[40,6,90,4],[40,10,90,8,"existing"],[40,18,90,16],[40,20,90,18],[41,8,91,6],[41,15,91,13,"existing"],[41,23,91,21],[42,6,92,4],[44,6,94,4],[45,6,95,4],[45,13,95,11],[45,19,95,17],[45,23,95,21],[45,24,95,22,"createConversation"],[45,42,95,40],[45,43,95,41],[46,8,96,6,"participantIds"],[46,22,96,20],[46,24,96,22],[46,25,96,23,"otherUserId"],[46,36,96,34],[46,37,96,35],[47,8,97,6,"isGroup"],[47,15,97,13],[47,17,97,15],[48,6,98,4],[48,7,98,5],[48,8,98,6],[49,4,99,2],[51,4,101,2],[52,4,102,2],[52,10,102,8,"getFilteredConversations"],[52,34,102,32,"getFilteredConversations"],[52,35,102,33,"params"],[52,41,107,3],[52,43,107,30],[53,6,108,4],[53,12,108,10,"queryParams"],[53,23,108,21],[53,26,108,24],[53,30,108,28,"URLSearchParams"],[53,45,108,43],[53,46,108,44],[54,8,109,6,"filter_type"],[54,19,109,17],[54,21,109,19,"params"],[54,27,109,25],[54,28,109,26,"filterType"],[54,38,109,36],[55,8,110,6,"skip"],[55,12,110,10],[55,14,110,12,"String"],[55,20,110,18],[55,21,110,19,"params"],[55,27,110,25],[55,28,110,26,"skip"],[55,32,110,30],[55,36,110,34],[55,37,110,35],[55,38,110,36],[56,8,111,6,"limit"],[56,13,111,11],[56,15,111,13,"String"],[56,21,111,19],[56,22,111,20,"params"],[56,28,111,26],[56,29,111,27,"limit"],[56,34,111,32],[56,38,111,36],[56,40,111,38],[57,6,112,4],[57,7,112,5],[57,8,112,6],[58,6,114,4],[58,10,114,8,"params"],[58,16,114,14],[58,17,114,15,"searchQuery"],[58,28,114,26],[58,30,114,28],[59,8,115,6,"queryParams"],[59,19,115,17],[59,20,115,18,"append"],[59,26,115,24],[59,27,115,25],[59,41,115,39],[59,43,115,41,"params"],[59,49,115,47],[59,50,115,48,"searchQuery"],[59,61,115,59],[59,62,115,60],[60,6,116,4],[61,6,118,4],[61,12,118,10,"response"],[61,20,118,18],[61,23,118,21],[61,29,118,27,"api"],[61,41,118,30],[61,42,118,30,"api"],[61,45,118,30],[61,46,118,31,"get"],[61,49,118,34],[61,50,118,35],[61,76,118,61,"queryParams"],[61,87,118,72],[61,88,118,73,"toString"],[61,96,118,81],[61,97,118,82],[61,98,118,83],[61,100,118,85],[61,101,118,86],[62,6,119,4],[62,13,119,11,"response"],[62,21,119,19],[62,22,119,20,"data"],[62,26,119,24],[63,4,120,2],[64,4,122,2],[64,10,122,8,"updateConversationSettings"],[64,36,122,34,"updateConversationSettings"],[64,37,122,35,"conversationId"],[64,51,122,57],[64,53,122,59,"settings"],[64,61,126,3],[64,63,126,20],[65,6,127,4],[65,12,127,10,"api"],[65,24,127,13],[65,25,127,13,"api"],[65,28,127,13],[65,29,127,14,"put"],[65,32,127,17],[65,33,127,18],[65,51,127,36,"conversationId"],[65,65,127,50],[65,76,127,61],[65,78,127,63,"settings"],[65,86,127,71],[65,87,127,72],[66,4,128,2],[67,4,130,2],[67,10,130,8,"sendTypingIndicator"],[67,29,130,27,"sendTypingIndicator"],[67,30,130,28,"conversationId"],[67,44,130,50],[67,46,130,52,"isTyping"],[67,54,130,69],[67,56,130,86],[68,6,131,4],[68,12,131,10,"api"],[68,24,131,13],[68,25,131,13,"api"],[68,28,131,13],[68,29,131,14,"post"],[68,33,131,18],[68,34,131,19],[68,52,131,37,"conversationId"],[68,66,131,51],[68,75,131,60],[68,77,131,62],[69,8,132,6,"conversationId"],[69,22,132,20],[70,8,133,6,"userId"],[70,14,133,12],[70,16,133,14],[70,18,133,16],[71,8,133,18],[72,8,134,6,"isTyping"],[73,6,135,4],[73,7,135,5],[73,8,135,6],[74,4,136,2],[75,4,138,2],[75,10,138,8,"markMessageRead"],[75,25,138,23,"markMessageRead"],[75,26,138,24,"messageId"],[75,35,138,41],[75,37,138,58],[76,6,139,4],[76,12,139,10,"api"],[76,24,139,13],[76,25,139,13,"api"],[76,28,139,13],[76,29,139,14,"put"],[76,32,139,17],[76,33,139,18],[76,46,139,31,"messageId"],[76,55,139,40],[76,62,139,47],[76,63,139,48],[77,4,140,2],[78,4,142,2],[78,10,142,8,"markAllMessagesRead"],[78,29,142,27,"markAllMessagesRead"],[78,30,142,28,"conversationId"],[78,44,142,50],[78,46,142,67],[79,6,143,4],[79,12,143,10,"api"],[79,24,143,13],[79,25,143,13,"api"],[79,28,143,13],[79,29,143,14,"put"],[79,32,143,17],[79,33,143,18],[79,51,143,36,"conversationId"],[79,65,143,50],[79,76,143,61],[79,77,143,62],[80,4,144,2],[81,4,146,2],[81,10,146,8,"getUserActivity"],[81,25,146,23,"getUserActivity"],[81,26,146,24,"userId"],[81,32,146,38],[81,34,151,5],[82,6,152,4],[82,12,152,10,"response"],[82,20,152,18],[82,23,152,21],[82,29,152,27,"api"],[82,41,152,30],[82,42,152,30,"api"],[82,45,152,30],[82,46,152,31,"get"],[82,49,152,34],[82,50,152,35],[82,60,152,45,"userId"],[82,66,152,51],[82,77,152,62],[82,78,152,63],[83,6,153,4],[83,13,153,11,"response"],[83,21,153,19],[83,22,153,20,"data"],[83,26,153,24],[84,4,154,2],[85,4,156,2],[85,10,156,8,"updateUserActivity"],[85,28,156,26,"updateUserActivity"],[85,29,156,27,"status"],[85,35,156,73],[85,37,156,90],[86,6,157,4],[86,12,157,10,"api"],[86,24,157,13],[86,25,157,13,"api"],[86,28,157,13],[86,29,157,14,"put"],[86,32,157,17],[86,33,157,18],[86,49,157,34],[86,51,157,36],[87,8,157,38,"status"],[88,6,157,45],[88,7,157,46],[88,8,157,47],[89,4,158,2],[90,4,160,2],[90,10,160,8,"queueOfflineMessage"],[90,29,160,27,"queueOfflineMessage"],[90,30,160,28,"messageData"],[90,41,160,85],[90,43,160,117],[91,6,161,4],[91,12,161,10,"response"],[91,20,161,18],[91,23,161,21],[91,29,161,27,"api"],[91,41,161,30],[91,42,161,30,"api"],[91,45,161,30],[91,46,161,31,"post"],[91,50,161,35],[91,51,161,36],[91,68,161,53],[91,70,161,55,"messageData"],[91,81,161,66],[91,82,161,67],[92,6,162,4],[92,13,162,11,"response"],[92,21,162,19],[92,22,162,20,"data"],[92,26,162,24],[93,4,163,2],[94,4,165,2],[94,10,165,8,"syncOfflineMessages"],[94,29,165,27,"syncOfflineMessages"],[94,30,165,27],[94,32,169,5],[95,6,170,4],[95,12,170,10,"response"],[95,20,170,18],[95,23,170,21],[95,29,170,27,"api"],[95,41,170,30],[95,42,170,30,"api"],[95,45,170,30],[95,46,170,31,"post"],[95,50,170,35],[95,51,170,36],[95,67,170,52],[95,68,170,53],[96,6,171,4],[96,13,171,11,"response"],[96,21,171,19],[96,22,171,20,"data"],[96,26,171,24],[97,4,172,2],[98,2,173,0],[99,2,175,7],[99,8,175,13,"chatApi"],[99,15,175,20],[99,18,175,23],[99,22,175,27,"ChatApiService"],[99,36,175,41],[99,37,175,42],[99,38,175,43],[100,0,175,44],[100,3]],"functionMap":{"names":["<global>","ChatApiService","ChatApiService#getConversations","ChatApiService#createConversation","ChatApiService#getMessages","ChatApiService#sendMessage","ChatApiService#getOrCreateDirectConversation","conversations.find$argument_0","conv.participants.some$argument_0","ChatApiService#getFilteredConversations","ChatApiService#updateConversationSettings","ChatApiService#sendTypingIndicator","ChatApiService#markMessageRead","ChatApiService#markAllMessagesRead","ChatApiService#getUserActivity","ChatApiService#updateUserActivity","ChatApiService#queueOfflineMessage","ChatApiService#syncOfflineMessages"],"mappings":"AAA;ACsD;ECC;GDG;EEE;GFG;EGE;GHG;EIE;GJO;EKG;wCCG;6BCG,yBD,CD;GLY;EQG;GRkB;ESE;GTM;EUE;GVM;EWE;GXE;EYE;GZE;EaE;GbQ;EcE;GdE;EeE;GfG;EgBE;GhBO;CDC"},"hasCjsExports":false},"type":"js/module"}]}